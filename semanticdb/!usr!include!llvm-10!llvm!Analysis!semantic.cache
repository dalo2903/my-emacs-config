;; Object semanticdb-project-database-file-1559f80a1a08
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1559f80a1a08"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1559f80a54dc"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_CGSCCPASSMANAGER_H" variable (:constant-flag t) nil [4908 4940])
            ("llvm/ADT/DenseMap.h" include nil nil [4942 4972])
            ("llvm/ADT/DenseSet.h" include nil nil [4973 5003])
            ("llvm/ADT/PriorityWorklist.h" include nil nil [5004 5042])
            ("llvm/ADT/STLExtras.h" include nil nil [5043 5074])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [5075 5108])
            ("llvm/ADT/SmallVector.h" include nil nil [5109 5142])
            ("llvm/Analysis/LazyCallGraph.h" include nil nil [5143 5183])
            ("llvm/IR/CallSite.h" include nil nil [5184 5213])
            ("llvm/IR/Function.h" include nil nil [5214 5243])
            ("llvm/IR/InstIterator.h" include nil nil [5244 5277])
            ("llvm/IR/PassManager.h" include nil nil [5278 5310])
            ("llvm/IR/ValueHandle.h" include nil nil [5311 5343])
            ("llvm/Support/Debug.h" include nil nil [5344 5375])
            ("llvm/Support/raw_ostream.h" include nil nil [5376 5413])
            ("algorithm" include (:system-flag t) nil [5414 5434])
            ("cassert" include (:system-flag t) nil [5435 5453])
            ("utility" include (:system-flag t) nil [5454 5472])
            ("llvm" type
               (:members 
                  ( ("CGSCCUpdateResult" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [5492 5517])
                    ("Module" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [5518 5531])
                    ("DEBUG_TYPE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5589 5599])
                    ("AllAnalysesOn" type
                       (:prototype t
                        :template-specifier 
                          ( ("LazyCallGraph::SCC" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5696 5736])
                    ("AnalysisManager" type
                       (:prototype t
                        :template-specifier 
                          ( ("LazyCallGraph::SCC" type nil nil nil)
                            ("LazyCallGraph" type (:reference 1) nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5754 5813])
                    ("AnalysisManager" variable (:type "int") (reparse-symbol namespacesubparts) [6141 6194])
                    ("run" function
                       (:type ("PreservedAnalyses" type (:type "class") nil nil)
                        :arguments 
                          ( ("InitialC" variable
                               (:reference 1
                                :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6535 6564])
                            ("AM" variable
                               (:reference 1
                                :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6603 6628])
                            ("G" variable
                               (:reference 1
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6667 6684])
                            ("UR" variable
                               (:reference 1
                                :type ("CGSCCUpdateResult" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6685 6707]))                          
                        :parent "PassManager"
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [6396 6708])
                    ("PassManager" type
                       (:prototype t
                        :template-specifier 
                          ( ("LazyCallGraph::SCC" type nil nil nil)
                            ("CGSCCAnalysisManager" type nil nil nil)
                            ("LazyCallGraph" type (:reference 1) nil nil)
                            ("CGSCCUpdateResult" type (:reference 1) nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [6725 6857])
                    ("PassManager" variable (:type "int") (reparse-symbol namespacesubparts) [7138 7246])
                    ("RequireAnalysisPass" type
                       (:template 
                          ( ("AnalysisT" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("run" function
                               (:arguments 
                                  ( ("C" variable
                                       (:reference 1
                                        :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7731 7753])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7754 7779])
                                    ("CG" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7804 7822])
                                    ("" variable
                                       (:reference 1
                                        :type ("CGSCCUpdateResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7823 7843]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7709 7937]))                          
                        :superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("AnalysisT" type nil nil nil)
                            ("LazyCallGraph::SCC" type nil nil nil)
                            ("CGSCCAnalysisManager" type nil nil nil)
                            ("LazyCallGraph" type (:reference 1) nil nil)
                            ("CGSCCUpdateResult" type (:reference 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [7318 7940])
                    ("InnerAnalysisManagerProxy" variable (:type "int") (reparse-symbol namespacesubparts) [8045 8101])
                    ("Result" type
                       (:type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [8343 8350])
                            ("Result" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("InnerAM" variable
                                       (:reference 1
                                        :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8369 8399])
                                    ("G" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8400 8417]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8362 8453])
                            ("getManager" function (:type ("CGSCCAnalysisManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8498 8553])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9096 9106])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9107 9135])
                                    ("Inv" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9154 9194]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9080 9195])
                            ("private" label nil (reparse-symbol classsubparts) [9197 9205])
                            ("InnerAM" variable
                               (:pointer 1
                                :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9208 9238])
                            ("G" variable
                               (:pointer 1
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9241 9258]))                          
                        :parent "CGSCCAnalysisManagerModuleProxy")
                        (reparse-symbol namespacesubparts) [8283 9261])
                    ("run" function
                       (:type ("CGSCCAnalysisManagerModuleProxy::Result" type (:type "class") nil nil)
                        :arguments 
                          ( ("M" variable
                               (:reference 1
                                :type ("Module" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9486 9496])
                            ("AM" variable
                               (:reference 1
                                :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9497 9523]))                          
                        :parent "CGSCCAnalysisManagerModuleProxy"
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [9397 9524])
                    ("InnerAnalysisManagerProxy" type
                       (:prototype t
                        :template-specifier 
                          ( ("CGSCCAnalysisManager" type nil nil nil)
                            ("Module" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9629 9691])
                    ("OuterAnalysisManagerProxy" type
                       (:prototype t
                        :template-specifier 
                          ( ("ModuleAnalysisManager" type nil nil nil)
                            ("LazyCallGraph::SCC" type nil nil nil)
                            ("LazyCallGraph" type (:reference 1) nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9709 9806])
                    ("OuterAnalysisManagerProxy" variable (:type "int") (reparse-symbol namespacesubparts) [9910 10026])
                    ("CGSCCUpdateResult" type
                       (:members 
                          ( ("RCWorklist" variable (:type ("SmallPriorityWorklist" type
                                 (:template-specifier 
                                    ( ("LazyCallGraph::RefSCC" type (:pointer 1) nil nil)
                                      ("1"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [11332 11394])
                            ("CWorklist" variable (:type ("SmallPriorityWorklist" type
                                 (:template-specifier 
                                    ( ("LazyCallGraph::SCC" type (:pointer 1) nil nil)
                                      ("1"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [12079 12137])
                            ("InvalidatedRefSCCs" variable (:type ("SmallPtrSetImpl" type
                                 (:template-specifier 
                                    ( ("LazyCallGraph::RefSCC" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [12453 12514])
                            ("InvalidatedSCCs" variable (:type ("SmallPtrSetImpl" type
                                 (:template-specifier 
                                    ( ("LazyCallGraph::SCC" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [12823 12878])
                            ("UpdatedRC" variable
                               (:pointer 1
                                :type ("LazyCallGraph::RefSCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13369 13402])
                            ("UpdatedC" variable
                               (:pointer 1
                                :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13884 13913])
                            ("CrossSCCPA" variable (:type ("PreservedAnalyses" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14748 14777])
                            ("InlinedInternalEdges" variable (:type ("SmallDenseSet" type
                                 (:template-specifier 
                                    ( ("std::pair" type (:template-specifier 
                                        ( ("LazyCallGraph::Node" type (:pointer 1) nil nil)
                                          ("LazyCallGraph::SCC" type (:pointer 1) nil nil))                                        ) nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [15121 15222]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [10822 15225])
                    ("ModuleToPostOrderCGSCCPassAdaptor" type
                       (:template 
                          ( ("CGSCCPassT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [15877 15884])
                            ("ModuleToPostOrderCGSCCPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Pass" variable (:type ("CGSCCPassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15930 15946]))                                  
                                :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15896 15979])
                            ("ModuleToPostOrderCGSCCPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16135 16180]))                                  
                                :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16094 16206])
                            ("ModuleToPostOrderCGSCCPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16244 16280])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16280 16284]))                                  
                                :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16210 16321])
                            ("swap" function
                               (:typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16342 16381])
                                    ("RHS" variable
                                       (:reference 1
                                        :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16401 16440]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16325 16481])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16533 16571]))                                  
                                :type ("ModuleToPostOrderCGSCCPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16485 16617])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16701 16711])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16712 16738]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16679 16739])
                            ("private" label nil (reparse-symbol classsubparts) [16741 16749])
                            ("Pass" variable (:type ("CGSCCPassT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16752 16768]))                          
                        :superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15730 16771])
                    ("createModuleToPostOrderCGSCCPassAdaptor" function
                       (:template 
                          ( ("CGSCCPassT" type (:type "class") nil nil))                          
                        :type ("ModuleToPostOrderCGSCCPassAdaptor" type
                             (:template-specifier 
                                ( ("CGSCCPassT" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Pass" variable (:type ("CGSCCPassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16978 16994]))                          )
                        (reparse-symbol namespacesubparts) [16861 17071])
                    ("FunctionAnalysisManagerCGSCCProxy" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [17656 17663])
                            ("Result" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [17683 17690])
                                    ("Result" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("FAM" variable
                                               (:reference 1
                                                :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17711 17740]))                                          
                                        :type ("Result" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17704 17755])
                                    ("getManager" function (:type ("FunctionAnalysisManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17804 17858])
                                    ("invalidate" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17880 17902])
                                            ("PA" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17903 17931])
                                            ("Inv" variable
                                               (:reference 1
                                                :type ("CGSCCAnalysisManager::Invalidator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17952 17991]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [17864 17992])
                                    ("private" label nil (reparse-symbol classsubparts) [17996 18004])
                                    ("FAM" variable
                                       (:pointer 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18009 18038]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [17666 18043])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("C" variable
                                       (:reference 1
                                        :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18139 18161])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18162 18187])
                                    ("" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18188 18204]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18128 18205])
                            ("private" label nil (reparse-symbol classsubparts) [18207 18215])
                            ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [18218 18278])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18282 18305]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [17548 18308])
                    ("OuterAnalysisManagerProxy" type
                       (:prototype t
                        :template-specifier 
                          ( ("CGSCCAnalysisManager" type nil nil nil)
                            ("Function" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [18326 18390])
                    ("OuterAnalysisManagerProxy" variable (:type "int") (reparse-symbol namespacesubparts) [18499 18557])
                    ("updateCGAndAnalysisManagerForFunctionPass" function
                       (:prototype-flag t
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18970 18987])
                            ("C" variable
                               (:reference 1
                                :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18988 19010])
                            ("N" variable
                               (:reference 1
                                :type ("LazyCallGraph::Node" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19011 19034])
                            ("AM" variable
                               (:reference 1
                                :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19039 19064])
                            ("UR" variable
                               (:reference 1
                                :type ("CGSCCUpdateResult" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19065 19087]))                          
                        :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18903 19088])
                    ("CGSCCToFunctionPassAdaptor" type
                       (:template 
                          ( ("FunctionPassT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [19655 19662])
                            ("CGSCCToFunctionPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Pass" variable (:type ("FunctionPassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19701 19720]))                                  
                                :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19674 19753])
                            ("CGSCCToFunctionPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19895 19933]))                                  
                                :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19868 19959])
                            ("CGSCCToFunctionPassAdaptor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19990 20019])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20019 20023]))                                  
                                :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19963 20060])
                            ("swap" function
                               (:typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20081 20113])
                                    ("RHS" variable
                                       (:reference 1
                                        :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20133 20165]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20064 20206])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20248 20279]))                                  
                                :type ("CGSCCToFunctionPassAdaptor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20210 20325])
                            ("run" function
                               (:arguments 
                                  ( ("C" variable
                                       (:reference 1
                                        :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20417 20439])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20440 20465])
                                    ("CG" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20490 20508])
                                    ("UR" variable
                                       (:reference 1
                                        :type ("CGSCCUpdateResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20509 20531]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20395 23353])
                            ("private" label nil (reparse-symbol classsubparts) [23355 23363])
                            ("Pass" variable (:type ("FunctionPassT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23366 23385]))                          
                        :superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [19516 23388])
                    ("createCGSCCToFunctionPassAdaptor" function
                       (:template 
                          ( ("FunctionPassT" type (:type "class") nil nil))                          
                        :type ("CGSCCToFunctionPassAdaptor" type
                             (:template-specifier 
                                ( ("FunctionPassT" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Pass" variable (:type ("FunctionPassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23587 23606]))                          )
                        (reparse-symbol namespacesubparts) [23478 23679])
                    ("DevirtSCCRepeatedPass" type
                       (:template 
                          ( ("PassT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [24605 24612])
                            ("DevirtSCCRepeatedPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Pass" variable (:type ("PassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24646 24657])
                                    ("MaxIterations" variable (:type "int") (reparse-symbol arg-sub-list) [24658 24676]))                                  
                                :type ("DevirtSCCRepeatedPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24624 24739])
                            ("run" function
                               (:arguments 
                                  ( ("InitialC" variable
                                       (:reference 1
                                        :type ("LazyCallGraph::SCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24882 24911])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("CGSCCAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24912 24937])
                                    ("CG" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24962 24980])
                                    ("UR" variable
                                       (:reference 1
                                        :type ("CGSCCUpdateResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24981 25003]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24860 30653])
                            ("private" label nil (reparse-symbol classsubparts) [30655 30663])
                            ("Pass" variable (:type ("PassT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30666 30677])
                            ("MaxIterations" variable (:type "int") (reparse-symbol classsubparts) [30680 30698]))                          
                        :superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [24492 30701])
                    ("createDevirtSCCRepeatedPass" function
                       (:template 
                          ( ("PassT" type (:type "class") nil nil))                          
                        :type ("DevirtSCCRepeatedPass" type
                             (:template-specifier 
                                ( ("PassT" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Pass" variable (:type ("PassT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30874 30885])
                            ("MaxIterations" variable (:type "int") (reparse-symbol arg-sub-list) [30943 30961]))                          )
                        (reparse-symbol namespacesubparts) [30791 31036])
                    ("run" function
                       (:template 
                          ( ("CGSCCPassT" type (:type "class") nil nil))                          
                        :type ("PreservedAnalyses" type (:type "class") nil nil)
                        :arguments 
                          ( ("M" variable
                               (:reference 1
                                :type ("Module" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [31209 31219])
                            ("AM" variable
                               (:reference 1
                                :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [31271 31297]))                          
                        :parent "ModuleToPostOrderCGSCCPassAdaptor")
                        (reparse-symbol namespacesubparts) [31109 40476]))                  
                :type "namespace")
                nil [5474 40536]))          
      :file "CGSCCPassManager.h"
      :pointmax 40603
      :fsize 40602
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((EXPLICIT 24615 . 24623) (punctuation 20018 . 20019) (EXPLICIT 19665 . 19673) (punctuation 18493 . 18494) (symbol 18459 . 18492) (USING 18453 . 18458) (TEMPLATE 18317 . 18325) (EXTERN 18310 . 18316) (EXPLICIT 17695 . 17703) (EXPLICIT 17695 . 17703) (punctuation 16279 . 16280) (EXPLICIT 15887 . 15895) (punctuation 9904 . 9905) (symbol 9872 . 9903) (USING 9866 . 9871) (TEMPLATE 9700 . 9708) (EXTERN 9693 . 9699) (TEMPLATE 9620 . 9628) (EXTERN 9613 . 9619) (EXPLICIT 8353 . 8361) (punctuation 8039 . 8040) (symbol 8007 . 8038) (USING 8001 . 8006) (punctuation 7132 . 7133) (symbol 7115 . 7131) (USING 7109 . 7114) (TEMPLATE 6716 . 6724) (EXTERN 6709 . 6715) (punctuation 6135 . 6136) (symbol 6114 . 6134) (USING 6108 . 6113) (TEMPLATE 5745 . 5753) (EXTERN 5738 . 5744) (TEMPLATE 5687 . 5695) (EXTERN 5680 . 5686))
      :lexical-table 
        '(("LLVM_ANALYSIS_CGSCCPASSMANAGER_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a54fc"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_LAZYCALLGRAPH_H" variable (:constant-flag t) nil [1707 1736])
            ("llvm/ADT/ArrayRef.h" include nil nil [1738 1768])
            ("llvm/ADT/DenseMap.h" include nil nil [1769 1799])
            ("llvm/ADT/Optional.h" include nil nil [1800 1830])
            ("llvm/ADT/PointerIntPair.h" include nil nil [1831 1867])
            ("llvm/ADT/STLExtras.h" include nil nil [1868 1899])
            ("llvm/ADT/SetVector.h" include nil nil [1900 1931])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [1932 1965])
            ("llvm/ADT/SmallVector.h" include nil nil [1966 1999])
            ("llvm/ADT/StringRef.h" include nil nil [2000 2031])
            ("llvm/ADT/iterator.h" include nil nil [2032 2062])
            ("llvm/ADT/iterator_range.h" include nil nil [2063 2099])
            ("llvm/Analysis/TargetLibraryInfo.h" include nil nil [2100 2144])
            ("llvm/IR/Constant.h" include nil nil [2145 2174])
            ("llvm/IR/Constants.h" include nil nil [2175 2205])
            ("llvm/IR/Function.h" include nil nil [2206 2235])
            ("llvm/IR/PassManager.h" include nil nil [2236 2268])
            ("llvm/Support/Allocator.h" include nil nil [2269 2304])
            ("llvm/Support/Casting.h" include nil nil [2305 2338])
            ("llvm/Support/raw_ostream.h" include nil nil [2339 2376])
            ("cassert" include (:system-flag t) nil [2377 2395])
            ("iterator" include (:system-flag t) nil [2396 2415])
            ("string" include (:system-flag t) nil [2416 2433])
            ("utility" include (:system-flag t) nil [2434 2452])
            ("llvm" type
               (:members 
                  ( ("Module" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2472 2485])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2486 2498])
                    ("LazyCallGraph" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [5301 5308])
                            ("Node" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5311 5322])
                            ("EdgeSequence" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5325 5344])
                            ("SCC" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5347 5357])
                            ("RefSCC" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5360 5373])
                            ("edge_iterator" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5376 5396])
                            ("call_edge_iterator" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [5399 5424])
                            ("Edge" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [6278 6285])
                                    ("Edge" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("Edge" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6381 6388])
                                    ("Edge" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6407 6415])
                                            ("K" variable (:type ("Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6416 6423]))                                          
                                        :type ("Edge" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6402 6424])
                                    ("getKind" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("Kind" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6665 6686])
                                    ("isCall" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [6819 6839])
                                    ("getNode" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6959 6981])
                                    ("getFunction" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7094 7124])
                                    ("private" label nil (reparse-symbol classsubparts) [7128 7136])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [7141 7167])
                                    ("EdgeSequence" variable (:type "int") (reparse-symbol classsubparts) [7169 7182])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [7187 7213])
                                    ("RefSCC" variable (:type "int") (reparse-symbol classsubparts) [7215 7222])
                                    ("Value" variable (:type ("PointerIntPair" type
                                         (:template-specifier 
                                            ( ("Node" type (:pointer 1) nil nil)
                                              ("1")
                                              ("Kind" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [7228 7266])
                                    ("setKind" function
                                       (:arguments 
                                          ( ("K" variable (:type ("Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7285 7292]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7272 7313]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [6263 7318])
                            ("EdgeSequence" type
                               (:members 
                                  ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [7899 7925])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [7931 7957])
                                    ("Node" variable (:type "int") (reparse-symbol classsubparts) [7959 7964])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [7969 7995])
                                    ("RefSCC" variable (:type "int") (reparse-symbol classsubparts) [7997 8004])
                                    ("SmallVector" variable (:type "int") (reparse-symbol classsubparts) [8026 8047])
                                    ("SmallVectorImpl" variable (:type "int") (reparse-symbol classsubparts) [8072 8094])
                                    ("public" label nil (reparse-symbol classsubparts) [8098 8105])
                                    ("iterator" type
                                       (:superclasses 
                                          ( ("iterator_adaptor_base" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [8347 8373])
                                            ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [8381 8407])
                                            ("Node" variable (:type "int") (reparse-symbol classsubparts) [8409 8414])
                                            ("E" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8422 8446])
                                            ("iterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("BaseI" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8533 8561])
                                                    ("E" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8562 8586]))                                                  
                                                :type ("iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [8524 8688])
                                            ("public" label nil (reparse-symbol classsubparts) [8694 8701])
                                            ("++" function
                                               (:operator-flag t
                                                :type ("iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [8784 8899]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [8186 8906])
                                    ("call_iterator" type
                                       (:superclasses 
                                          ( ("iterator_adaptor_base" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [9276 9302])
                                            ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [9310 9336])
                                            ("Node" variable (:type "int") (reparse-symbol classsubparts) [9338 9343])
                                            ("E" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9351 9375])
                                            ("advanceToNextEdge" function (:type "void") (reparse-symbol classsubparts) [9444 9541])
                                            ("call_iterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("BaseI" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9633 9661])
                                                    ("E" variable (:type ("VectorImplT::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9662 9686]))                                                  
                                                :type ("call_iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [9619 9772])
                                            ("public" label nil (reparse-symbol classsubparts) [9778 9785])
                                            ("++" function
                                               (:operator-flag t
                                                :type ("call_iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [9873 9974]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [9105 9981])
                                    ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9987 10052])
                                    ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10057 10118])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [10141 10147]))                                          
                                        :type ("Edge" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10124 10168])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10190 10198]))                                          
                                        :type ("Edge" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10173 10395])
                                    ("lookup" function
                                       (:pointer 1
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10414 10422]))                                          
                                        :type ("Edge" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10401 10595])
                                    ("call_begin" function (:type ("call_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10601 10691])
                                    ("call_end" function (:type ("call_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10696 10772])
                                    ("calls" function (:type ("iterator_range" type
                                         (:template-specifier 
                                            ( ("call_iterator" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [10778 10874])
                                    ("empty" function (:type "bool") (reparse-symbol classsubparts) [10880 10987])
                                    ("private" label nil (reparse-symbol classsubparts) [10991 10999])
                                    ("Edges" variable (:type ("VectorT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11004 11018])
                                    ("EdgeIndexMap" variable (:type ("DenseMap" type
                                         (:template-specifier 
                                            ( ("Node" type (:pointer 1) nil nil)
                                              ("int" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [11023 11058])
                                    ("insertEdgeInternal" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("ChildN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11172 11185])
                                            ("EK" variable (:type ("Edge::Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11186 11200]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11148 11201])
                                    ("setEdgeKind" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("ChildN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11272 11285])
                                            ("EK" variable (:type ("Edge::Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11286 11300]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11255 11301])
                                    ("removeEdgeInternal" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("ChildN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11397 11410]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [11373 11411])
                                    ("replaceEdgeKey" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("OldTarget" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11705 11725])
                                            ("NewTarget" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11726 11746]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11685 11747]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [7874 11752])
                            ("Node" type
                               (:members 
                                  ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [12338 12364])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [12370 12396])
                                    ("RefSCC" variable (:type "int") (reparse-symbol classsubparts) [12398 12405])
                                    ("public" label nil (reparse-symbol classsubparts) [12409 12416])
                                    ("getGraph" function
                                       (:methodconst-flag t
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12421 12467])
                                    ("getFunction" function
                                       (:methodconst-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12473 12517])
                                    ("getName" function
                                       (:methodconst-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12523 12573])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [12644 12658]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12628 12687])
                                    ("!=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [12708 12722]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12692 12755])
                                    ("isPopulated" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12823 12876])
                                    ("isDead" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [13157 13304])
                                    ("" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :type ("EdgeSequence" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13443 13599])
                                    ("->" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :pointer 1
                                        :type ("EdgeSequence" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13604 13656])
                                    ("populate" function (:type ("EdgeSequence" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14253 14355])
                                    ("private" label nil (reparse-symbol classsubparts) [14359 14367])
                                    ("G" variable
                                       (:pointer 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [14372 14389])
                                    ("F" variable
                                       (:pointer 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [14394 14406])
                                    ("DFSNumber" variable
                                       (:default-value "0"
                                        :type "int")
                                        (reparse-symbol classsubparts) [14643 14661])
                                    ("LowLink" variable
                                       (:default-value "0"
                                        :type "int")
                                        (reparse-symbol classsubparts) [14666 14682])
                                    ("Edges" variable (:type ("Optional" type
                                         (:template-specifier 
                                            ( ("EdgeSequence" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [14688 14717])
                                    ("Node" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("G" variable
                                               (:reference 1
                                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14820 14837])
                                            ("F" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14838 14850]))                                          
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [14815 14868])
                                    ("populateSlow" function
                                       (:prototype-flag t
                                        :type ("EdgeSequence" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [14926 14955])
                                    ("replaceFunction" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("NewF" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15239 15254]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [15218 15255])
                                    ("clear" function (:type "void") (reparse-symbol classsubparts) [15261 15292])
                                    ("<<" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("OS" variable
                                               (:reference 1
                                                :type ("raw_ostream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15377 15393])
                                            ("N" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15394 15408]))                                          
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [15346 15451])
                                    ("dump" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [15514 15532]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [12321 15537])
                            ("SCC" type
                               (:members 
                                  ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [16167 16193])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [16199 16225])
                                    ("Node" variable (:type "int") (reparse-symbol classsubparts) [16227 16232])
                                    ("OuterRefSCC" variable
                                       (:pointer 1
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16238 16258])
                                    ("Nodes" variable (:type ("SmallVector" type
                                         (:template-specifier 
                                            ( ("Node" type (:pointer 1) nil nil)
                                              ("1"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [16263 16292])
                                    ("SCC" function
                                       (:template 
                                          ( ("NodeRangeT" type (:type "class") nil nil))                                          
                                        :type ("SCC" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("OuterRefSCC" variable
                                               (:reference 1
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [16337 16357])
                                            ("" variable
                                               (:reference 1
                                                :type ("NodeRangeT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [16358 16371])
                                            ("" variable (:type ("Nodes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16371 16377]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [16298 16456])
                                    ("clear" function (:type "void") (reparse-symbol classsubparts) [16462 16532])
                                    ("<<" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("OS" variable
                                               (:reference 1
                                                :type ("raw_ostream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [16930 16946])
                                            ("C" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [16947 16960]))                                          
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16899 17307])
                                    ("dump" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [17369 17387])
                                    ("verify" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [17765 17779])
                                    ("public" label nil (reparse-symbol classsubparts) [17790 17797])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17883 17931])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17936 17980])
                                    ("size" function
                                       (:methodconst-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [17986 18027])
                                    ("getOuterRefSCC" function
                                       (:methodconst-flag t
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18033 18088])
                                    ("isParentOf" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18255 18268]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [18239 18275])
                                    ("isAncestorOf" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18639 18652]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [18621 18659])
                                    ("isChildOf" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18841 18854]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [18826 18892])
                                    ("isDescendantOf" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19084 19097]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [19064 19137])
                                    ("getName" function
                                       (:methodconst-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19372 19522]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [16151 19527])
                            ("RefSCC" type
                               (:members 
                                  ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [20289 20315])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [20321 20347])
                                    ("Node" variable (:type "int") (reparse-symbol classsubparts) [20349 20354])
                                    ("G" variable
                                       (:pointer 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20360 20377])
                                    ("SCCs" variable (:type ("SmallVector" type
                                         (:template-specifier 
                                            ( ("SCC" type (:pointer 1) nil nil)
                                              ("4"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [20427 20454])
                                    ("SCCIndices" variable (:type ("SmallDenseMap" type
                                         (:template-specifier 
                                            ( ("SCC" type (:pointer 1) nil nil)
                                              ("int" type nil nil nil)
                                              ("4"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [20515 20555])
                                    ("RefSCC" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("G" variable
                                               (:reference 1
                                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20692 20709]))                                          
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20685 20710])
                                    ("clear" function (:type "void") (reparse-symbol classsubparts) [20716 20782])
                                    ("<<" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("OS" variable
                                               (:reference 1
                                                :type ("raw_ostream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [21153 21169])
                                            ("RC" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [21170 21187]))                                          
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [21122 21534])
                                    ("dump" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [21599 21617])
                                    ("verify" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [22061 22075])
                                    ("handleTrivialEdgeInsertion" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22220 22234])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22235 22249]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [22188 22250])
                                    ("public" label nil (reparse-symbol classsubparts) [22254 22261])
                                    ("iterator_range" variable (:type "int") (reparse-symbol classsubparts) [22359 22384])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22487 22534])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22539 22582])
                                    ("size" function
                                       (:methodconst-flag t
                                        :type ("ssize_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22588 22632])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Idx" variable (:type "int") (reparse-symbol arg-sub-list) [22654 22662]))                                          
                                        :type ("SCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22638 22685])
                                    ("find" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("C" variable
                                               (:reference 1
                                                :type ("SCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22705 22712]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22691 22783])
                                    ("isParentOf" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("RC" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22961 22978]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [22945 22985])
                                    ("isAncestorOf" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("RC" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23291 23308]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [23273 23315])
                                    ("isChildOf" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("RC" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23500 23517]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [23485 23556])
                                    ("isDescendantOf" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("RC" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RefSCC" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23867 23884]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [23847 23935])
                                    ("getName" function
                                       (:methodconst-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24176 24326])
                                    ("switchInternalEdgeToCall" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25758 25772])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25773 25787])
                                            ("" variable (:type ("function_ref" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25796 25809])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [25809 25841])
                                            ("" variable (:type ("MergeCB" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25843 25855]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [25719 25857])
                                    ("switchTrivialInternalEdgeToRef" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26219 26233])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26234 26248]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [26183 26249])
                                    ("switchInternalEdgeToRef" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27349 27363])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27417 27431]))                                          
                                        :type ("iterator_range" type
                                             (:template-specifier 
                                                ( ("iterator" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [27300 27432])
                                    ("switchOutgoingEdgeToCall" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27646 27660])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27661 27675]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [27616 27676])
                                    ("switchOutgoingEdgeToRef" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27879 27893])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27894 27908]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [27850 27909])
                                    ("insertInternalRefEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28636 28650])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28651 28665]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [28609 28666])
                                    ("insertOutgoingEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28987 29001])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [29002 29016])
                                            ("EK" variable (:type ("Edge::Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29017 29031]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [28963 29032])
                                    ("insertIncomingRefEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [30470 30484])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [30536 30550]))                                          
                                        :type ("SmallVector" type
                                             (:template-specifier 
                                                ( ("RefSCC" type (:pointer 1) nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [30423 30551])
                                    ("removeOutgoingEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31143 31157])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31158 31172]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [31119 31173])
                                    ("removeInternalRefEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [33520 33534])
                                            ("TargetNs" variable (:type ("ArrayRef" type
                                                 (:template-specifier 
                                                    ( ("Node" type (:pointer 1) nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [33586 33612]))                                          
                                        :type ("SmallVector" type
                                             (:template-specifier 
                                                ( ("RefSCC" type (:pointer 1) nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [33473 33613])
                                    ("insertTrivialCallEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [34105 34119])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [34120 34134]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [34078 34135])
                                    ("insertTrivialRefEdge" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("SourceN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [34627 34641])
                                            ("TargetN" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [34642 34656]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [34601 34657])
                                    ("replaceNodeFunction" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("Node" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [35139 35147])
                                            ("NewF" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [35148 35163]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [35114 35164]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [20270 35180])
                            ("postorder_ref_scc_iterator" type
                               (:superclasses 
                                  ( ("iterator_facade_base" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [35742 35768])
                                    ("LazyCallGraph" friend nil (reparse-symbol classsubparts) [35774 35800])
                                    ("Node" variable (:type "int") (reparse-symbol classsubparts) [35802 35807])
                                    ("IsAtEndT" type (:type "struct") (reparse-symbol classsubparts) [35880 35899])
                                    ("G" variable
                                       (:pointer 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [35905 35922])
                                    ("RC" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [35927 35948])
                                    ("postorder_ref_scc_iterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("G" variable
                                               (:reference 1
                                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36026 36043]))                                          
                                        :type ("postorder_ref_scc_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [35999 36071])
                                    ("postorder_ref_scc_iterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("G" variable
                                               (:reference 1
                                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36184 36201])
                                            ("" variable (:type ("IsAtEndT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36202 36221]))                                          
                                        :type ("postorder_ref_scc_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [36157 36232])
                                    ("getRC" function
                                       (:pointer 1
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("G" variable
                                               (:reference 1
                                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36371 36388])
                                            ("Index" variable (:type "int") (reparse-symbol arg-sub-list) [36389 36399]))                                          
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [36350 36552])
                                    ("public" label nil (reparse-symbol classsubparts) [36556 36563])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("postorder_ref_scc_iterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36584 36622]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [36568 36677])
                                    ("" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [36683 36726])
                                    ("++" function
                                       (:operator-flag t
                                        :type ("postorder_ref_scc_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [36776 36963]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [35568 36968])
                            ("LazyCallGraph" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37229 37239])
                                    ("" variable (:type ("function_ref" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37256 37269])
                                    ("" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37269 37300])
                                    ("" variable (:type ("GetTLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37302 37309]))                                  
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37215 37310])
                            ("LazyCallGraph" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37328 37344])
                                    ("" variable (:type ("G" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37344 37346]))                                  
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37314 37347])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LazyCallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37375 37391])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37391 37395]))                                  
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37350 37396])
                            ("begin" function (:type ("EdgeSequence::iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37400 37461])
                            ("end" function (:type ("EdgeSequence::iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37464 37521])
                            ("buildRefSCCs" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [37525 37545])
                            ("postorder_ref_scc_begin" function (:type ("postorder_ref_scc_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37549 37782])
                            ("postorder_ref_scc_end" function (:type ("postorder_ref_scc_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37785 38094])
                            ("postorder_ref_sccs" function (:type ("iterator_range" type
                                 (:template-specifier 
                                    ( ("postorder_ref_scc_iterator" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [38098 38242])
                            ("lookup" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38338 38356]))                                  
                                :type ("Node" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38325 38393])
                            ("lookupSCC" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("N" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38562 38570]))                                  
                                :type ("SCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38547 38606])
                            ("lookupRefSCC" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("N" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38786 38794]))                                  
                                :type ("RefSCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38765 38893])
                            ("get" function
                               (:arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39011 39023]))                                  
                                :type ("Node" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39001 39115])
                            ("getLibFunctions" function
                               (:methodconst-flag t
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("Function" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [39310 39399])
                            ("isLibFunction" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39721 39733]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39702 39774])
                            ("insertEdge" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SourceN" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40296 40310])
                                    ("TargetN" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40311 40325])
                                    ("EK" variable (:type ("Edge::Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40326 40340]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [40280 40341])
                            ("insertEdge" function
                               (:arguments 
                                  ( ("Source" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40417 40434])
                                    ("Target" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40435 40452])
                                    ("EK" variable (:type ("Edge::Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40453 40467]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [40401 40526])
                            ("removeEdge" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SourceN" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40598 40612])
                                    ("TargetN" variable
                                       (:reference 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40613 40627]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [40582 40628])
                            ("removeEdge" function
                               (:arguments 
                                  ( ("Source" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40700 40717])
                                    ("Target" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40718 40735]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [40684 40790])
                            ("removeDeadFunction" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41734 41746]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [41710 41747])
                            ("visitReferences" function
                               (:template 
                                  ( ("CallbackT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Worklist" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Constant" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [42448 42486])
                                    ("Visited" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Constant" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [42517 42554])
                                    ("Callback" variable (:type ("CallbackT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42585 42604]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [42388 43945])
                            ("private" label nil (reparse-symbol classsubparts) [43956 43964])
                            ("SmallVectorImpl::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [43995 44037])
                            ("iterator_range" variable (:type "int") (reparse-symbol classsubparts) [44065 44101])
                            ("BPA" variable (:type ("SpecificBumpPtrAllocator" type
                                 (:template-specifier 
                                    ( ("Node" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44158 44193])
                            ("NodeMap" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Function" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("Node" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44240 44283])
                            ("EntryEdges" variable (:type ("EdgeSequence" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44434 44458])
                            ("SCCBPA" variable (:type ("SpecificBumpPtrAllocator" type
                                 (:template-specifier 
                                    ( ("SCC" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44514 44551])
                            ("SCCMap" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Node" type (:pointer 1) nil nil)
                                      ("SCC" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44599 44630])
                            ("RefSCCBPA" variable (:type ("SpecificBumpPtrAllocator" type
                                 (:template-specifier 
                                    ( ("RefSCC" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44689 44732])
                            ("PostOrderRefSCCs" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("RefSCC" type (:pointer 1) nil nil)
                                      ("16"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44851 44894])
                            ("RefSCCIndices" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("RefSCC" type (:pointer 1) nil nil)
                                      ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [44986 45024])
                            ("LibFunctions" variable (:type ("SmallSetVector" type
                                 (:template-specifier 
                                    ( ("Function" type (:pointer 1) nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [45195 45238])
                            ("insertInto" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45352 45364])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Node" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45365 45372])
                                    ("" variable (:type ("MappedN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45372 45380]))                                  
                                :type ("Node" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45335 45381])
                            ("updateGraphPtrs" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [45456 45479])
                            ("createSCC" function
                               (:pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45652 45657])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45661 45666]))                                  
                                :type ("SCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45637 45739])
                            ("createRefSCC" function
                               (:pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45920 45925])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45929 45934]))                                  
                                :type ("RefSCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45899 46013])
                            ("buildGenericSCCs" function
                               (:template 
                                  ( ("RootsT" type (:type "class") nil nil)
                                    ("GetBeginT" type (:type "class") nil nil)
                                    ("GetEndT" type (:type "class") nil nil)
                                    ("GetNodeT" type (:type "class") nil nil)
                                    ("FormSCCCallbackT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("RootsT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46716 46725])
                                    ("" variable (:type ("Roots" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46725 46731])
                                    ("" variable
                                       (:reference 1
                                        :type ("GetBeginT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46732 46744])
                                    ("" variable (:type ("GetBegin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46744 46753])
                                    ("" variable
                                       (:reference 1
                                        :type ("GetEndT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46785 46795])
                                    ("" variable (:type ("GetEnd" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46795 46802])
                                    ("" variable
                                       (:reference 1
                                        :type ("GetNodeT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46803 46814])
                                    ("" variable (:type ("GetNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46814 46822])
                                    ("" variable
                                       (:reference 1
                                        :type ("FormSCCCallbackT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46854 46873])
                                    ("" variable (:type ("FormSCC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46873 46881]))                                  
                                :typemodifiers ("static")
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [46562 46882])
                            ("buildSCCs" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RC" variable
                                       (:reference 1
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46959 46970])
                                    ("Nodes" variable (:type ("node_stack_range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46971 46994]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [46944 46995])
                            ("getRefSCCIndex" function
                               (:arguments 
                                  ( ("RC" variable
                                       (:reference 1
                                        :type ("RefSCC" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47205 47216]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47186 47476]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5279 47479])
                    ("Edge" function
                       (:constructor-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :type ("Edge" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47481 47528])
                    ("Edge" function
                       (:constructor-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("N" variable
                               (:reference 1
                                :type ("Node" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47562 47570])
                            ("K" variable (:type ("Kind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47571 47578]))                          
                        :type ("Edge" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47529 47596])
                    ("getKind" function
                       (:methodconst-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :type ("LazyCallGraph::Edge::Kind" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47715 47856])
                    ("isCall" function
                       (:methodconst-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [47858 47980])
                    ("getNode" function
                       (:methodconst-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :type ("LazyCallGraph::Node" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47982 48123])
                    ("getFunction" function
                       (:methodconst-flag t
                        :parent "LazyCallGraph::Edge"
                        :typemodifiers ("inline")
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [48125 48263])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("LazyCallGraph::EdgeSequence::iterator" variable (:type "int") (reparse-symbol classsubparts) [48446 48484])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48516 48526]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48488 48540])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48580 48590]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48543 48616])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48654 48664]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48619 48688]))                          
                        :template-specifier 
                          ( ("LazyCallGraph::Node" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [48321 48691])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("LazyCallGraph::EdgeSequence::iterator" variable (:type "int") (reparse-symbol classsubparts) [48811 48849])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48881 48891]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48853 48905])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48945 48955]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48908 48981])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49019 49029]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48984 49053]))                          
                        :template-specifier 
                          ( ("LazyCallGraph" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [48692 49056])
                    ("LazyCallGraphAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [49205 49253])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [49257 49280])
                            ("public" label nil (reparse-symbol classsubparts) [49282 49289])
                            ("Result" variable
                               (:default-value "LazyCallGraph"
                                :type "int")
                                (reparse-symbol classsubparts) [49347 49370])
                            ("run" function
                               (:arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49568 49578])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49579 49605]))                                  
                                :type ("LazyCallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [49550 49881]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [49123 49884])
                    ("LazyCallGraphPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [50093 50109])
                            ("public" label nil (reparse-symbol classsubparts) [50111 50118])
                            ("LazyCallGraphPrinterPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50155 50171]))                                  
                                :type ("LazyCallGraphPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50130 50172])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50198 50208])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50209 50235]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50176 50236]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [50005 50239])
                    ("LazyCallGraphDOTPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [50470 50486])
                            ("public" label nil (reparse-symbol classsubparts) [50488 50495])
                            ("LazyCallGraphDOTPrinterPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50535 50551]))                                  
                                :type ("LazyCallGraphDOTPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50507 50552])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50578 50588])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50589 50615]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50556 50616]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [50376 50619]))                  
                :type "namespace")
                nil [2454 50622]))          
      :file "LazyCallGraph.h"
      :pointmax 50686
      :fsize 50685
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((EXPLICIT 50498 . 50506) (EXPLICIT 50121 . 50129) (USING 49341 . 49346) (punctuation 48809 . 48810) (symbol 48791 . 48808) (USING 48785 . 48790) (punctuation 48781 . 48782) (punctuation 48780 . 48781) (symbol 48775 . 48779) (punctuation 48774 . 48775) (punctuation 48773 . 48774) (symbol 48760 . 48773) (punctuation 48758 . 48759) (symbol 48750 . 48757) (USING 48744 . 48749) (punctuation 48444 . 48445) (symbol 48426 . 48443) (USING 48420 . 48425) (punctuation 48416 . 48417) (punctuation 48415 . 48416) (symbol 48410 . 48414) (punctuation 48409 . 48410) (punctuation 48408 . 48409) (symbol 48395 . 48408) (punctuation 48393 . 48394) (symbol 48385 . 48392) (USING 48379 . 48384) (semantic-list 47648 . 47713) (CONST 47642 . 47647) (semantic-list 47639 . 47641) (BOOL 47635 . 47639) (OPERATOR 47626 . 47634) (punctuation 47625 . 47626) (punctuation 47624 . 47625) (symbol 47620 . 47624) (punctuation 47619 . 47620) (punctuation 47618 . 47619) (symbol 47605 . 47618) (INLINE 47598 . 47604) (punctuation 46872 . 46873) (punctuation 46813 . 46814) (punctuation 46794 . 46795) (punctuation 46743 . 46744) (punctuation 46724 . 46725) (punctuation 45927 . 45928) (punctuation 45926 . 45927) (punctuation 45925 . 45926) (punctuation 45924 . 45925) (punctuation 45897 . 45898) (symbol 45895 . 45897) (punctuation 45893 . 45894) (punctuation 45892 . 45893) (punctuation 45891 . 45892) (TYPENAME 45883 . 45891) (punctuation 45882 . 45883) (TEMPLATE 45873 . 45881) (punctuation 45659 . 45660) (punctuation 45658 . 45659) (punctuation 45657 . 45658) (punctuation 45656 . 45657) (punctuation 45635 . 45636) (symbol 45633 . 45635) (punctuation 45631 . 45632) (punctuation 45630 . 45631) (punctuation 45629 . 45630) (TYPENAME 45621 . 45629) (punctuation 45620 . 45621) (TEMPLATE 45611 . 45619) (punctuation 45371 . 45372) (punctuation 44063 . 44064) (symbol 44046 . 44062) (USING 44040 . 44045) (punctuation 43993 . 43994) (symbol 43973 . 43992) (USING 43967 . 43972) (punctuation 37390 . 37391) (punctuation 37343 . 37344) (punctuation 37300 . 37301) (semantic-list 37288 . 37300) (punctuation 37268 . 37269) (punctuation 36770 . 36771) (punctuation 36769 . 36770) (punctuation 36768 . 36769) (OPERATOR 36760 . 36768) (punctuation 36759 . 36760) (punctuation 36758 . 36759) (symbol 36738 . 36758) (USING 36732 . 36737) (punctuation 35801 . 35802) (punctuation 35800 . 35801) (punctuation 35768 . 35769) (punctuation 36770 . 36771) (punctuation 36769 . 36770) (punctuation 36768 . 36769) (OPERATOR 36760 . 36768) (punctuation 36759 . 36760) (punctuation 36758 . 36759) (symbol 36738 . 36758) (USING 36732 . 36737) (punctuation 35801 . 35802) (punctuation 35800 . 35801) (punctuation 35768 . 35769) (punctuation 25841 . 25842) (semantic-list 25813 . 25841) (punctuation 25808 . 25809) (punctuation 22480 . 22481) (punctuation 22479 . 22480) (symbol 22465 . 22479) (punctuation 22464 . 22465) (punctuation 22463 . 22464) (punctuation 22462 . 22463) (punctuation 22461 . 22462) (symbol 22454 . 22460) (punctuation 22453 . 22454) (symbol 22438 . 22453) (punctuation 22437 . 22438) (symbol 22421 . 22437) (punctuation 22411 . 22412) (symbol 22395 . 22410) (USING 22389 . 22394) (punctuation 22357 . 22358) (symbol 22351 . 22356) (USING 22345 . 22350) (punctuation 22339 . 22340) (punctuation 22338 . 22339) (symbol 22324 . 22338) (punctuation 22323 . 22324) (punctuation 22322 . 22323) (punctuation 22321 . 22322) (punctuation 22320 . 22321) (symbol 22316 . 22319) (punctuation 22315 . 22316) (symbol 22300 . 22315) (punctuation 22299 . 22300) (symbol 22283 . 22299) (punctuation 22281 . 22282) (symbol 22272 . 22280) (USING 22266 . 22271) (punctuation 20348 . 20349) (punctuation 20347 . 20348) (punctuation 20315 . 20316) (punctuation 25841 . 25842) (semantic-list 25813 . 25841) (punctuation 25808 . 25809) (punctuation 22480 . 22481) (punctuation 22479 . 22480) (symbol 22465 . 22479) (punctuation 22464 . 22465) (punctuation 22463 . 22464) (punctuation 22462 . 22463) (punctuation 22461 . 22462) (symbol 22454 . 22460) (punctuation 22453 . 22454) (symbol 22438 . 22453) (punctuation 22437 . 22438) (symbol 22421 . 22437) (punctuation 22411 . 22412) (symbol 22395 . 22410) (USING 22389 . 22394) (punctuation 22357 . 22358) (symbol 22351 . 22356) (USING 22345 . 22350) (punctuation 22339 . 22340) (punctuation 22338 . 22339) (symbol 22324 . 22338) (punctuation 22323 . 22324) (punctuation 22322 . 22323) (punctuation 22321 . 22322) (punctuation 22320 . 22321) (symbol 22316 . 22319) (punctuation 22315 . 22316) (symbol 22300 . 22315) (punctuation 22299 . 22300) (symbol 22283 . 22299) (punctuation 22281 . 22282) (symbol 22272 . 22280) (USING 22266 . 22271) (punctuation 20348 . 20349) (punctuation 20347 . 20348) (punctuation 20315 . 20316) (punctuation 17876 . 17877) (punctuation 17875 . 17876) (symbol 17861 . 17875) (punctuation 17860 . 17861) (punctuation 17859 . 17860) (punctuation 17858 . 17859) (punctuation 17857 . 17858) (symbol 17852 . 17856) (punctuation 17851 . 17852) (symbol 17836 . 17851) (punctuation 17835 . 17836) (symbol 17819 . 17835) (punctuation 17817 . 17818) (symbol 17808 . 17816) (USING 17802 . 17807) (punctuation 16370 . 16371) (punctuation 16226 . 16227) (punctuation 16225 . 16226) (punctuation 16193 . 16194) (punctuation 17876 . 17877) (punctuation 17875 . 17876) (symbol 17861 . 17875) (punctuation 17860 . 17861) (punctuation 17859 . 17860) (punctuation 17858 . 17859) (punctuation 17857 . 17858) (symbol 17852 . 17856) (punctuation 17851 . 17852) (symbol 17836 . 17851) (punctuation 17835 . 17836) (symbol 17819 . 17835) (punctuation 17817 . 17818) (symbol 17808 . 17816) (USING 17802 . 17807) (punctuation 16370 . 16371) (punctuation 16226 . 16227) (punctuation 16225 . 16226) (punctuation 16193 . 16194) (punctuation 12397 . 12398) (punctuation 12396 . 12397) (punctuation 12364 . 12365) (punctuation 12397 . 12398) (punctuation 12396 . 12397) (punctuation 12364 . 12365) (punctuation 11088 . 11089) (DEFAULT 11081 . 11088) (punctuation 11079 . 11080) (semantic-list 11076 . 11078) (symbol 11064 . 11076) (punctuation 9865 . 9866) (punctuation 9864 . 9865) (punctuation 9863 . 9864) (OPERATOR 9855 . 9863) (punctuation 9854 . 9855) (punctuation 9853 . 9854) (symbol 9832 . 9853) (USING 9826 . 9831) (punctuation 9817 . 9818) (DEFAULT 9810 . 9817) (punctuation 9808 . 9809) (semantic-list 9805 . 9807) (symbol 9792 . 9805) (punctuation 9337 . 9338) (punctuation 9336 . 9337) (punctuation 9302 . 9303) (punctuation 9865 . 9866) (punctuation 9864 . 9865) (punctuation 9863 . 9864) (OPERATOR 9855 . 9863) (punctuation 9854 . 9855) (punctuation 9853 . 9854) (symbol 9832 . 9853) (USING 9826 . 9831) (punctuation 9817 . 9818) (DEFAULT 9810 . 9817) (punctuation 9808 . 9809) (semantic-list 9805 . 9807) (symbol 9792 . 9805) (punctuation 9337 . 9338) (punctuation 9336 . 9337) (punctuation 9302 . 9303) (punctuation 8776 . 8777) (punctuation 8775 . 8776) (punctuation 8774 . 8775) (OPERATOR 8766 . 8774) (punctuation 8765 . 8766) (punctuation 8764 . 8765) (symbol 8743 . 8764) (USING 8737 . 8742) (punctuation 8728 . 8729) (DEFAULT 8721 . 8728) (punctuation 8719 . 8720) (semantic-list 8716 . 8718) (symbol 8708 . 8716) (punctuation 8408 . 8409) (punctuation 8407 . 8408) (punctuation 8373 . 8374) (punctuation 8776 . 8777) (punctuation 8775 . 8776) (punctuation 8774 . 8775) (OPERATOR 8766 . 8774) (punctuation 8765 . 8766) (punctuation 8764 . 8765) (symbol 8743 . 8764) (USING 8737 . 8742) (punctuation 8728 . 8729) (DEFAULT 8721 . 8728) (punctuation 8719 . 8720) (semantic-list 8716 . 8718) (symbol 8708 . 8716) (punctuation 8408 . 8409) (punctuation 8407 . 8408) (punctuation 8373 . 8374) (punctuation 8070 . 8071) (symbol 8058 . 8069) (USING 8052 . 8057) (punctuation 8024 . 8025) (symbol 8016 . 8023) (USING 8010 . 8015) (punctuation 7996 . 7997) (punctuation 7995 . 7996) (punctuation 7958 . 7959) (punctuation 7957 . 7958) (punctuation 7925 . 7926) (punctuation 11088 . 11089) (DEFAULT 11081 . 11088) (punctuation 11079 . 11080) (semantic-list 11076 . 11078) (symbol 11064 . 11076) (punctuation 9865 . 9866) (punctuation 9864 . 9865) (punctuation 9863 . 9864) (OPERATOR 9855 . 9863) (punctuation 9854 . 9855) (punctuation 9853 . 9854) (symbol 9832 . 9853) (USING 9826 . 9831) (punctuation 9817 . 9818) (DEFAULT 9810 . 9817) (punctuation 9808 . 9809) (semantic-list 9805 . 9807) (symbol 9792 . 9805) (punctuation 9337 . 9338) (punctuation 9336 . 9337) (punctuation 9302 . 9303) (punctuation 9865 . 9866) (punctuation 9864 . 9865) (punctuation 9863 . 9864) (OPERATOR 9855 . 9863) (punctuation 9854 . 9855) (punctuation 9853 . 9854) (symbol 9832 . 9853) (USING 9826 . 9831) (punctuation 9817 . 9818) (DEFAULT 9810 . 9817) (punctuation 9808 . 9809) (semantic-list 9805 . 9807) (symbol 9792 . 9805) (punctuation 9337 . 9338) (punctuation 9336 . 9337) (punctuation 9302 . 9303) (punctuation 8776 . 8777) (punctuation 8775 . 8776) (punctuation 8774 . 8775) (OPERATOR 8766 . 8774) (punctuation 8765 . 8766) (punctuation 8764 . 8765) (symbol 8743 . 8764) (USING 8737 . 8742) (punctuation 8728 . 8729) (DEFAULT 8721 . 8728) (punctuation 8719 . 8720) (semantic-list 8716 . 8718) (symbol 8708 . 8716) (punctuation 8408 . 8409) (punctuation 8407 . 8408) (punctuation 8373 . 8374) (punctuation 8776 . 8777) (punctuation 8775 . 8776) (punctuation 8774 . 8775) (OPERATOR 8766 . 8774) (punctuation 8765 . 8766) (punctuation 8764 . 8765) (symbol 8743 . 8764) (USING 8737 . 8742) (punctuation 8728 . 8729) (DEFAULT 8721 . 8728) (punctuation 8719 . 8720) (semantic-list 8716 . 8718) (symbol 8708 . 8716) (punctuation 8408 . 8409) (punctuation 8407 . 8408) (punctuation 8373 . 8374) (punctuation 8070 . 8071) (symbol 8058 . 8069) (USING 8052 . 8057) (punctuation 8024 . 8025) (symbol 8016 . 8023) (USING 8010 . 8015) (punctuation 7996 . 7997) (punctuation 7995 . 7996) (punctuation 7958 . 7959) (punctuation 7957 . 7958) (punctuation 7925 . 7926) (punctuation 7214 . 7215) (punctuation 7213 . 7214) (punctuation 7168 . 7169) (punctuation 7167 . 7168) (punctuation 6616 . 6617) (CONST 6611 . 6616) (semantic-list 6608 . 6610) (BOOL 6604 . 6608) (OPERATOR 6595 . 6603) (EXPLICIT 6586 . 6594) (EXPLICIT 6393 . 6401) (punctuation 6374 . 6375) (semantic-list 6346 . 6374) (BOOL 6341 . 6345) (punctuation 6339 . 6340) (symbol 6334 . 6338) (ENUM 6329 . 6333) (punctuation 7214 . 7215) (punctuation 7213 . 7214) (punctuation 7168 . 7169) (punctuation 7167 . 7168) (punctuation 6616 . 6617) (CONST 6611 . 6616) (semantic-list 6608 . 6610) (BOOL 6604 . 6608) (OPERATOR 6595 . 6603) (EXPLICIT 6586 . 6594) (EXPLICIT 6393 . 6401) (punctuation 6374 . 6375) (semantic-list 6346 . 6374) (BOOL 6341 . 6345) (punctuation 6339 . 6340) (symbol 6334 . 6338) (ENUM 6329 . 6333))
      :lexical-table 
        '(("LLVM_ANALYSIS_LAZYCALLGRAPH_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a551c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_ALIASANALYSIS_H" variable (:constant-flag t) nil [1952 1981])
            ("llvm/ADT/DenseMap.h" include nil nil [1983 2013])
            ("llvm/ADT/None.h" include nil nil [2014 2040])
            ("llvm/ADT/Optional.h" include nil nil [2041 2071])
            ("llvm/ADT/SmallVector.h" include nil nil [2072 2105])
            ("llvm/Analysis/MemoryLocation.h" include nil nil [2106 2147])
            ("llvm/Analysis/TargetLibraryInfo.h" include nil nil [2148 2192])
            ("llvm/IR/Function.h" include nil nil [2193 2222])
            ("llvm/IR/Instruction.h" include nil nil [2223 2255])
            ("llvm/IR/Instructions.h" include nil nil [2256 2289])
            ("llvm/IR/PassManager.h" include nil nil [2290 2322])
            ("llvm/Pass.h" include nil nil [2323 2345])
            ("cstdint" include (:system-flag t) nil [2346 2364])
            ("functional" include (:system-flag t) nil [2365 2386])
            ("memory" include (:system-flag t) nil [2387 2404])
            ("vector" include (:system-flag t) nil [2405 2422])
            ("llvm" type
               (:members 
                  ( ("AnalysisUsage" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2442 2462])
                    ("BasicAAResult" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2463 2483])
                    ("BasicBlock" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2484 2501])
                    ("DominatorTree" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2502 2522])
                    ("OrderedBasicBlock" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2523 2547])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2548 2560])
                    ("uint8_t" variable (:type "int") (reparse-symbol namespacesubparts) [3221 3766])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3825 3841])
                            ("AR" variable (:type ("AliasResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3842 3857]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3801 3858])
                    ("ModRefInfo" type
                       (:superclasses 
                          ( ("uint8_t" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4210 6068])
                    ("isNoModRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6108 6129]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6085 6257])
                    ("isModOrRefSet" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6299 6320]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6273 6399])
                    ("isModAndRefSet" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6442 6463]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6415 6597])
                    ("isModSet" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6634 6655]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6613 6731])
                    ("isRefSet" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6768 6789]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6747 6865])
                    ("isMustSet" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6903 6924]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6881 7004])
                    ("setMod" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7046 7067]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7021 7175])
                    ("setRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7216 7237]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7191 7345])
                    ("setMust" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7387 7408]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7361 7519])
                    ("setModAndRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7566 7587]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7535 7698])
                    ("clearMod" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7741 7762]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7714 7846])
                    ("clearRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7889 7910]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7862 7994])
                    ("clearMust" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8038 8059]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8010 8168])
                    ("unionModRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI1" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8214 8236])
                            ("MRI2" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8282 8304]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8184 8378])
                    ("intersectModRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MRI1" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8428 8450])
                            ("MRI2" variable
                               (:constant-flag t
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8500 8522]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8394 8596])
                    ("FunctionModRefLocation" type
                       (:members 
                          ( ("FMRL_Nowhere" variable
                               (:constant-flag t
                                :default-value (8915 8916)
                                :type "int")
                                (reparse-symbol enumsubparts) [8900 8916])
                            ("FMRL_ArgumentPointees" variable
                               (:constant-flag t
                                :default-value (8990 8991)
                                :type "int")
                                (reparse-symbol enumsubparts) [8966 8991])
                            ("FMRL_InaccessibleMem" variable
                               (:constant-flag t
                                :default-value (9065 9067)
                                :type "int")
                                (reparse-symbol enumsubparts) [9042 9067])
                            ("FMRL_Anywhere" variable
                               (:constant-flag t
                                :default-value (9115 9140)
                                :type "int")
                                (reparse-symbol enumsubparts) [9099 9140])
                            ("FMRL_ArgumentPointees" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9143 9166]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [8828 9167])
                    ("FunctionModRefBehavior" type
                       (:members 
                          ( ("FMRB_DoesNotAccessMemory" variable
                               (:constant-flag t
                                :default-value (9805 9858)
                                :type "int")
                                (reparse-symbol enumsubparts) [9772 9858])
                            ("FMRB_OnlyReadsArgumentPointees" variable
                               (:constant-flag t
                                :default-value (10164 10221)
                                :type "int")
                                (reparse-symbol enumsubparts) [10125 10221])
                            ("FMRB_OnlyAccessesArgumentPointees" variable
                               (:constant-flag t
                                :default-value (10541 10601)
                                :type "int")
                                (reparse-symbol enumsubparts) [10499 10601])
                            ("FMRB_OnlyAccessesInaccessibleMem" variable
                               (:constant-flag t
                                :default-value (10872 10931)
                                :type "int")
                                (reparse-symbol enumsubparts) [10831 10931])
                            ("FMRB_OnlyAccessesInaccessibleOrArgMem" variable
                               (:constant-flag t
                                :default-value (11328 11414)
                                :type "int")
                                (reparse-symbol enumsubparts) [11288 11414])
                            ("static_cast" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [11459 11471])
                            ("FMRB_OnlyReadsMemory" variable
                               (:constant-flag t
                                :default-value (11853 11902)
                                :type "int")
                                (reparse-symbol enumsubparts) [11830 11902])
                            ("FMRB_DoesNotReadMemory" variable
                               (:constant-flag t
                                :default-value (12176 12225)
                                :type "int")
                                (reparse-symbol enumsubparts) [12151 12225])
                            ("FMRB_UnknownModRefBehavior" variable
                               (:constant-flag t
                                :default-value (12367 12419)
                                :type "int")
                                (reparse-symbol enumsubparts) [12332 12419]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [9455 12422])
                    ("createModRefInfo" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("FMRB" variable
                               (:constant-flag t
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12736 12770]))                          
                        :type ("ModRefInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12701 12840])
                    ("AAQueryInfo" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [13484 13491])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [13510 13552])
                            ("SmallDenseMap" variable (:type "int") (reparse-symbol classsubparts) [13575 13614])
                            ("AliasCache" variable (:type ("AliasCacheT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13617 13640])
                            ("SmallDenseMap" variable (:type "int") (reparse-symbol classsubparts) [13669 13707])
                            ("IsCapturedCache" variable (:type ("IsCapturedCacheT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13710 13743])
                            ("AAQueryInfo" function
                               (:constructor-flag t
                                :type ("AAQueryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13747 13797]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [13464 13800])
                    ("BatchAAResults" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [13802 13823])
                    ("AAResults" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [13843 13850])
                            ("AAResults" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13990 14019]))                                  
                                :type ("AAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13980 14033])
                            ("AAResults" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14046 14058])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14058 14062]))                                  
                                :type ("AAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14036 14063])
                            ("AAResults" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [14066 14079])
                            ("addAAResult" function
                               (:template 
                                  ( ("AAResultT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("AAResult" variable
                                       (:reference 1
                                        :type ("AAResultT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14167 14187]))                                  )
                                (reparse-symbol classsubparts) [14120 14458])
                            ("addAADependencyID" function
                               (:arguments 
                                  ( ("ID" variable
                                       (:pointer 1
                                        :type ("AnalysisKey" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14759 14775]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14736 14801])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14978 14990])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14991 15019])
                                    ("Inv" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15038 15080]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14962 15081])
                            ("alias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15488 15515])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15516 15543]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15470 15544])
                            ("alias" function
                               (:arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15633 15649])
                                    ("V1Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15650 15670])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15671 15687])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15708 15728]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15615 15808])
                            ("alias" function
                               (:arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15897 15913])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15914 15930]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15879 16012])
                            ("isNoAlias" function
                               (:arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16125 16152])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16153 16180]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16110 16227])
                            ("isNoAlias" function
                               (:arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16316 16332])
                                    ("V1Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16333 16353])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16354 16370])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16388 16408]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16301 16492])
                            ("isNoAlias" function
                               (:arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16581 16597])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16598 16614]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16566 16682])
                            ("isMustAlias" function
                               (:arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16799 16826])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16827 16854]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16782 16903])
                            ("isMustAlias" function
                               (:arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16996 17012])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17013 17029]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16979 17137])
                            ("pointsToConstantMemory" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17304 17330])
                                    ("OrLocal" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [17331 17351]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [17276 17353])
                            ("pointsToConstantMemory" function
                               (:arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17475 17490])
                                    ("OrLocal" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [17491 17511]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [17447 17581])
                            ("getArgModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18106 18127])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [18128 18144]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18078 18145])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18240 18261]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18199 18262])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18366 18384]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18325 18385])
                            ("doesNotAccessMemory" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18947 18968]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [18922 19038])
                            ("doesNotAccessMemory" function
                               (:arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19624 19642]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19599 19709])
                            ("onlyReadsMemory" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20150 20171]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20129 20230])
                            ("onlyReadsMemory" function
                               (:arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20679 20697]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20658 20753])
                            ("onlyReadsMemory" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20924 20951]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20896 21002])
                            ("doesNotReadMemory" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21158 21185]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [21128 21236])
                            ("onlyAccessesArgPointees" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21461 21488]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [21425 21554])
                            ("doesAccessArgPointees" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21780 21807]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [21746 21906])
                            ("onlyAccessesInaccessibleMem" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22093 22120]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [22053 22185])
                            ("doesAccessInaccessibleMem" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22373 22400]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [22335 22487])
                            ("onlyAccessesInaccessibleOrArgMem" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MRB" variable (:type ("FunctionModRefBehavior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22765 22792]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [22720 22896])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23075 23096])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23097 23123]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23050 23124])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23215 23236])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23237 23252])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23280 23298]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23190 23361])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23530 23548])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23549 23575]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23505 23576])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23662 23680])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23681 23696])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23724 23742]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23637 23802])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23973 23992])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23993 24019]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23948 24020])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24107 24126])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24127 24142])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24170 24188]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24082 24248])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("FenceInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24419 24438])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24439 24465]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24394 24466])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("FenceInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24553 24572])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24573 24588])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24616 24634]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24528 24694])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CX" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicCmpXchgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24870 24898])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24926 24952]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24845 24953])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("CX" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicCmpXchgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25043 25071])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25072 25087])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25115 25133]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25018 25194])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RMW" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicRMWInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25373 25398])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25399 25425]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25348 25426])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("RMW" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicRMWInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25517 25542])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25543 25558])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25586 25604]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25492 25666])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("VAArgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25839 25858])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25859 25885]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25814 25886])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("VAArgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25974 25993])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25994 26009])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26037 26055]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25949 26115])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchPadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26292 26314])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26315 26341]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26267 26342])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchPadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26432 26454])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26455 26470])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26498 26516]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26407 26576])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchReturnInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26753 26778])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26779 26805]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26728 26806])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchReturnInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26896 26921])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26922 26937])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26965 26983]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26871 27043])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27470 27491])
                                    ("OptLoc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("MemoryLocation" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [27519 27558]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27445 27631])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27726 27747])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27748 27763])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27791 27809]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27701 27869])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28009 28024])
                                    ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28025 28046]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27984 28047])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28280 28302])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28303 28325]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28255 28326])
                            ("callCapturesBefore" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28751 28772])
                                    ("MemLoc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28805 28834])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28835 28853])
                                    ("OBB" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("OrderedBasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28886 28918]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28721 28920])
                            ("callCapturesBefore" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29015 29036])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29037 29052])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29085 29103])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29104 29122])
                                    ("OBB" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("OrderedBasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29155 29187]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28985 29262])
                            ("canBasicBlockModify" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29565 29586])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29587 29613]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29540 29614])
                            ("canBasicBlockModify" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29703 29724])
                                    ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29725 29740])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29768 29786]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29678 29853])
                            ("canInstructionRangeModRef" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30178 30200])
                                    ("I2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30201 30223])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30257 30283])
                                    ("Mode" variable
                                       (:constant-flag t
                                        :type ("ModRefInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30317 30339]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30147 30340])
                            ("canInstructionRangeModRef" function
                               (:arguments 
                                  ( ("I1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30435 30457])
                                    ("I2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30458 30480])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30514 30531])
                                    ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30532 30550])
                                    ("Mode" variable
                                       (:constant-flag t
                                        :type ("ModRefInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30584 30606]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30404 30691])
                            ("private" label nil (reparse-symbol classsubparts) [30693 30701])
                            ("alias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30722 30749])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30750 30777])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30798 30816]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30704 30817])
                            ("pointsToConstantMemory" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30848 30874])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30875 30893])
                                    ("OrLocal" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [30924 30944]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30820 30946])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30974 30989])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30990 31012])
                                    ("AAQIP" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31040 31059]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30949 31060])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31088 31109])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31110 31136])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31164 31182]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31063 31183])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31211 31233])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31234 31256])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31284 31302]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31186 31303])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("VAArgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31331 31350])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31351 31377])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31405 31423]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31306 31424])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31452 31470])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31471 31497])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31525 31543]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31427 31544])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31572 31591])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31592 31618])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31646 31664]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31547 31665])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("FenceInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31693 31712])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31713 31739])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31767 31785]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31668 31786])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CX" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicCmpXchgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31814 31842])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31870 31896])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31897 31915]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31789 31916])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RMW" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicRMWInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31944 31969])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31970 31996])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32024 32042]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31919 32043])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchPadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32071 32093])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32094 32120])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32148 32166]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32046 32167])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CatchReturnInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32195 32220])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32221 32247])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32275 32293]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32170 32294])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32322 32343])
                                    ("OptLoc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("MemoryLocation" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [32371 32410])
                                    ("AAQIP" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32438 32457]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32297 33717])
                            ("Concept" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [33721 33735])
                            ("Model" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [33739 33773])
                            ("AAResultBase" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [33777 33825])
                            ("TLI" variable
                               (:constant-flag t
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33829 33858])
                            ("AAs" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::unique_ptr" type (:template-specifier 
                                        ( ("Concept" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [33862 33904])
                            ("AADeps" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("AnalysisKey" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [33908 33942])
                            ("BatchAAResults" friend nil (reparse-symbol classsubparts) [33946 33973]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [13825 33977])
                    ("BatchAAResults" type
                       (:members 
                          ( ("AA" variable (:type ("AAResults" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34420 34434])
                            ("AAQI" variable (:type ("AAQueryInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34437 34454])
                            ("public" label nil (reparse-symbol classsubparts) [34456 34463])
                            ("BatchAAResults" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("AAR" variable
                                       (:reference 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34481 34496]))                                  
                                :type ("BatchAAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34466 34517])
                            ("alias" function
                               (:arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34538 34565])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34566 34593]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34520 34638])
                            ("pointsToConstantMemory" function
                               (:arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34669 34695])
                                    ("OrLocal" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [34696 34716]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [34641 34781])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34809 34830])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34831 34857]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34784 34909])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34937 34959])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34960 34982]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34912 35037])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35065 35086])
                                    ("OptLoc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("MemoryLocation" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [35114 35153]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35040 35205])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35233 35248])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35249 35271]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35208 35322])
                            ("getArgModRefInfo" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35353 35374])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35375 35391]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35325 35443])
                            ("getModRefBehavior" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35487 35508]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35446 35553]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [34395 35556])
                    ("AliasAnalysis" variable
                       (:default-value "AAResults"
                        :type "int")
                        (reparse-symbol namespacesubparts) [35665 35691])
                    ("Concept" type
                       (:parent "AAResults"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [36169 36176])
                            ("Concept" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [36179 36202])
                            ("setAAResults" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("NewAAR" variable
                                       (:pointer 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36346 36364]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [36320 36369])
                            ("alias" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36784 36811])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36840 36867])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36868 36886]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36758 36891])
                            ("pointsToConstantMemory" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37066 37092])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37131 37149])
                                    ("OrLocal" variable (:type "bool") (reparse-symbol arg-sub-list) [37150 37163]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [37030 37168])
                            ("getArgModRefInfo" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37671 37692])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [37731 37747]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37635 37752])
                            ("getModRefBehavior" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37855 37876]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37806 37881])
                            ("getModRefBehavior" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37993 38011]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37944 38016])
                            ("getModRefInfo" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38203 38224])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38260 38286])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38322 38340]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38170 38345])
                            ("getModRefInfo" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38586 38608])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38609 38631])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38667 38685]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38553 38690]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [36142 38703])
                    ("Concept" variable (:type "int") (reparse-symbol namespacesubparts) [39049 40435])
                    ("AAResultBase" type
                       (:template 
                          ( ("DerivedT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("AAResults" friend nil (reparse-symbol classsubparts) [41415 41437])
                            ("Model" variable (:type "int") (reparse-symbol classsubparts) [41439 41455])
                            ("AAR" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("AAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41577 41602])
                            ("derived" function (:type ("DerivedT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41668 41730])
                            ("setAAResults" function
                               (:arguments 
                                  ( ("NewAAR" variable
                                       (:pointer 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41856 41874]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [41838 41892])
                            ("protected" label nil (reparse-symbol classsubparts) [41894 41904])
                            ("AAResultsProxy" type
                               (:members 
                                  ( ("AAR" variable
                                       (:pointer 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42131 42146])
                                    ("CurrentResult" variable (:type ("DerivedT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42151 42175])
                                    ("public" label nil (reparse-symbol classsubparts) [42179 42186])
                                    ("AAResultsProxy" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("AAR" variable
                                               (:pointer 1
                                                :type ("AAResults" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42206 42221])
                                            ("CurrentResult" variable
                                               (:reference 1
                                                :type ("DerivedT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42222 42246]))                                          
                                        :type ("AAResultsProxy" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42191 42298])
                                    ("alias" function
                                       (:arguments 
                                          ( ("LocA" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MemoryLocation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42322 42349])
                                            ("LocB" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MemoryLocation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42350 42377])
                                            ("AAQI" variable
                                               (:reference 1
                                                :type ("AAQueryInfo" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42400 42418]))                                          
                                        :type ("AliasResult" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42304 42532])
                                    ("pointsToConstantMemory" function
                                       (:arguments 
                                          ( ("Loc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MemoryLocation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42566 42592])
                                            ("AAQI" variable
                                               (:reference 1
                                                :type ("AAQueryInfo" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42593 42611])
                                            ("OrLocal" variable (:type "bool") (reparse-symbol arg-sub-list) [42644 42657]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [42538 42809])
                                    ("getArgModRefInfo" function
                                       (:arguments 
                                          ( ("Call" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CallBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42843 42864])
                                            ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [42865 42881]))                                          
                                        :type ("ModRefInfo" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42815 43009])
                                    ("getModRefBehavior" function
                                       (:arguments 
                                          ( ("Call" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CallBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43056 43077]))                                          
                                        :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43015 43191])
                                    ("getModRefBehavior" function
                                       (:arguments 
                                          ( ("F" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43238 43256]))                                          
                                        :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43197 43347])
                                    ("getModRefInfo" function
                                       (:arguments 
                                          ( ("Call" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CallBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43378 43399])
                                            ("Loc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MemoryLocation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43400 43426])
                                            ("AAQI" variable
                                               (:reference 1
                                                :type ("AAQueryInfo" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43456 43474]))                                          
                                        :type ("ModRefInfo" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43353 43602])
                                    ("getModRefInfo" function
                                       (:arguments 
                                          ( ("Call1" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CallBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43633 43655])
                                            ("Call2" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CallBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43656 43678])
                                            ("AAQI" variable
                                               (:reference 1
                                                :type ("AAQueryInfo" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43708 43726]))                                          
                                        :type ("ModRefInfo" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43608 43860]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [42104 43865])
                            ("AAResultBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAResultBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44015 44039]))                                  
                                :type ("AAResultBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44002 44042])
                            ("AAResultBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("AAResultBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44058 44073])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44073 44077]))                                  
                                :type ("AAResultBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44045 44080])
                            ("getBestAAResults" function (:type ("AAResultsProxy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44634 44710])
                            ("public" label nil (reparse-symbol classsubparts) [44712 44719])
                            ("alias" function
                               (:arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44740 44767])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44768 44795])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44816 44834]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44722 44861])
                            ("pointsToConstantMemory" function
                               (:arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44893 44919])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44920 44938])
                                    ("OrLocal" variable (:type "bool") (reparse-symbol arg-sub-list) [44969 44982]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [44865 45006])
                            ("getArgModRefInfo" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45038 45059])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [45060 45076]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45010 45113])
                            ("getModRefBehavior" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45158 45179]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45117 45224])
                            ("getModRefBehavior" function
                               (:arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45269 45287]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45228 45332])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45361 45382])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45383 45409])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45437 45455]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45336 45492])
                            ("getModRefInfo" function
                               (:arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45521 45543])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45544 45566])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45594 45612]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45496 45649]))                          )
                        (reparse-symbol namespacesubparts) [41159 45652])
                    ("isNoAliasCall" function
                       (:prototype-flag t
                        :arguments 
                          ( ("V" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45740 45755]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [45721 45756])
                    ("isNoAliasArgument" function
                       (:prototype-flag t
                        :arguments 
                          ( ("V" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45848 45863]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [45825 45864])
                    ("isIdentifiedObject" function
                       (:prototype-flag t
                        :arguments 
                          ( ("V" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46158 46173]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [46134 46174])
                    ("isIdentifiedFunctionLocal" function
                       (:prototype-flag t
                        :arguments 
                          ( ("V" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46491 46506]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [46460 46507])
                    ("AAManager" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [47511 47518])
                            ("Result" variable
                               (:default-value "AAResults"
                                :type "int")
                                (reparse-symbol classsubparts) [47527 47546])
                            ("registerFunctionAnalysis" function
                               (:template 
                                  ( ("AnalysisT" type (:type "class") nil nil))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [47587 47720])
                            ("registerModuleAnalysis" function
                               (:template 
                                  ( ("AnalysisT" type (:type "class") nil nil))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [47761 47890])
                            ("run" function
                               (:arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47905 47917])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47918 47946]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47894 48086])
                            ("private" label nil (reparse-symbol classsubparts) [48088 48096])
                            ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [48099 48135])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48139 48162])
                            ("ResultGetters" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("void" type (:typevar "*") nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [48166 48306])
                            ("getFunctionAAResultImpl" function
                               (:template 
                                  ( ("AnalysisT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48378 48390])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48429 48457])
                                    ("AAResults" variable
                                       (:reference 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48496 48517]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [48310 48637])
                            ("getModuleAAResultImpl" function
                               (:template 
                                  ( ("AnalysisT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48707 48719])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48720 48748])
                                    ("AAResults" variable
                                       (:reference 1
                                        :type ("AAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48785 48806]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [48641 49135]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [47455 49138])
                    ("AAResultsWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AAR" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("AAResults" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [49299 49330])
                            ("public" label nil (reparse-symbol classsubparts) [49332 49339])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [49342 49357])
                            ("AAResultsWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("AAResultsWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [49361 49384])
                            ("getAAResults" function (:type ("AAResults" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49388 49430])
                            ("getAAResults" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("AAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [49433 49487])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [49523 49532])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [49577 49592]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [49246 49595])
                    ("ExternalAAWrapperPass" type
                       (:superclasses 
                          ( ("ImmutablePass" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("CB" variable (:type ("CallbackT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49864 49877])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [49881 49896])
                            ("ExternalAAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("ExternalAAWrapperPass" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [49900 49924])
                            ("ExternalAAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("CB" variable (:type ("CallbackT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49959 49972]))                                  
                                :type ("ExternalAAWrapperPass" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [49937 49973]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [49740 50067])
                    ("createAAResultsWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("FunctionPass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [50069 50112])
                    ("createExternalAAWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50606 50620])
                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [50620 50657])
                            ("" variable (:type ("Callback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50659 50668]))                          
                        :type ("ImmutablePass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [50558 50669])
                    ("createLegacyPMAAResults" function
                       (:prototype-flag t
                        :arguments 
                          ( ("P" variable
                               (:reference 1
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51067 51075])
                            ("F" variable
                               (:reference 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51076 51088])
                            ("BAR" variable
                               (:reference 1
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51089 51108]))                          
                        :type ("AAResults" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [51033 51109])
                    ("getAAResultsAnalysisUsage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("AU" variable
                               (:reference 1
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51297 51315]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [51266 51316]))                  
                :type "namespace")
                nil [2424 51319]))          
      :file "AliasAnalysis.h"
      :pointmax 51383
      :fsize 51382
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((punctuation 50657 . 50658) (semantic-list 50624 . 50657) (punctuation 50619 . 50620) (semantic-list 50033 . 50064) (symbol 50024 . 50032) (CONST 50018 . 50023) (semantic-list 49998 . 50017) (symbol 49982 . 49998) (VOID 49977 . 49981) (EXPLICIT 49928 . 49936) (punctuation 49859 . 49860) (punctuation 49858 . 49859) (semantic-list 49825 . 49858) (VOID 49821 . 49825) (punctuation 49820 . 49821) (symbol 49812 . 49820) (punctuation 49811 . 49812) (punctuation 49810 . 49811) (symbol 49807 . 49810) (punctuation 49805 . 49806) (symbol 49795 . 49804) (USING 49789 . 49794) (semantic-list 49557 . 49576) (symbol 49541 . 49557) (VOID 49536 . 49540) (semantic-list 49509 . 49522) (symbol 49496 . 49509) (BOOL 49491 . 49495) (USING 47521 . 47526) (punctuation 44072 . 44073) (punctuation 43902 . 43903) (DEFAULT 43895 . 43902) (punctuation 43893 . 43894) (semantic-list 43890 . 43892) (symbol 43878 . 43890) (EXPLICIT 43869 . 43877) (punctuation 41438 . 41439) (punctuation 41437 . 41438) (PUBLIC 39042 . 39048) (punctuation 39040 . 39041) (symbol 39034 . 39039) (symbol 39028 . 39033) (punctuation 39027 . 39028) (punctuation 39026 . 39027) (symbol 39017 . 39026) (CLASS 39011 . 39016) (punctuation 39009 . 39010) (symbol 39000 . 39009) (TYPENAME 38991 . 38999) (punctuation 38990 . 38991) (TEMPLATE 38981 . 38989) (USING 35659 . 35664) (punctuation 33973 . 33974) (punctuation 14057 . 14058) (punctuation 13667 . 13668) (symbol 13650 . 13666) (USING 13644 . 13649) (punctuation 13573 . 13574) (symbol 13561 . 13572) (USING 13555 . 13560) (punctuation 13508 . 13509) (symbol 13500 . 13507) (USING 13494 . 13499) (symbol 12686 . 12700) (semantic-list 11475 . 11495) (punctuation 11474 . 11475) (INT 11471 . 11474) (punctuation 11470 . 11471) (punctuation 11415 . 11416) (punctuation 9141 . 9142) (symbol 8379 . 8393) (symbol 8169 . 8183) (symbol 7995 . 8009) (symbol 7847 . 7861) (symbol 7699 . 7713) (symbol 7520 . 7534) (symbol 7346 . 7360) (symbol 7176 . 7190) (symbol 7006 . 7020) (symbol 6866 . 6880) (symbol 6732 . 6746) (symbol 6598 . 6612) (symbol 6400 . 6414) (symbol 6258 . 6272) (symbol 6070 . 6084) (punctuation 5216 . 5217) (symbol 5213 . 5216) (punctuation 5211 . 5212) (symbol 5207 . 5210) (punctuation 5205 . 5206) (symbol 5198 . 5204) (punctuation 5120 . 5121) (symbol 5113 . 5120) (punctuation 5111 . 5112) (symbol 5102 . 5110) (punctuation 5100 . 5101) (symbol 5096 . 5099) (punctuation 5036 . 5037) (symbol 5029 . 5036) (punctuation 5027 . 5028) (symbol 5018 . 5026) (punctuation 5016 . 5017) (symbol 5012 . 5015) (punctuation 4949 . 4950) (number 4948 . 4949) (punctuation 4946 . 4947) (symbol 4937 . 4945) (punctuation 4856 . 4857) (symbol 4849 . 4856) (punctuation 4847 . 4848) (symbol 4839 . 4846) (punctuation 4837 . 4838) (symbol 4826 . 4836) (punctuation 4670 . 4671) (number 4669 . 4670) (punctuation 4667 . 4668) (symbol 4659 . 4666) (punctuation 4522 . 4523) (number 4521 . 4522) (punctuation 4519 . 4520) (symbol 4511 . 4518) (punctuation 4371 . 4372) (number 4370 . 4371) (punctuation 4368 . 4369) (symbol 4363 . 4367) (ENUM 4205 . 4209) (punctuation 3219 . 3220) (symbol 3207 . 3218) (ENUM 3202 . 3206))
      :lexical-table 
        '(("LLVM_ANALYSIS_ALIASANALYSIS_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f8187ce4"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_BASICALIASANALYSIS_H" variable (:constant-flag t) nil [598 632])
            ("llvm/ADT/DenseMap.h" include nil nil [634 664])
            ("llvm/ADT/Optional.h" include nil nil [665 695])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [696 729])
            ("llvm/ADT/SmallVector.h" include nil nil [730 763])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [764 804])
            ("llvm/Analysis/AssumptionCache.h" include nil nil [805 847])
            ("llvm/Analysis/MemoryLocation.h" include nil nil [848 889])
            ("llvm/IR/InstrTypes.h" include nil nil [890 921])
            ("llvm/IR/PassManager.h" include nil nil [922 954])
            ("llvm/Pass.h" include nil nil [955 977])
            ("algorithm" include (:system-flag t) nil [978 998])
            ("cstdint" include (:system-flag t) nil [999 1017])
            ("memory" include (:system-flag t) nil [1018 1035])
            ("utility" include (:system-flag t) nil [1036 1054])
            ("llvm" type
               (:members 
                  ( ("AAMDNodes" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1074 1091])
                    ("APInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1092 1104])
                    ("AssumptionCache" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1105 1127])
                    ("BasicBlock" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1128 1145])
                    ("DataLayout" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1146 1163])
                    ("DominatorTree" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1164 1184])
                    ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1185 1200])
                    ("GEPOperator" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1201 1219])
                    ("LoopInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1220 1235])
                    ("PHINode" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1236 1250])
                    ("SelectInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1251 1268])
                    ("TargetLibraryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1269 1293])
                    ("PhiValues" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1294 1310])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1311 1323])
                    ("BasicAAResult" type
                       (:superclasses 
                          ( ("AAResultBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AAResultBase" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1849 1884])
                            ("DL" variable
                               (:constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1888 1909])
                            ("F" variable
                               (:constant-flag t
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1912 1930])
                            ("TLI" variable
                               (:constant-flag t
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1933 1962])
                            ("AC" variable (:type ("AssumptionCache" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1965 1985])
                            ("DT" variable
                               (:pointer 1
                                :type ("DominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1988 2006])
                            ("LI" variable
                               (:pointer 1
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2009 2022])
                            ("PV" variable
                               (:pointer 1
                                :type ("PhiValues" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2025 2039])
                            ("public" label nil (reparse-symbol classsubparts) [2041 2048])
                            ("BasicAAResult" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2065 2086])
                                    ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2087 2105])
                                    ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2122 2151])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2152 2172])
                                    ("DT" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2189 2216])
                                    ("LI" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2218 2240])
                                    ("PV" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("PhiValues" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2258 2281]))                                  
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2051 2372])
                            ("BasicAAResult" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicAAResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2390 2415]))                                  
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2376 2537])
                            ("BasicAAResult" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("BasicAAResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2554 2570])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2570 2574]))                                  
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2540 2706])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Fn" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2784 2797])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2798 2826])
                                    ("Inv" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2845 2887]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2768 2888])
                            ("alias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2910 2937])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2938 2965])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2986 3004]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2892 3005])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3034 3055])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3056 3082])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3110 3128]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3009 3129])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3158 3180])
                                    ("Call2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3181 3203])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3231 3249]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3133 3250])
                            ("pointsToConstantMemory" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3346 3372])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3373 3391])
                                    ("OrLocal" variable (:type "bool") (reparse-symbol arg-sub-list) [3422 3435]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3318 3436])
                            ("getArgModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3541 3562])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3563 3579]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3513 3580])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3686 3707]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3645 3708])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Fn" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3860 3879]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3819 3880])
                            ("private" label nil (reparse-symbol classsubparts) [3882 3890])
                            ("VariableGEPIndex" type
                               (:members 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4101 4116])
                                    ("ZExtBits" variable (:type "unsigned int") (reparse-symbol classsubparts) [4346 4364])
                                    ("SExtBits" variable (:type "unsigned int") (reparse-symbol classsubparts) [4369 4387])
                                    ("Scale" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4393 4405])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("VariableGEPIndex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4427 4457]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [4411 4595])
                                    ("!=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("VariableGEPIndex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4617 4647]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [4601 4694]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [4013 4699])
                            ("DecomposedGEP" type
                               (:members 
                                  ( ("Base" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4894 4912])
                                    ("StructOffset" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4988 5007])
                                    ("OtherOffset" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5109 5127])
                                    ("VarIndices" variable (:type ("SmallVector" type
                                         (:template-specifier 
                                            ( ("VariableGEPIndex" type nil nil nil)
                                              ("4"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [5179 5223]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [4836 5228])
                            ("VisitedPhiBBs" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("BasicBlock" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [5805 5854])
                            ("Visited" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("16"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [5919 5958])
                            ("GetLinearExpression" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6005 6020])
                                    ("Scale" variable
                                       (:reference 1
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6021 6034])
                                    ("Offset" variable
                                       (:reference 1
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6035 6049])
                                    ("ZExtBits" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [6072 6091])
                                    ("SExtBits" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [6092 6111])
                                    ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6134 6155])
                                    ("Depth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6156 6171])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6172 6192])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6215 6233])
                                    ("NSW" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [6234 6244])
                                    ("NUW" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [6245 6255]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5962 6256])
                            ("DecomposeGEPExpression" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6295 6310])
                                    ("Decomposed" variable
                                       (:reference 1
                                        :type ("DecomposedGEP" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6311 6337])
                                    ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6344 6365])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6366 6386])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6387 6405]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6260 6406])
                            ("isGEPBaseAtNegativeOffset" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("GEPOp" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("GEPOperator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6448 6473])
                                    ("DecompGEP" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DecomposedGEP" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6480 6511])
                                    ("DecompObject" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DecomposedGEP" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6512 6546])
                                    ("ObjectAccessSize" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6553 6583]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6410 6584])
                            ("constantOffsetHeuristic" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("VarIndices" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("VariableGEPIndex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7052 7104])
                                    ("V1Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7131 7151])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7152 7172])
                                    ("BaseOffset" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7199 7216])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7217 7237])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7264 7282]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7021 7283])
                            ("isValueEqualInPotentialCycles" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7322 7338])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7339 7355]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7287 7356])
                            ("GetIndexDifference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Dest" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("VariableGEPIndex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7384 7424])
                                    ("Src" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("VariableGEPIndex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7451 7496]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7360 7497])
                            ("aliasGEP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("GEPOperator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7522 7544])
                                    ("V1Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7545 7565])
                                    ("V1AAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7589 7615])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7616 7632])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7656 7676])
                                    ("V2AAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7677 7703])
                                    ("UnderlyingV1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7727 7753])
                                    ("UnderlyingV2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7754 7780])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7804 7822]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7501 7823])
                            ("aliasPHI" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7848 7866])
                                    ("PNSize" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7867 7887])
                                    ("PNAAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7911 7937])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7938 7954])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7978 7998])
                                    ("V2AAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7999 8025])
                                    ("UnderV2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8049 8070])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8071 8089]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7827 8090])
                            ("aliasSelect" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SelectInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8118 8139])
                                    ("SISize" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8140 8160])
                                    ("SIAAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8187 8213])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8214 8230])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8257 8277])
                                    ("V2AAInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8278 8304])
                                    ("UnderV2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8331 8352])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8353 8371]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8094 8372])
                            ("aliasCheck" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8399 8415])
                                    ("V1Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8416 8436])
                                    ("V1AATag" variable (:type ("AAMDNodes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8462 8480])
                                    ("V2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8481 8497])
                                    ("V2Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8523 8543])
                                    ("V2AATag" variable (:type ("AAMDNodes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8544 8562])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8588 8606])
                                    ("O1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8607 8632])
                                    ("O2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8659 8684]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8376 8686]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1788 8689])
                    ("BasicAA" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [8816 8850])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8854 8877])
                            ("public" label nil (reparse-symbol classsubparts) [8879 8886])
                            ("Result" variable
                               (:default-value "BasicAAResult"
                                :type "int")
                                (reparse-symbol classsubparts) [8895 8918])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8940 8952])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8953 8981]))                                  
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8922 8982]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8762 8985])
                    ("BasicAAWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("Result" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("BasicAAResult" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [9099 9137])
                            ("anchor" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [9141 9163])
                            ("public" label nil (reparse-symbol classsubparts) [9165 9172])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [9175 9190])
                            ("BasicAAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("BasicAAWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9194 9215])
                            ("getResult" function (:type ("BasicAAResult" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9219 9265])
                            ("getResult" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("BasicAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9268 9326])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [9362 9371])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9415 9430]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9048 9433])
                    ("createBasicAAWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("FunctionPass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9435 9476])
                    ("createLegacyPMBasicAAResult" function
                       (:prototype-flag t
                        :arguments 
                          ( ("P" variable
                               (:reference 1
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9725 9733])
                            ("F" variable
                               (:reference 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9734 9746]))                          
                        :type ("BasicAAResult" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9683 9747])
                    ("LegacyAARGetter" type
                       (:members 
                          ( ("P" variable (:type ("Pass" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10000 10008])
                            ("BAR" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("BasicAAResult" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10011 10039])
                            ("AAR" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("AAResults" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10042 10066])
                            ("public" label nil (reparse-symbol classsubparts) [10068 10075])
                            ("LegacyAARGetter" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :type ("Pass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10094 10102]))                                  
                                :type ("LegacyAARGetter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10078 10112])
                            ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10137 10149]))                                  
                                :type ("AAResults" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10115 10278]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9974 10281]))                  
                :type "namespace")
                nil [1056 10284]))          
      :file "BasicAliasAnalysis.h"
      :pointmax 10353
      :fsize 10352
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((semantic-list 9395 . 9414) (symbol 9379 . 9395) (VOID 9374 . 9378) (semantic-list 9348 . 9361) (symbol 9335 . 9348) (BOOL 9330 . 9334) (USING 8889 . 8894) (punctuation 2569 . 2570))
      :lexical-table 
        '(("LLVM_ANALYSIS_BASICALIASANALYSIS_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f8187d04"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_GLOBALSMODREF_H" variable (:constant-flag t) nil [592 621])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [623 663])
            ("llvm/Analysis/CallGraph.h" include nil nil [664 700])
            ("llvm/IR/Constants.h" include nil nil [701 731])
            ("llvm/IR/Function.h" include nil nil [732 761])
            ("llvm/IR/Module.h" include nil nil [762 789])
            ("llvm/IR/ValueHandle.h" include nil nil [790 822])
            ("llvm/Pass.h" include nil nil [823 845])
            ("list" include (:system-flag t) nil [846 861])
            ("llvm" type
               (:members 
                  ( ("GlobalsAAResult" type
                       (:superclasses 
                          ( ("AAResultBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AAResultBase" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1115 1152])
                            ("FunctionInfo" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [1156 1175])
                            ("DL" variable
                               (:constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1179 1200])
                            ("GetTLI" variable (:type "int") (reparse-symbol classsubparts) [1257 1264])
                            ("NonAddressTakenGlobals" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("GlobalValue" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1326 1385])
                            ("UnknownFunctionsWithLocalLinkage" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [1459 1505])
                            ("IndirectGlobals" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("GlobalValue" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1614 1666])
                            ("AllocsForIndirectGlobals" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("GlobalValue" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1798 1868])
                            ("FunctionInfos" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Function" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("FunctionInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1946 2001])
                            ("FunctionToSCCMap" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Function" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2187 2241])
                            ("CallbackVH" variable (:type "int") (reparse-symbol classsubparts) [2342 2564])
                            ("Handles" variable (:type ("std::list" type
                                 (:template-specifier 
                                    ( ("DeletionCallbackHandle" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2874 2916])
                            ("GlobalsAAResult" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2952 2973])
                                    ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2980 2994])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2994 3032])
                                    ("" variable (:type ("GetTLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3034 3041]))                                  
                                :type ("GlobalsAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2929 3042])
                            ("public" label nil (reparse-symbol classsubparts) [3044 3051])
                            ("GlobalsAAResult" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("GlobalsAAResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3070 3088])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3088 3092]))                                  
                                :type ("GlobalsAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3054 3093])
                            ("GlobalsAAResult" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3096 3115])
                            ("analyzeModule" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3158 3168])
                                    ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3185 3199])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3199 3237])
                                    ("" variable (:type ("GetTLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3239 3246])
                                    ("CG" variable
                                       (:reference 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3263 3277]))                                  
                                :type ("GlobalsAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3119 3278])
                            ("alias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3395 3422])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3423 3450])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3471 3489]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3377 3490])
                            ("AAResultBase::getModRefInfo" variable (:type "int") (reparse-symbol classsubparts) [3500 3528])
                            ("getModRefInfo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3556 3577])
                                    ("Loc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3578 3604])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3632 3650]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3531 3651])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3924 3942]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3883 3943])
                            ("getModRefBehavior" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4216 4237]))                                  
                                :type ("FunctionModRefBehavior" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4175 4238])
                            ("private" label nil (reparse-symbol classsubparts) [4240 4248])
                            ("getFunctionInfo" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4281 4299]))                                  
                                :type ("FunctionInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4251 4300])
                            ("AnalyzeGlobals" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4324 4334]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4304 4335])
                            ("AnalyzeCallGraph" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CG" variable
                                       (:reference 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4360 4374])
                                    ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4375 4385]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4338 4386])
                            ("AnalyzeUsesOfPointer" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4415 4424])
                                    ("Readers" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Function" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4453 4499])
                                    ("Writers" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Function" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4529 4575])
                                    ("OkayStoreDest" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4605 4641]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4389 4643])
                            ("AnalyzeIndirectGlobalMemory" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("GV" variable
                                       (:pointer 1
                                        :type ("GlobalVariable" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4679 4698]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4646 4699])
                            ("CollectSCCMembership" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CG" variable
                                       (:reference 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4728 4742]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4702 4743])
                            ("isNonEscapingGlobalNoAlias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("GV" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4779 4801])
                                    ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4802 4817]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4747 4818])
                            ("getModRefInfoForArgument" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4857 4878])
                                    ("GV" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4917 4939])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4940 4958]))                                  
                                :type ("ModRefInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4821 4959]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1050 4962])
                    ("GlobalsAA" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [5093 5129])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5132 5155])
                            ("public" label nil (reparse-symbol classsubparts) [5157 5164])
                            ("Result" type
                               (:typedef ("GlobalsAAResult" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [5167 5198])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5222 5232])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5233 5259]))                                  
                                :type ("GlobalsAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5202 5260]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5035 5263])
                    ("GlobalsAAWrapperPass" type
                       (:superclasses 
                          ( ("ModulePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("Result" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("GlobalsAAResult" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [5379 5419])
                            ("public" label nil (reparse-symbol classsubparts) [5421 5428])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [5431 5446])
                            ("GlobalsAAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("GlobalsAAWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5450 5473])
                            ("getResult" function (:type ("GlobalsAAResult" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5477 5525])
                            ("getResult" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("GlobalsAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5528 5588])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [5620 5629])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [5663 5672])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [5716 5731]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5328 5734])
                    ("createGlobalsAAWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("ModulePass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5956 5997]))                  
                :type "namespace")
                nil [863 5999]))          
      :file "GlobalsModRef.h"
      :pointmax 6008
      :fsize 6007
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((semantic-list 5696 . 5715) (symbol 5680 . 5696) (VOID 5675 . 5679) (semantic-list 5651 . 5662) (symbol 5637 . 5651) (BOOL 5632 . 5636) (semantic-list 5608 . 5619) (symbol 5597 . 5608) (BOOL 5592 . 5596) (USING 3494 . 3499) (punctuation 3237 . 3238) (semantic-list 3224 . 3237) (punctuation 3198 . 3199) (punctuation 3087 . 3088) (punctuation 3032 . 3033) (semantic-list 3019 . 3032) (punctuation 2993 . 2994) (EXPLICIT 2920 . 2928) (punctuation 2340 . 2341) (symbol 2334 . 2339) (symbol 2311 . 2333) (STRUCT 2304 . 2310) (punctuation 1255 . 1256) (semantic-list 1242 . 1255) (punctuation 1241 . 1242) (symbol 1223 . 1240) (CONST 1217 . 1222) (punctuation 1216 . 1217) (symbol 1208 . 1216) (punctuation 1207 . 1208) (punctuation 1206 . 1207) (symbol 1203 . 1206))
      :lexical-table 
        '(("LLVM_ANALYSIS_GLOBALSMODREF_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f8187d24"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_LOOPANALYSISMANAGER_H" variable (:constant-flag t) nil [1199 1234])
            ("llvm/ADT/PostOrderIterator.h" include nil nil [1236 1275])
            ("llvm/ADT/PriorityWorklist.h" include nil nil [1276 1314])
            ("llvm/ADT/STLExtras.h" include nil nil [1315 1346])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [1347 1387])
            ("llvm/Analysis/BasicAliasAnalysis.h" include nil nil [1388 1433])
            ("llvm/Analysis/GlobalsModRef.h" include nil nil [1434 1474])
            ("llvm/Analysis/LoopInfo.h" include nil nil [1475 1510])
            ("llvm/Analysis/MemorySSA.h" include nil nil [1511 1547])
            ("llvm/Analysis/ScalarEvolution.h" include nil nil [1548 1590])
            ("llvm/Analysis/ScalarEvolutionAliasAnalysis.h" include nil nil [1591 1646])
            ("llvm/Analysis/TargetLibraryInfo.h" include nil nil [1647 1691])
            ("llvm/Analysis/TargetTransformInfo.h" include nil nil [1692 1738])
            ("llvm/IR/Dominators.h" include nil nil [1739 1770])
            ("llvm/IR/PassManager.h" include nil nil [1771 1803])
            ("llvm" type
               (:members 
                  ( ("LoopStandardAnalysisResults" type
                       (:members 
                          ( ("AA" variable (:type ("AAResults" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2119 2133])
                            ("AC" variable (:type ("AssumptionCache" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2136 2156])
                            ("DT" variable (:type ("DominatorTree" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2159 2177])
                            ("LI" variable (:type ("LoopInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2180 2193])
                            ("SE" variable (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2196 2216])
                            ("TLI" variable (:type ("TargetLibraryInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2219 2242])
                            ("TTI" variable (:type ("TargetTransformInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2245 2270])
                            ("MSSA" variable
                               (:pointer 1
                                :type ("MemorySSA" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2273 2289]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2080 2292])
                    ("AllAnalysesOn" type
                       (:prototype t
                        :template-specifier 
                          ( ("Loop" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2381 2407])
                    ("AnalysisManager" type
                       (:prototype t
                        :template-specifier 
                          ( ("Loop" type nil nil nil)
                            ("LoopStandardAnalysisResults" type (:reference 1) nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2425 2484])
                    ("LoopAnalysisManager" type
                       (:typedef ("AnalysisManager" type
                             (:template-specifier 
                                ( ("Loop" type nil nil nil)
                                  ("LoopStandardAnalysisResults" type (:reference 1) nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [2780 2865])
                    ("LoopAnalysisManagerFunctionProxy" type
                       (:typedef ("InnerAnalysisManagerProxy" type
                             (:template-specifier 
                                ( ("LoopAnalysisManager" type nil nil nil)
                                  ("Function" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [2927 3029])
                    ("Result" type
                       (:type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3327 3334])
                            ("Result" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("InnerAM" variable
                                       (:reference 1
                                        :type ("LoopAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3353 3382])
                                    ("LI" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3383 3396]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3346 3451])
                            ("Result" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Result" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3461 3470])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3470 3474]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3454 3751])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Result" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3772 3781])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3781 3785]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3754 4077])
                            ("Result" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4080 4373])
                            ("markMSSAUsed" function (:type "void") (reparse-symbol classsubparts) [4456 4496])
                            ("getManager" function (:type ("LoopAnalysisManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4541 4595])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5084 5096])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5097 5125])
                                    ("Inv" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5144 5186]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5068 5187])
                            ("private" label nil (reparse-symbol classsubparts) [5189 5197])
                            ("InnerAM" variable
                               (:pointer 1
                                :type ("LoopAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5200 5229])
                            ("LI" variable
                               (:pointer 1
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5232 5245])
                            ("MSSAUsed" variable (:type "bool") (reparse-symbol classsubparts) [5248 5262]))                          
                        :parent "LoopAnalysisManagerFunctionProxy")
                        (reparse-symbol namespacesubparts) [3266 5265])
                    ("run" function
                       (:type ("LoopAnalysisManagerFunctionProxy::Result" type (:type "class") nil nil)
                        :arguments 
                          ( ("F" variable
                               (:reference 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5489 5501])
                            ("AM" variable
                               (:reference 1
                                :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5502 5530]))                          
                        :parent "LoopAnalysisManagerFunctionProxy"
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [5398 5531])
                    ("InnerAnalysisManagerProxy" type
                       (:prototype t
                        :template-specifier 
                          ( ("LoopAnalysisManager" type nil nil nil)
                            ("Function" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5637 5700])
                    ("OuterAnalysisManagerProxy" type
                       (:prototype t
                        :template-specifier 
                          ( ("FunctionAnalysisManager" type nil nil nil)
                            ("Loop" type nil nil nil)
                            ("LoopStandardAnalysisResults" type (:reference 1) nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5718 5860])
                    ("FunctionAnalysisManagerLoopProxy" type
                       (:typedef ("OuterAnalysisManagerProxy" type
                             (:template-specifier 
                                ( ("FunctionAnalysisManager" type nil nil nil)
                                  ("Loop" type nil nil nil)
                                  ("LoopStandardAnalysisResults" type (:reference 1) nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [5921 6088])
                    ("getLoopPassPreservedAnalyses" function
                       (:prototype-flag t
                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6166 6215]))                  
                :type "namespace")
                nil [1805 6217]))          
      :file "LoopAnalysisManager.h"
      :pointmax 6265
      :fsize 6264
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((TEMPLATE 5709 . 5717) (EXTERN 5702 . 5708) (TEMPLATE 5628 . 5636) (EXTERN 5621 . 5627) (punctuation 3780 . 3781) (punctuation 3469 . 3470) (EXPLICIT 3337 . 3345) (TEMPLATE 2416 . 2424) (EXTERN 2409 . 2415) (TEMPLATE 2372 . 2380) (EXTERN 2365 . 2371))
      :lexical-table 
        '(("LLVM_ANALYSIS_LOOPANALYSISMANAGER_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f8187d44"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_LOOPINFO_H" variable (:constant-flag t) nil [1859 1883])
            ("llvm/ADT/DenseMap.h" include nil nil [1885 1915])
            ("llvm/ADT/DenseSet.h" include nil nil [1916 1946])
            ("llvm/ADT/GraphTraits.h" include nil nil [1947 1980])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [1981 2014])
            ("llvm/ADT/SmallVector.h" include nil nil [2015 2048])
            ("llvm/IR/CFG.h" include nil nil [2049 2073])
            ("llvm/IR/Instruction.h" include nil nil [2074 2106])
            ("llvm/IR/Instructions.h" include nil nil [2107 2140])
            ("llvm/IR/PassManager.h" include nil nil [2141 2173])
            ("llvm/Pass.h" include nil nil [2174 2196])
            ("llvm/Support/Allocator.h" include nil nil [2197 2232])
            ("algorithm" include (:system-flag t) nil [2233 2253])
            ("utility" include (:system-flag t) nil [2254 2272])
            ("llvm" type
               (:members 
                  ( ("DominatorTree" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2292 2312])
                    ("LoopInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2313 2328])
                    ("Loop" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2329 2340])
                    ("InductionDescriptor" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2341 2367])
                    ("MDNode" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2368 2381])
                    ("MemorySSAUpdater" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2382 2405])
                    ("PHINode" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2406 2420])
                    ("ScalarEvolution" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2421 2443])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2444 2462])
                    ("DominatorTreeBase" type
                       (:template 
                          ( ("N" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsPostDom") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2463 2522])
                    ("LoopInfoBase" type
                       (:template 
                          ( ("N" type (:type "class") nil nil)
                            ("M" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2523 2570])
                    ("LoopBase" type
                       (:template 
                          ( ("N" type (:type "class") nil nil)
                            ("M" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2571 2614])
                    ("LoopBase" type
                       (:template 
                          ( ("BlockT" type (:type "class") nil nil)
                            ("LoopT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("ParentLoop" variable
                               (:pointer 1
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2854 2872])
                            ("SubLoops" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("LoopT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2922 2952])
                            ("Blocks" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("BlockT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3026 3055])
                            ("DenseBlockSet" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("BlockT" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3059 3104])
                            ("public" label nil (reparse-symbol classsubparts) [3378 3385])
                            ("getLoopDepth" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3595 3826])
                            ("getHeader" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3829 3886])
                            ("getParentLoop" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3889 3940])
                            ("setParentLoop" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4021 4030]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4002 4114])
                            ("contains" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4206 4221]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4192 4402])
                            ("contains" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4484 4501]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4470 4607])
                            ("contains" function
                               (:template 
                                  ( ("InstT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("InstT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4712 4730]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [4675 4782])
                            ("getSubLoops" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("LoopT" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4846 4978])
                            ("getSubLoopsVector" function (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("LoopT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4981 5107])
                            ("iterator" type
                               (:typedef ("std::vector::const_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [5110 5173])
                            ("reverse_iterator" type
                               (:typedef ("std::vector::const_reverse_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [5176 5261])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5264 5320])
                            ("end" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5323 5375])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5378 5444])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5447 5509])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5512 5564])
                            ("getBlocks" function
                               (:methodconst-flag t
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("BlockT" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5630 5749])
                            ("block_iterator" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5789 5819])
                            ("block_begin" function
                               (:methodconst-flag t
                                :type ("block_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5822 5888])
                            ("block_end" function
                               (:methodconst-flag t
                                :type ("block_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5891 5953])
                            ("blocks" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("iterator_range" type
                                     (:template-specifier 
                                        ( ("block_iterator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5956 6123])
                            ("getNumBlocks" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [6256 6375])
                            ("getBlocksVector" function (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("BlockT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6517 6640])
                            ("getBlocksSet" function (:type ("SmallPtrSetImpl" type
                                 (:template-specifier 
                                    ( ("BlockT" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6743 6880])
                            ("getBlocksSet" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("BlockT" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [6943 7092])
                            ("isInvalid" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7515 7632])
                            ("isLoopExiting" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7795 7812]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7776 8084])
                            ("isLoopLatch" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8361 8378]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8344 8749])
                            ("getNumBackEdges" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [8814 9106])
                            ("getExitingBlocks" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ExitingBlocks" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("BlockT" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9758 9799]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9736 9806])
                            ("getExitingBlock" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9916 9948])
                            ("getExitBlocks" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ExitBlocks" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("BlockT" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10106 10144]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10087 10151])
                            ("getExitBlock" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10258 10287])
                            ("hasDedicatedExits" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [10389 10420])
                            ("getUniqueExitBlocks" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ExitBlocks" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("BlockT" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10584 10622]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10559 10629])
                            ("getUniqueNonLatchExitBlocks" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ExitBlocks" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("BlockT" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10969 11007]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10936 11014])
                            ("getUniqueExitBlock" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11127 11162])
                            ("Edge" type
                               (:typedef ("std::pair" type
                                     (:template-specifier 
                                        ( ("BlockT" type (:pointer 1) nil nil)
                                          ("BlockT" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [11183 11226])
                            ("getExitEdges" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ExitEdges" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Edge" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11308 11341]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11290 11348])
                            ("getLoopPreheader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11693 11726])
                            ("getLoopPredecessor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11986 12021])
                            ("getLoopLatch" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BlockT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12164 12193])
                            ("getLoopLatches" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("LoopLatches" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("BlockT" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [12340 12379]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12320 12600])
                            ("getInnerLoopsInPreorder" function
                               (:template 
                                  ( ("Type" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("L" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12788 12803])
                                    ("PreOrderLoops" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Type" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [12842 12879]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [12728 13306])
                            ("getLoopsInPreorder" function
                               (:methodconst-flag t
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("LoopT" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [13428 13718])
                            ("getLoopsInPreorder" function (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("LoopT" type (:pointer 1) nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [13721 13981])
                            ("addBasicBlockToLoop" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("NewBB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14516 14530])
                                    ("LI" variable
                                       (:reference 1
                                        :type ("LoopInfoBase" type
                                             (:template-specifier 
                                                ( ("BlockT" type nil nil nil)
                                                  ("LoopT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [14531 14563]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14491 14564])
                            ("replaceChildLoopWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("OldChild" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14857 14873])
                                    ("NewChild" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14874 14890]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14831 14891])
                            ("addChildLoop" function
                               (:arguments 
                                  ( ("NewChild" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15022 15038]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15004 15262])
                            ("removeChildLoop" function
                               (:pointer 1
                                :arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15447 15458]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15424 15795])
                            ("removeChildLoop" function
                               (:pointer 1
                                :arguments 
                                  ( ("Child" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15980 15993]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15957 16053])
                            ("addBlockEntry" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16274 16285]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16255 16405])
                            ("reverseBlock" function
                               (:arguments 
                                  ( ("from" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [16493 16507]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16475 16626])
                            ("reserveBlocks" function
                               (:arguments 
                                  ( ("size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [16692 16706]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16673 16796])
                            ("moveToHeader" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16968 16979]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16950 17294])
                            ("removeBlockFromLoop" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17495 17506]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17470 17711])
                            ("verifyLoop" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [17743 17767])
                            ("verifyLoopNest" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Loops" variable
                                       (:pointer 1
                                        :type ("DenseSet" type
                                             (:template-specifier 
                                                ( ("LoopT" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [17854 17885]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17834 17892])
                            ("isAnnotatedParallel" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18045 18095])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18155 18171])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [18172 18190])
                                    ("Verbose" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [18192 18212]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18144 18220])
                            ("protected" label nil (reparse-symbol classsubparts) [18222 18232])
                            ("LoopInfoBase" friend nil (reparse-symbol classsubparts) [18235 18260])
                            ("LoopBase" function
                               (:constructor-flag t
                                :type ("LoopBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18314 18349])
                            ("LoopBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18371 18382]))                                  
                                :type ("LoopBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18362 18466])
                            ("LoopBase" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [19022 19260]))                          )
                        (reparse-symbol namespacesubparts) [2798 19263])
                    ("<<" function
                       (:template 
                          ( ("BlockT" type (:type "class") nil nil)
                            ("LoopT" type (:type "class") nil nil))                          
                        :type ("raw_ostream" type (:type "class") nil nil)
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19326 19342])
                            ("Loop" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LoopBase" type
                                     (:template-specifier 
                                        ( ("BlockT" type nil nil nil)
                                          ("LoopT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19343 19379]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [19265 19414])
                    ("LoopBase" type
                       (:prototype t
                        :template-specifier 
                          ( ("BasicBlock" type nil nil nil)
                            ("Loop" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [19468 19501])
                    ("Loop" type
                       (:superclasses 
                          ( ("LoopBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [19670 19677])
                            ("LocRange" type
                               (:members 
                                  ( ("Start" variable (:type ("DebugLoc" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19766 19781])
                                    ("End" variable (:type ("DebugLoc" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19786 19799])
                                    ("public" label nil (reparse-symbol classsubparts) [19803 19810])
                                    ("LocRange" function
                                       (:constructor-flag t
                                        :type ("LocRange" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19815 19828])
                                    ("LocRange" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Start" variable (:type ("DebugLoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19842 19857]))                                          
                                        :type ("LocRange" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19833 19887])
                                    ("LocRange" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Start" variable (:type ("DebugLoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19901 19916])
                                            ("End" variable (:type ("DebugLoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19917 19930]))                                          
                                        :type ("LocRange" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19892 19988])
                                    ("getStart" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("DebugLoc" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19994 20044])
                                    ("getEnd" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("DebugLoc" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20049 20095]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [19745 20193])
                            ("isLoopInvariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20278 20293]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20257 20300])
                            ("hasLoopInvariantOperands" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20427 20448]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20397 20455])
                            ("makeLoopInvariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20927 20936])
                                    ("Changed" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [20937 20951])
                                    ("InsertPt" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20977 21008])
                                    ("MSSAU" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("MemorySSAUpdater" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21035 21068]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20904 21076])
                            ("makeLoopInvariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21551 21566])
                                    ("Changed" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [21567 21581])
                                    ("InsertPt" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21607 21638])
                                    ("MSSAU" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("MemorySSAUpdater" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21665 21698]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [21528 21706])
                            ("getCanonicalInductionVariable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("PHINode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22034 22081])
                            ("getIncomingAndBackEdge" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22248 22261])
                                    ("" variable (:type ("Incoming" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22261 22270])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22301 22314])
                                    ("" variable (:type ("Backedge" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22314 22323]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [22220 22330])
                            ("LoopBounds" type
                               (:members 
                                  ( ("getBounds" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("L" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24029 24043])
                                            ("IndVar" variable
                                               (:reference 1
                                                :type ("PHINode" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24044 24060])
                                            ("SE" variable
                                               (:reference 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24109 24129]))                                          
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("Loop::LoopBounds" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [23985 24130])
                                    ("getInitialIVValue" function
                                       (:methodconst-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24198 24257])
                                    ("getStepInst" function
                                       (:methodconst-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24333 24386])
                                    ("getStepValue" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24523 24572])
                                    ("getFinalIVValue" function
                                       (:methodconst-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24638 24693])
                                    ("getCanonicalPredicate" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("ICmpInst::Predicate" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26263 26313])
                                    ("Direction" type (:type "class") (reparse-symbol classsubparts) [26532 26584])
                                    ("getDirection" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("Direction" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26629 26660])
                                    ("private" label nil (reparse-symbol classsubparts) [26664 26672])
                                    ("LoopBounds" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Loop" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26688 26705])
                                            ("I" variable
                                               (:reference 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26706 26715])
                                            ("SI" variable
                                               (:reference 1
                                                :type ("Instruction" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26716 26732])
                                            ("SV" variable
                                               (:pointer 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26733 26743])
                                            ("F" variable
                                               (:reference 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26744 26753])
                                            ("SE" variable
                                               (:reference 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26769 26789]))                                          
                                        :type ("LoopBounds" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [26677 26893])
                                    ("L" variable
                                       (:constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26899 26913])
                                    ("InitialIVValue" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26975 26997])
                                    ("StepInst" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27067 27089])
                                    ("StepValue" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27191 27208])
                                    ("FinalIVValue" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27268 27288])
                                    ("SE" variable (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27294 27314]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [23637 27319])
                            ("getBounds" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27449 27469]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("LoopBounds" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [27418 27476])
                            ("getInductionVariable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27945 27965]))                                  
                                :type ("PHINode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27915 27972])
                            ("getInductionDescriptor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28136 28156])
                                    ("IndDesc" variable
                                       (:reference 1
                                        :type ("InductionDescriptor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28187 28216]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [28108 28223])
                            ("isAuxiliaryInductionVariable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("AuxIndVar" variable
                                       (:reference 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28643 28662])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28699 28719]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [28609 28726])
                            ("getLoopGuardBranch" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("BranchInst" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29216 29255])
                            ("isGuarded" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [29371 29439])
                            ("isRotatedForm" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [29675 29847])
                            ("isCanonical" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29988 30008]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29971 30015])
                            ("isLCSSAForm" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DT" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30084 30102]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30067 30109])
                            ("isRecursivelyLCSSAForm" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DT" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30214 30232])
                                    ("LI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30233 30252]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30186 30259])
                            ("isLoopSimplifyForm" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [30401 30433])
                            ("isSafeToClone" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [30502 30529])
                            ("isAnnotatedParallel" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [31280 31313])
                            ("getLoopID" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("MDNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31653 31679])
                            ("setLoopID" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("LoopID" variable
                                       (:pointer 1
                                        :type ("MDNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32012 32027]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31997 32034])
                            ("setLoopAlreadyUnrolled" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [32398 32428])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [32432 32450])
                            ("dumpVerbose" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [32453 32478])
                            ("getStartLoc" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("DebugLoc" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32787 32816])
                            ("getLocRange" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("LocRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32867 32896])
                            ("getName" function
                               (:methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32900 33065])
                            ("private" label nil (reparse-symbol classsubparts) [33067 33075])
                            ("LoopInfoBase" friend nil (reparse-symbol classsubparts) [33099 33124])
                            ("LoopBase" friend nil (reparse-symbol classsubparts) [33146 33167])
                            ("Loop" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33203 33218]))                                  
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33198 33254]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [19621 33278])
                    ("LoopInfoBase" type
                       (:template 
                          ( ("BlockT" type (:type "class") nil nil)
                            ("LoopT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("BBMap" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("BlockT" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("LoopT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [33603 33643])
                            ("TopLevelLoops" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("LoopT" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [33646 33681])
                            ("LoopAllocator" variable (:type ("BumpPtrAllocator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33684 33715])
                            ("LoopBase" friend nil (reparse-symbol classsubparts) [33719 33740])
                            ("LoopInfo" friend nil (reparse-symbol classsubparts) [33759 33780])
                            ("public" label nil (reparse-symbol classsubparts) [33880 33887])
                            ("LoopInfoBase" function
                               (:constructor-flag t
                                :type ("LoopInfoBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33890 33907])
                            ("LoopInfoBase" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [33910 33946])
                            ("LoopInfoBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LoopInfoBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33963 33978])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33978 33982]))                                  
                                :type ("LoopInfoBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33950 34241])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LoopInfoBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34268 34283])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34283 34287]))                                  
                                :type ("LoopInfoBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34244 34531])
                            ("releaseMemory" function (:type "void") (reparse-symbol classsubparts) [34535 34688])
                            ("AllocateLoop" function
                               (:pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ArgsTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34742 34751])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34755 34760]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34722 34883])
                            ("iterator" type
                               (:typedef ("std::vector::const_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [34988 35051])
                            ("reverse_iterator" type
                               (:typedef ("std::vector::const_reverse_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [35054 35139])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35142 35198])
                            ("end" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35201 35253])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35256 35322])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35325 35387])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [35390 35442])
                            ("getLoopsInPreorder" function
                               (:prototype-flag t
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("LoopT" type (:pointer 1) nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [35684 35729])
                            ("getLoopsInReverseSiblingPreorder" function
                               (:prototype-flag t
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("LoopT" type (:pointer 1) nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [36088 36147])
                            ("getLoopFor" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36305 36322]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36287 36357])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36411 36428]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36387 36461])
                            ("getLoopDepth" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36606 36623]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [36584 36710])
                            ("isLoopHeader" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36777 36794]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36759 36881])
                            ("removeLoop" function
                               (:pointer 1
                                :arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37069 37080]))                                  
                                :type ("LoopT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37051 37300])
                            ("changeLoopFor" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37488 37499])
                                    ("L" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37500 37509]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [37469 37591])
                            ("changeTopLevelLoop" function
                               (:arguments 
                                  ( ("OldLoop" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37711 37726])
                                    ("NewLoop" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37727 37742]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [37687 37992])
                            ("addTopLevelLoop" function
                               (:arguments 
                                  ( ("New" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38090 38101]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [38069 38206])
                            ("removeBlock" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BlockT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38398 38409]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [38381 38597])
                            ("isNotAlreadyContainedIn" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("SubLoop" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38653 38674])
                                    ("ParentLoop" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38713 38737]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [38617 38905])
                            ("analyze" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DomTree" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DominatorTreeBase" type
                                             (:template-specifier 
                                                ( ("BlockT" type nil nil nil)
                                                  ("false" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [38977 39025]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [38964 39026])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39056 39072]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [39045 39079])
                            ("verify" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DomTree" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DominatorTreeBase" type
                                             (:template-specifier 
                                                ( ("BlockT" type nil nil nil)
                                                  ("false" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [39095 39143]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [39083 39150])
                            ("destroy" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("LoopT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39682 39691]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [39669 39898]))                          )
                        (reparse-symbol namespacesubparts) [33469 39901])
                    ("LoopInfoBase" type
                       (:prototype t
                        :template-specifier 
                          ( ("BasicBlock" type nil nil nil)
                            ("Loop" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [39955 39992])
                    ("LoopInfo" type
                       (:superclasses 
                          ( ("LoopInfoBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("BaseT" type
                               (:typedef ("LoopInfoBase" type
                                     (:template-specifier 
                                        ( ("BasicBlock" type nil nil nil)
                                          ("Loop" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [40053 40098])
                            ("LoopBase" friend nil (reparse-symbol classsubparts) [40102 40123])
                            ("public" label nil (reparse-symbol classsubparts) [40229 40236])
                            ("LoopInfo" function
                               (:constructor-flag t
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40239 40252])
                            ("LoopInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("DomTree" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DominatorTreeBase" type
                                             (:template-specifier 
                                                ( ("BasicBlock" type nil nil nil)
                                                  ("false" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [40273 40325]))                                  
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40264 40326])
                            ("LoopInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40339 40350])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40350 40354]))                                  
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40330 40403])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40426 40437])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40437 40441]))                                  
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40406 40525])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40583 40595])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40596 40624])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40643 40682]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [40567 40683])
                            ("erase" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41067 41075]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [41056 41076])
                            ("replacementPreservesLCSSAForm" function
                               (:arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41215 41233])
                                    ("To" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41234 41244]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [41180 42055])
                            ("movementPreservesLCSSAForm" function
                               (:arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42346 42364])
                                    ("NewLoc" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42365 42385]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42314 44541]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [39994 44544])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("NodeRef" type
                               (:typedef ("Loop" type (:type "class") nil nil)
                                :pointer 1
                                :type "typedef")
                                (reparse-symbol classsubparts) [44648 44676])
                            ("ChildIteratorType" type
                               (:typedef ("LoopInfo::iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [44679 44724])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44756 44770]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44728 44784])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44824 44834]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44787 44857])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44895 44905]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44860 44926]))                          
                        :template-specifier 
                          ( ("Loop" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [44599 44929])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("NodeRef" type
                               (:typedef ("Loop" type (:type "class") nil nil)
                                :pointer 1
                                :type "typedef")
                                (reparse-symbol classsubparts) [44974 44996])
                            ("ChildIteratorType" type
                               (:typedef ("LoopInfo::iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [44999 45044])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45076 45084]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45048 45098])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45138 45148]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45101 45171])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45209 45219]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45174 45240]))                          
                        :template-specifier 
                          ( ("Loop" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [44931 45243])
                    ("LoopAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [45372 45411])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45414 45437])
                            ("public" label nil (reparse-symbol classsubparts) [45439 45446])
                            ("Result" type
                               (:typedef ("LoopInfo" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [45449 45473])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45490 45502])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45503 45531]))                                  
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45477 45532]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [45308 45535])
                    ("LoopPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45653 45669])
                            ("public" label nil (reparse-symbol classsubparts) [45671 45678])
                            ("LoopPrinterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45706 45722]))                                  
                                :type ("LoopPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45690 45734])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45759 45771])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45772 45800]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45737 45801]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [45587 45804])
                    ("LoopVerifierPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45948 45960])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45961 45989]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45926 45990]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [45857 45993])
                    ("LoopInfoWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("LI" variable (:type ("LoopInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46120 46132])
                            ("public" label nil (reparse-symbol classsubparts) [46134 46141])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [46144 46159])
                            ("LoopInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("LoopInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46210 46232])
                            ("getLoopInfo" function (:type ("LoopInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46236 46274])
                            ("getLoopInfo" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("LoopInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46277 46327])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [46430 46439])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [46465 46480])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [46595 46610])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [46655 46670]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [46068 46673])
                    ("printLoop" function
                       (:prototype-flag t
                        :arguments 
                          ( ("L" variable
                               (:reference 1
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46758 46766])
                            ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46767 46783])
                            ("Banner" variable
                               (:reference 1
                                :constant-flag t
                                :default-value "\"\""
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46784 46814]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [46743 46816])
                    ("findOptionMDForLoopID" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("LoopID" variable
                               (:pointer 1
                                :type ("MDNode" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46982 46997])
                            ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46998 47013]))                          
                        :type ("MDNode" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [46952 47014])
                    ("findOptionMDForLoop" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("TheLoop" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47268 47288])
                            ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47289 47304]))                          
                        :type ("MDNode" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47240 47305])
                    ("isValidAsAccessGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("AccGroup" variable
                               (:pointer 1
                                :type ("MDNode" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47744 47761]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [47718 47762])
                    ("makePostTransformationMetadata" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("Context" variable
                               (:reference 1
                                :type ("llvm::LLVMContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48586 48613])
                            ("OrigLoopID" variable
                               (:pointer 1
                                :type ("MDNode" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48614 48633])
                            ("RemovePrefixes" variable (:type ("llvm::ArrayRef" type
                                 (:template-specifier 
                                    ( ("llvm::StringRef" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [48665 48712])
                            ("AddAttrs" variable (:type ("llvm::ArrayRef" type
                                 (:template-specifier 
                                    ( ("llvm::MDNode" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [48744 48784]))                          
                        :type ("llvm::MDNode" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [48540 48785]))                  
                :type "namespace")
                nil [2274 48788]))          
      :file "LoopInfo.h"
      :pointmax 48819
      :fsize 48818
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((semantic-list 46635 . 46654) (symbol 46619 . 46635) (VOID 46614 . 46618) (semantic-list 46551 . 46594) (symbol 46546 . 46551) (VOID 46541 . 46545) (semantic-list 46514 . 46537) (symbol 46505 . 46513) (semantic-list 46502 . 46504) (symbol 46489 . 46502) (VOID 46484 . 46488) (semantic-list 46462 . 46464) (symbol 46448 . 46462) (VOID 46443 . 46447) (semantic-list 46416 . 46429) (symbol 46403 . 46416) (BOOL 46398 . 46402) (EXPLICIT 45681 . 45689) (punctuation 40436 . 40437) (punctuation 40349 . 40350) (EXPLICIT 40255 . 40263) (punctuation 40226 . 40227) (DELETE 40220 . 40226) (punctuation 40218 . 40219) (semantic-list 40199 . 40217) (symbol 40191 . 40199) (punctuation 40187 . 40188) (DELETE 40181 . 40187) (punctuation 40179 . 40180) (semantic-list 40160 . 40178) (punctuation 40159 . 40160) (OPERATOR 40151 . 40159) (VOID 40146 . 40150) (punctuation 40141 . 40142) (punctuation 40140 . 40141) (symbol 40136 . 40140) (punctuation 40134 . 40135) (symbol 40124 . 40134) (punctuation 40123 . 40124) (TEMPLATE 39946 . 39954) (EXTERN 39939 . 39945) (punctuation 34753 . 34754) (punctuation 34752 . 34753) (punctuation 34751 . 34752) (punctuation 34750 . 34751) (punctuation 34720 . 34721) (symbol 34714 . 34720) (punctuation 34712 . 34713) (punctuation 34711 . 34712) (punctuation 34710 . 34711) (TYPENAME 34702 . 34710) (punctuation 34701 . 34702) (TEMPLATE 34692 . 34700) (punctuation 34282 . 34283) (punctuation 33977 . 33978) (punctuation 33877 . 33878) (DELETE 33871 . 33877) (punctuation 33869 . 33870) (semantic-list 33846 . 33868) (symbol 33834 . 33846) (punctuation 33830 . 33831) (DELETE 33824 . 33830) (punctuation 33822 . 33823) (semantic-list 33799 . 33821) (punctuation 33798 . 33799) (OPERATOR 33790 . 33798) (VOID 33785 . 33789) (punctuation 33780 . 33781) (punctuation 33755 . 33756) (punctuation 33754 . 33755) (symbol 33749 . 33754) (punctuation 33747 . 33748) (symbol 33741 . 33747) (punctuation 33740 . 33741) (punctuation 33274 . 33275) (DEFAULT 33267 . 33274) (punctuation 33265 . 33266) (semantic-list 33262 . 33264) (symbol 33258 . 33262) (punctuation 33257 . 33258) (EXPLICIT 33189 . 33197) (punctuation 33185 . 33186) (punctuation 33184 . 33185) (symbol 33180 . 33184) (punctuation 33178 . 33179) (symbol 33168 . 33178) (punctuation 33167 . 33168) (punctuation 33142 . 33143) (punctuation 33141 . 33142) (symbol 33137 . 33141) (punctuation 33135 . 33136) (symbol 33125 . 33135) (punctuation 33124 . 33125) (punctuation 33094 . 33095) (DEFAULT 33087 . 33094) (punctuation 33085 . 33086) (semantic-list 33082 . 33084) (symbol 33078 . 33082) (symbol 26574 . 26581) (punctuation 26572 . 26573) (symbol 26562 . 26572) (punctuation 26560 . 26561) (symbol 26550 . 26560) (symbol 26574 . 26581) (punctuation 26572 . 26573) (symbol 26562 . 26572) (punctuation 26560 . 26561) (symbol 26550 . 26560) (ENUM 26527 . 26531) (symbol 26574 . 26581) (punctuation 26572 . 26573) (symbol 26562 . 26572) (punctuation 26560 . 26561) (symbol 26550 . 26560) (symbol 26574 . 26581) (punctuation 26572 . 26573) (symbol 26562 . 26572) (punctuation 26560 . 26561) (symbol 26550 . 26560) (ENUM 26527 . 26531) (punctuation 22313 . 22314) (punctuation 22260 . 22261) (semantic-list 20164 . 20188) (CONST 20158 . 20163) (semantic-list 20155 . 20157) (BOOL 20151 . 20155) (OPERATOR 20142 . 20150) (EXPLICIT 20133 . 20141) (semantic-list 20164 . 20188) (CONST 20158 . 20163) (semantic-list 20155 . 20157) (BOOL 20151 . 20155) (OPERATOR 20142 . 20150) (EXPLICIT 20133 . 20141) (TEMPLATE 19459 . 19467) (EXTERN 19452 . 19458) (EXPLICIT 18353 . 18361) (punctuation 18275 . 18276) (punctuation 18274 . 18275) (symbol 18269 . 18274) (punctuation 18267 . 18268) (symbol 18261 . 18267) (punctuation 18260 . 18261) (punctuation 5788 . 5789) (punctuation 5787 . 5788) (punctuation 5786 . 5787) (punctuation 5785 . 5786) (symbol 5778 . 5784) (punctuation 5777 . 5778) (symbol 5769 . 5777) (TYPENAME 5760 . 5768) (TYPEDEF 5752 . 5759) (punctuation 3375 . 3376) (DELETE 3369 . 3375) (punctuation 3367 . 3368) (semantic-list 3333 . 3366) (punctuation 3332 . 3333) (OPERATOR 3324 . 3332) (punctuation 3320 . 3321) (punctuation 3318 . 3319) (symbol 3313 . 3318) (punctuation 3311 . 3312) (symbol 3305 . 3311) (punctuation 3304 . 3305) (symbol 3296 . 3304) (CONST 3290 . 3295) (punctuation 3286 . 3287) (DELETE 3280 . 3286) (punctuation 3278 . 3279) (semantic-list 3244 . 3277) (symbol 3236 . 3244))
      :lexical-table 
        '(("LLVM_ANALYSIS_LOOPINFO_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f8187d64"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_SCALAREVOLUTION_H" variable (:constant-flag t) nil [949 980])
            ("llvm/ADT/APInt.h" include nil nil [982 1009])
            ("llvm/ADT/ArrayRef.h" include nil nil [1010 1040])
            ("llvm/ADT/DenseMap.h" include nil nil [1041 1071])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [1072 1106])
            ("llvm/ADT/FoldingSet.h" include nil nil [1107 1139])
            ("llvm/ADT/Hashing.h" include nil nil [1140 1169])
            ("llvm/ADT/Optional.h" include nil nil [1170 1200])
            ("llvm/ADT/PointerIntPair.h" include nil nil [1201 1237])
            ("llvm/ADT/SetVector.h" include nil nil [1238 1269])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [1270 1303])
            ("llvm/ADT/SmallVector.h" include nil nil [1304 1337])
            ("llvm/Analysis/LoopInfo.h" include nil nil [1338 1373])
            ("llvm/IR/ConstantRange.h" include nil nil [1374 1408])
            ("llvm/IR/Function.h" include nil nil [1409 1438])
            ("llvm/IR/InstrTypes.h" include nil nil [1439 1470])
            ("llvm/IR/Instructions.h" include nil nil [1471 1504])
            ("llvm/IR/Operator.h" include nil nil [1505 1534])
            ("llvm/IR/PassManager.h" include nil nil [1535 1567])
            ("llvm/IR/ValueHandle.h" include nil nil [1568 1600])
            ("llvm/IR/ValueMap.h" include nil nil [1601 1630])
            ("llvm/Pass.h" include nil nil [1631 1653])
            ("llvm/Support/Allocator.h" include nil nil [1654 1689])
            ("llvm/Support/Casting.h" include nil nil [1690 1723])
            ("llvm/Support/Compiler.h" include nil nil [1724 1758])
            ("algorithm" include (:system-flag t) nil [1759 1779])
            ("cassert" include (:system-flag t) nil [1780 1798])
            ("cstdint" include (:system-flag t) nil [1799 1817])
            ("memory" include (:system-flag t) nil [1818 1835])
            ("utility" include (:system-flag t) nil [1836 1854])
            ("llvm" type
               (:members 
                  ( ("AssumptionCache" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1874 1896])
                    ("BasicBlock" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1897 1914])
                    ("Constant" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1915 1930])
                    ("ConstantInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1931 1949])
                    ("DataLayout" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1950 1967])
                    ("DominatorTree" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1968 1988])
                    ("GEPOperator" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1989 2007])
                    ("Instruction" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2008 2026])
                    ("LLVMContext" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2027 2045])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2046 2064])
                    ("ScalarEvolution" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2065 2087])
                    ("SCEVAddRecExpr" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2088 2109])
                    ("SCEVUnknown" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2110 2128])
                    ("StructType" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2129 2146])
                    ("TargetLibraryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2147 2171])
                    ("Type" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2172 2183])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2184 2196])
                    ("SCEV" type
                       (:superclasses 
                          ( ("FoldingSetNode" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("FoldingSetTrait" type
                               (:prototype t
                                :template-specifier 
                                  ( ("SCEV" type nil nil nil))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [2400 2429])
                            ("FastID" variable (:type ("FoldingSetNodeIDRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2560 2587])
                            ("SCEVType" variable
                               (:constant-flag t
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [2640 2670])
                            ("protected" label nil (reparse-symbol classsubparts) [2672 2682])
                            ("ExpressionSize" variable
                               (:constant-flag t
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [2748 2784])
                            ("SubclassData" variable
                               (:default-value "0"
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [2900 2932])
                            ("public" label nil (reparse-symbol classsubparts) [2934 2941])
                            ("NoWrapFlags" type
                               (:members 
                                  ( ("FlagAnyWrap" variable
                                       (:constant-flag t
                                        :default-value (3965 3966)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3951 3966])
                                    ("FlagNW" variable
                                       (:constant-flag t
                                        :default-value (4001 4009)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3992 4009])
                                    ("FlagNUW" variable
                                       (:constant-flag t
                                        :default-value (4043 4051)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4033 4051])
                                    ("FlagNSW" variable
                                       (:constant-flag t
                                        :default-value (4088 4096)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4078 4096])
                                    ("NoWrapMask" variable
                                       (:constant-flag t
                                        :default-value (4134 4146)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4121 4146]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [3928 4151])
                            ("SCEV" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4169 4198])
                                    ("SCEVTy" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4199 4215])
                                    ("ExpressionSize" variable (:type "unsigned short") (reparse-symbol arg-sub-list) [4232 4262]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4164 4334])
                            ("getSCEVType" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [4411 4460])
                            ("getType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4516 4538])
                            ("isZero" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4598 4618])
                            ("isOne" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4677 4696])
                            ("isAllOnesValue" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4766 4794])
                            ("isNonConstantNegative" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4870 4905])
                            ("getExpressionSize" function
                               (:methodconst-flag t
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [5500 5573])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5735 5751]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5724 5758])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [5803 5821]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2354 5824])
                    ("FoldingSetTrait" type
                       (:type "struct"
                        :members 
                          ( ("Profile" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6027 6041])
                                    ("ID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6042 6063]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6007 6082])
                            ("Equals" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6105 6119])
                                    ("ID" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6120 6147])
                                    ("IDHash" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6148 6164])
                                    ("TempID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6186 6211]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6086 6244])
                            ("ComputeHash" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6276 6290])
                                    ("TempID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6291 6316]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [6248 6357]))                          
                        :superclasses 
                          ( ("DefaultFoldingSetTrait" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("SCEV" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [5931 6360])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6393 6409])
                            ("S" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6410 6424]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6362 6456])
                    ("SCEVCouldNotCompute" type
                       (:superclasses 
                          ( ("SCEV" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SCEVCouldNotCompute" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("SCEVCouldNotCompute" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [6791 6813])
                            ("classof" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6909 6923]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6889 6924]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [6746 6927])
                    ("SCEVPredicate" type
                       (:superclasses 
                          ( ("FoldingSetNode" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("FoldingSetTrait" type
                               (:prototype t
                                :template-specifier 
                                  ( ("SCEVPredicate" type nil nil nil))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [7090 7128])
                            ("FastID" variable (:type ("FoldingSetNodeIDRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7259 7286])
                            ("public" label nil (reparse-symbol classsubparts) [7288 7295])
                            ("SCEVPredicateKind" type
                               (:members 
                                  ( ("P_Union" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7323 7331])
                                    ("P_Equal" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7332 7340])
                                    ("P_Wrap" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7341 7349]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [7298 7350])
                            ("protected" label nil (reparse-symbol classsubparts) [7352 7362])
                            ("Kind" variable (:type ("SCEVPredicateKind" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7365 7388])
                            ("public" label nil (reparse-symbol classsubparts) [7531 7538])
                            ("SCEVPredicate" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7555 7584])
                                    ("Kind" variable (:type ("SCEVPredicateKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7585 7608]))                                  
                                :type ("SCEVPredicate" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7541 7609])
                            ("getKind" function
                               (:methodconst-flag t
                                :type ("SCEVPredicateKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7613 7663])
                            ("getComplexity" function
                               (:methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7800 7852])
                            ("isAlwaysTrue" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [8000 8038])
                            ("implies" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8114 8137]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8093 8148])
                            ("print" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8266 8282])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [8283 8301]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8247 8313])
                            ("getExpr" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8423 8463]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [7035 8466])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8499 8515])
                            ("P" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SCEVPredicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8516 8539]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8468 8571])
                    ("FoldingSetTrait" type
                       (:type "struct"
                        :members 
                          ( ("Profile" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEVPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8801 8824])
                                    ("ID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8825 8846]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8781 8871])
                            ("Equals" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEVPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8894 8917])
                                    ("ID" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8918 8945])
                                    ("IDHash" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8967 8983])
                                    ("TempID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8984 9009]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8875 9042])
                            ("ComputeHash" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEVPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9074 9097])
                                    ("TempID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9128 9153]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [9046 9194]))                          
                        :superclasses 
                          ( ("DefaultFoldingSetTrait" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("SCEVPredicate" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [8687 9197])
                    ("SCEVPredicate" variable (:type "int") (reparse-symbol namespacesubparts) [9357 10168])
                    ("SCEVPredicate" variable (:type "int") (reparse-symbol namespacesubparts) [10850 14623])
                    ("SCEVPredicate" variable (:type "int") (reparse-symbol namespacesubparts) [15035 16301])
                    ("ScalarEvolution" type
                       (:members 
                          ( ("ScalarEvolutionsTest" friend nil (reparse-symbol classsubparts) [16496 16529])
                            ("public" label nil (reparse-symbol classsubparts) [16532 16539])
                            ("LoopDisposition" type
                               (:members 
                                  ( ("LoopVariant" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16638 16650])
                                    ("LoopInvariant" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16698 16712])
                                    ("LoopComputable" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16750 16816]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [16611 16817])
                            ("BlockDisposition" type
                               (:members 
                                  ( ("DoesNotDominateBlock" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16925 16946])
                                    ("DominatesBlock" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16995 17010])
                                    ("ProperlyDominatesBlock" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [17057 17127]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [16897 17128])
                            ("maskFlags" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17302 17326])
                                    ("Mask" variable (:type "int") (reparse-symbol arg-sub-list) [17379 17388]))                                  
                                :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17267 17440])
                            ("setFlags" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17492 17516])
                                    ("OnFlags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17568 17594]))                                  
                                :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17458 17649])
                            ("clearFlags" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17705 17729])
                                    ("OffFlags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17730 17757]))                                  
                                :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17667 17814])
                            ("ScalarEvolution" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17834 17846])
                                    ("TLI" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17847 17870])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17871 17891])
                                    ("DT" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17910 17928])
                                    ("LI" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17929 17942]))                                  
                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17818 17943])
                            ("ScalarEvolution" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17962 17980])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17980 17984]))                                  
                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17946 17985])
                            ("ScalarEvolution" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [17988 18007])
                            ("getContext" function
                               (:methodconst-flag t
                                :type ("LLVMContext" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18011 18069])
                            ("isSCEVable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18343 18352]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [18327 18359])
                            ("getTypeSizeInBits" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18488 18497]))                                  
                                :type ("uint64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18461 18504])
                            ("getEffectiveSCEVType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18763 18772]))                                  
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18736 18779])
                            ("getWiderType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("Ty1" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18846 18856])
                                    ("Ty2" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18857 18867]))                                  
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18827 18874])
                            ("containsAddRecurrence" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19028 19042]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19001 19043])
                            ("eraseValueFromMap" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19124 19133]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [19101 19134])
                            ("getSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19248 19257]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19228 19258])
                            ("getConstant" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("ConstantInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19286 19301]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19262 19302])
                            ("getConstant" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19329 19346]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19305 19347])
                            ("getConstant" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19374 19383])
                                    ("V" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19384 19395])
                                    ("isSigned" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [19396 19417]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19350 19419])
                            ("getTruncateExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19450 19465])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19466 19475])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [19476 19494]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19422 19496])
                            ("getZeroExtendExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19529 19544])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19545 19554])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [19555 19573]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19499 19575])
                            ("getSignExtendExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19608 19623])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19624 19633])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [19634 19652]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19578 19654])
                            ("getAnyExtendExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19686 19701])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19702 19711]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19657 19712])
                            ("getAddExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [19738 19773])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19799 19829])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19831 19843])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [19869 19887]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19715 19889])
                            ("getAddExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19915 19931])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19932 19948])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19974 20004])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20006 20018])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [20044 20062]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19892 20162])
                            ("getAddExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op0" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20188 20204])
                                    ("Op1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20205 20221])
                                    ("Op2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20222 20238])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20264 20294])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20296 20308])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [20334 20352]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20165 20457])
                            ("getMulExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [20483 20518])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20544 20574])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20576 20588])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [20614 20632]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20460 20634])
                            ("getMulExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20660 20676])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20677 20693])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20719 20749])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20751 20763])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [20789 20807]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20637 20907])
                            ("getMulExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Op0" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20933 20949])
                                    ("Op1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20950 20966])
                                    ("Op2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20967 20983])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21009 21039])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21041 21053])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [21079 21097]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20910 21202])
                            ("getUDivExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21229 21245])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21246 21262]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21205 21263])
                            ("getUDivExactExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21295 21311])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21312 21328]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21266 21329])
                            ("getURemExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21356 21372])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21373 21389]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21332 21390])
                            ("getAddRecExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21419 21437])
                                    ("Step" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21438 21455])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21456 21470])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21499 21523]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21393 21524])
                            ("getAddRecExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [21553 21593])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21622 21636])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21637 21661]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21527 21662])
                            ("getAddRecExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [21691 21737])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21766 21780])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21781 21805]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21665 21928])
                            ("createAddRecFromPHIWithCasts" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SymbolicPHI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUnknown" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22336 22367]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("std::pair" type (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("SmallVector" type (:template-specifier 
                                                ( ("SCEVPredicate" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil)
                                                  ("3"))                                                ) nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [22232 22368])
                            ("getGEPExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("GEP" variable
                                       (:pointer 1
                                        :type ("GEPOperator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22600 22617])
                                    ("IndexExprs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [22643 22691]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22577 22692])
                            ("getMinMaxExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Kind" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [22721 22735])
                                    ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [22764 22804]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22695 22805])
                            ("getSMaxExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22832 22848])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22849 22865]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22808 22866])
                            ("getSMaxExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [22893 22933]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22869 22934])
                            ("getUMaxExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22961 22977])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22978 22994]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22937 22995])
                            ("getUMaxExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [23022 23062]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22998 23063])
                            ("getSMinExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23090 23106])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23107 23123]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23066 23124])
                            ("getSMinExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [23151 23191]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23127 23192])
                            ("getUMinExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23219 23235])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23236 23252]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23195 23253])
                            ("getUMinExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Operands" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [23280 23320]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23256 23321])
                            ("getUnknown" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23347 23356]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23324 23357])
                            ("getCouldNotCompute" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23360 23393])
                            ("getZero" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23476 23485]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23456 23516])
                            ("getOne" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23598 23607]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23579 23638])
                            ("getSizeOfExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("IntTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23733 23745])
                                    ("AllocTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23746 23760]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23707 23761])
                            ("getOffsetOfExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("IntTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23868 23880])
                                    ("STy" variable
                                       (:pointer 1
                                        :type ("StructType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23881 23897])
                                    ("FieldNo" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [23898 23915]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23840 23916])
                            ("getNegativeSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23998 24012])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24043 24073])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24075 24087]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23970 24088])
                            ("getNotSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24165 24179]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24142 24180])
                            ("getMinusSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24272 24288])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24289 24305])
                                    ("Flags" variable
                                       (:default-value "SCEV"
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24333 24363])
                                    ("" variable (:type ("FlagAnyWrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24365 24377])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [24405 24423]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24247 24425])
                            ("getTruncateOrZeroExtend" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24615 24629])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24630 24639])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [24678 24696]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24579 24698])
                            ("getTruncateOrSignExtend" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24888 24902])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24903 24912])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [24951 24969]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24852 24971])
                            ("getNoopOrZeroExtend" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25202 25216])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25217 25226]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25170 25227])
                            ("getNoopOrSignExtend" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25458 25472])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25473 25482]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25426 25483])
                            ("getNoopOrAnyExtend" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25728 25742])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25743 25752]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25697 25753])
                            ("getTruncateOrNoop" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25923 25937])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25938 25947]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25893 25948])
                            ("getUMaxFromMismatchedTypes" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26117 26133])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26134 26150]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26078 26151])
                            ("getUMinFromMismatchedTypes" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26320 26336])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26337 26353]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26281 26354])
                            ("getUMinFromMismatchedTypes" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [26539 26574]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26500 26575])
                            ("getPointerBase" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26856 26870]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26829 26871])
                            ("getSCEVAtScope" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27437 27451])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27452 27466]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27410 27467])
                            ("getSCEVAtScope" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27577 27586])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27587 27601]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27550 27602])
                            ("isLoopEntryGuardedByCond" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27825 27839])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27840 27865])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27898 27914])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27915 27931]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27795 27932])
                            ("isLoopBackedgeGuardedByCond" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28104 28118])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28119 28144])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28180 28196])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28197 28213]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [28071 28214])
                            ("getSmallConstantTripCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28544 28558]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [28509 28559])
                            ("getSmallConstantTripCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29077 29091])
                                    ("ExitingBlock" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29092 29117]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29042 29118])
                            ("getSmallConstantMaxTripCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29309 29323]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29271 29324])
                            ("getSmallConstantTripMultiple" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29690 29704]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29652 29705])
                            ("getSmallConstantTripMultiple" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30156 30170])
                                    ("ExitingBlock" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30211 30236]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [30118 30237])
                            ("ExitCountKind" type
                               (:members 
                                  ( ("Exact" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [30574 30580])
                                    ("ConstantMaximum" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [30659 30675]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [30431 30680])
                            ("getExitCount" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31171 31185])
                                    ("ExitingBlock" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31186 31211])
                                    ("Kind" variable
                                       (:default-value "Exact"
                                        :type ("ExitCountKind" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31239 31265]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31146 31267])
                            ("getBackedgeTakenCount" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31944 31958])
                                    ("Kind" variable
                                       (:default-value "Exact"
                                        :type ("ExitCountKind" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31959 31985]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31910 31987])
                            ("getPredicatedBackedgeTakenCount" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32310 32324])
                                    ("Predicates" variable
                                       (:reference 1
                                        :type ("SCEVUnionPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32371 32402]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32266 32403])
                            ("getConstantMaxBackedgeTakenCount" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32725 32739]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32680 32799])
                            ("isBackedgeTakenCountMaxOrZero" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32965 32979]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [32930 32980])
                            ("hasLoopInvariantBackedgeTakenCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33125 33139]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33085 33140])
                            ("forgetAllLoops" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [33471 33493])
                            ("forgetLoop" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33769 33783]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [33753 33784])
                            ("forgetTopmostLoop" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34098 34112]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34075 34113])
                            ("forgetValue" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34329 34338]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34312 34339])
                            ("forgetLoopDispositions" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34565 34579]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34537 34609])
                            ("GetMinTrailingZeros" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34941 34955]))                                  
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34912 34956])
                            ("getUnsignedRange" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35123 35137]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35092 35191])
                            ("getUnsignedRangeMin" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35290 35304]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35264 35375])
                            ("getUnsignedRangeMax" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35474 35488]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35448 35559])
                            ("getSignedRange" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35722 35736]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35693 35788])
                            ("getSignedRangeMin" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35883 35897]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35859 35964])
                            ("getSignedRangeMax" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36059 36073]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36035 36140])
                            ("isKnownNegative" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36225 36239]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36204 36240])
                            ("isKnownPositive" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36325 36339]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36304 36340])
                            ("isKnownNonNegative" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36432 36446]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36408 36447])
                            ("isKnownNonPositive" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36539 36553]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36515 36554])
                            ("isKnownNonZero" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36638 36652]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [36618 36653])
                            ("SplitIntoInitAndPostInc" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37747 37761])
                                    ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37826 37840]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("SCEV" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("SCEV" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [37685 37841])
                            ("isKnownViaInduction" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38940 38965])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38966 38982])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39010 39026]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [38915 39027])
                            ("isKnownPredicate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39161 39186])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39187 39203])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39228 39244]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39139 39245])
                            ("isKnownOnEveryIteration" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39414 39439])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39471 39497])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39498 39514]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39385 39515])
                            ("isMonotonicPredicate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40101 40127])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40128 40153])
                                    ("Increasing" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [40182 40199]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [40075 40200])
                            ("isLoopInvariantPredicate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40499 40524])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40525 40541])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40574 40590])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40591 40605])
                                    ("InvariantPred" variable
                                       (:reference 1
                                        :type ("ICmpInst::Predicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40638 40673])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40706 40719])
                                    ("" variable (:type ("InvariantLHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40719 40732])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40765 40778])
                                    ("" variable (:type ("InvariantRHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40778 40791]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [40469 40792])
                            ("SimplifyICmpOperands" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable
                                       (:reference 1
                                        :type ("ICmpInst::Predicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41074 41100])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41101 41114])
                                    ("" variable (:type ("LHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41114 41118])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41147 41160])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41160 41164])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [41165 41183]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [41048 41185])
                            ("getLoopDisposition" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41311 41325])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41326 41340]))                                  
                                :type ("LoopDisposition" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41276 41341])
                            ("isLoopInvariant" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41458 41472])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41473 41487]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [41437 41488])
                            ("isAvailableAtLoopEntry" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41705 41719])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41720 41734]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [41677 41735])
                            ("hasComputableLoopEvolution" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42057 42071])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42072 42086]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42025 42087])
                            ("getBlockDisposition" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42216 42230])
                                    ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42231 42252]))                                  
                                :type ("BlockDisposition" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42179 42253])
                            ("dominates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42373 42387])
                                    ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42388 42409]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42358 42410])
                            ("properlyDominates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42547 42561])
                                    ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42562 42583]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42524 42584])
                            ("hasOperand" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42678 42692])
                                    ("Op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42693 42708]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42662 42715])
                            ("getElementSize" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42807 42825]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42780 42826])
                            ("findArrayDimensions" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Terms" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [43029 43066])
                                    ("Sizes" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [43094 43131])
                                    ("ElementSize" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43159 43183]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [43004 43184])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43199 43215]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [43188 43222])
                            ("verify" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [43225 43245])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43264 43276])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43277 43305])
                                    ("Inv" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43324 43366]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43248 43367])
                            ("collectParametricTerms" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43499 43516])
                                    ("Terms" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [43547 43584]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [43471 43585])
                            ("computeAccessFunctions" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43732 43749])
                                    ("Subscripts" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [43780 43822])
                                    ("Sizes" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [43853 43890]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [43704 43891])
                            ("delinearize" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46413 46430])
                                    ("Subscripts" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [46431 46473])
                                    ("Sizes" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("SCEV" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [46493 46530])
                                    ("ElementSize" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46550 46574]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [46396 46575])
                            ("getDataLayout" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46676 46764])
                            ("getEqualPredicate" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46807 46823])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46824 46840]))                                  
                                :type ("SCEVPredicate" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46768 46841])
                            ("getWrapPredicate" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("AR" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46886 46911])
                                    ("AddedFlags" variable (:type ("SCEVWrapPredicate::IncrementWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46931 46980]))                                  
                                :type ("SCEVPredicate" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46845 46981])
                            ("rewriteUsingPredicate" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47081 47095])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47096 47110])
                                    ("A" variable
                                       (:reference 1
                                        :type ("SCEVUnionPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47147 47169]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47047 47170])
                            ("convertSCEVToAddRecWithPredicates" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47364 47378])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47379 47393])
                                    ("Preds" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("SCEVPredicate" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [47400 47446]))                                  
                                :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47301 47447])
                            ("private" label nil (reparse-symbol classsubparts) [47449 47457])
                            ("CallbackVH" variable (:type "int") (reparse-symbol classsubparts) [47596 47791])
                            ("SCEVCallbackVH" friend nil (reparse-symbol classsubparts) [47795 47822])
                            ("SCEVExpander" friend nil (reparse-symbol classsubparts) [47826 47851])
                            ("SCEVUnknown" friend nil (reparse-symbol classsubparts) [47855 47879])
                            ("F" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47921 47933])
                            ("HasGuards" variable (:type "bool") (reparse-symbol classsubparts) [48133 48148])
                            ("TLI" variable (:type ("TargetLibraryInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48222 48245])
                            ("AC" variable (:type ("AssumptionCache" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48314 48334])
                            ("DT" variable (:type ("DominatorTree" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48364 48382])
                            ("LI" variable (:type ("LoopInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48458 48471])
                            ("CouldNotCompute" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("SCEVCouldNotCompute" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [48544 48597])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [48653 48682])
                            ("HasRecMap" variable (:type ("HasRecMapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48760 48784])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [48845 48879])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [48907 48958])
                            ("ExprValueMap" variable (:type ("ExprValueMapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49894 49924])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [49992 50054])
                            ("ValueExprMap" variable (:type ("ValueExprMapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [50119 50149])
                            ("PendingLoopPredicates" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("6"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [50225 50271])
                            ("PendingPhiRanges" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("PHINode" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("6"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [50345 50394])
                            ("PendingMerges" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("PHINode" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("6"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [50473 50519])
                            ("WalkingBEDominatingConds" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [50654 50692])
                            ("ProvingSplitPredicate" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [50845 50880])
                            ("MinTrailingZerosCache" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("uint32_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [50934 50989])
                            ("getSCEVValues" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51101 51115]))                                  
                                :type ("SetVector" type
                                     (:template-specifier 
                                        ( ("ValueOffsetPair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [51059 51116])
                            ("GetMinTrailingZerosImpl" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51216 51230]))                                  
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [51183 51231])
                            ("ExitLimit" type
                               (:members 
                                  ( ("ExactNotTaken" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [51533 51559])
                                    ("MaxNotTaken" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [51613 51637])
                                    ("MaxOrZero" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [51750 51773])
                                    ("Predicates" variable (:type ("SmallPtrSet" type
                                         (:template-specifier 
                                            ( ("SCEVPredicate" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("4"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [51948 51997])
                                    ("addPredicate" function
                                       (:arguments 
                                          ( ("P" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEVPredicate" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52021 52044]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [52003 52159])
                                    ("ExitLimit" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("E" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52399 52413]))                                          
                                        :type ("ExitLimit" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [52389 52414])
                                    ("ExitLimit" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("E" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52439 52453])
                                            ("M" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52454 52468])
                                            ("MaxOrZero" variable (:type "bool") (reparse-symbol arg-sub-list) [52469 52484])
                                            ("PredSetList" variable (:type ("ArrayRef" type
                                                 (:template-specifier 
                                                    ( ("SmallPtrSetImpl" type
                                                         (:pointer 1
                                                          :constant-flag t
                                                          :template-specifier 
                                                            ( ("SCEVPredicate" type
                                                                 (:pointer 1
                                                                  :constant-flag t)
                                                                  nil nil))                                                            )
                                                          nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [52493 52562]))                                          
                                        :type ("ExitLimit" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [52420 52563])
                                    ("ExitLimit" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("E" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52579 52593])
                                            ("M" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52594 52608])
                                            ("MaxOrZero" variable (:type "bool") (reparse-symbol arg-sub-list) [52609 52624])
                                            ("PredSet" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SmallPtrSetImpl" type
                                                     (:template-specifier 
                                                        ( ("SCEVPredicate" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [52639 52693]))                                          
                                        :type ("ExitLimit" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [52569 52694])
                                    ("ExitLimit" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("E" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52710 52724])
                                            ("M" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [52725 52739])
                                            ("MaxOrZero" variable (:type "bool") (reparse-symbol arg-sub-list) [52740 52755]))                                          
                                        :type ("ExitLimit" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [52700 52756])
                                    ("hasAnyInfo" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [52889 53030])
                                    ("hasOperand" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("S" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [53052 53066]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [53036 53073])
                                    ("hasFullInfo" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [53141 53228]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [51510 53233])
                            ("ExitNotTakenInfo" type
                               (:members 
                                  ( ("ExitingBlock" variable (:type ("PoisoningVH" type
                                         (:template-specifier 
                                            ( ("BasicBlock" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [53380 53417])
                                    ("ExactNotTaken" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [53422 53448])
                                    ("MaxNotTaken" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [53453 53477])
                                    ("Predicate" variable (:type ("std::unique_ptr" type
                                         (:template-specifier 
                                            ( ("SCEVUnionPredicate" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [53482 53528])
                                    ("ExitNotTakenInfo" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ExitingBlock" variable (:type ("PoisoningVH" type
                                                 (:template-specifier 
                                                    ( ("BasicBlock" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [53560 53597])
                                            ("ExactNotTaken" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [53628 53654])
                                            ("MaxNotTaken" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [53685 53709])
                                            ("Predicate" variable (:type ("std::unique_ptr" type
                                                 (:template-specifier 
                                                    ( ("SCEVUnionPredicate" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [53740 53786]))                                          
                                        :type ("ExitNotTakenInfo" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [53543 53923])
                                    ("hasAlwaysTruePredicate" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [53929 54026]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [53350 54031])
                            ("BackedgeTakenInfo" type
                               (:members 
                                  ( ("ExitNotTaken" variable (:type ("SmallVector" type
                                         (:template-specifier 
                                            ( ("ExitNotTakenInfo" type nil nil nil)
                                              ("1"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [54324 54370])
                                    ("MaxAndComplete" variable (:type ("PointerIntPair" type
                                         (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("1"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [54812 54859])
                                    ("MaxOrZero" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [54938 54961])
                                    ("isComplete" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [55042 55101])
                                    ("getMax" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [55106 55172])
                                    ("public" label nil (reparse-symbol classsubparts) [55187 55194])
                                    ("BackedgeTakenInfo" function
                                       (:constructor-flag t
                                        :type ("BackedgeTakenInfo" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [55199 55250])
                                    ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [55398 55433])
                                    ("BackedgeTakenInfo" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("ExitCounts" variable (:type ("ArrayRef" type
                                                 (:template-specifier 
                                                    ( ("EdgeExitInfo" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [55528 55562])
                                            ("Complete" variable (:type "bool") (reparse-symbol arg-sub-list) [55563 55577])
                                            ("MaxCount" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [55600 55621])
                                            ("MaxOrZero" variable (:type "bool") (reparse-symbol arg-sub-list) [55622 55637]))                                          
                                        :type ("BackedgeTakenInfo" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [55510 55638])
                                    ("hasAnyInfo" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [55779 55885])
                                    ("hasFullInfo" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [55966 56015])
                                    ("getExact" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("L" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57124 57138])
                                            ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57139 57159])
                                            ("Predicates" variable
                                               (:pointer 1
                                                :default-value "nullptr"
                                                :type ("SCEVUnionPredicate" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57185 57225]))                                          
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [57103 57233])
                                    ("getExact" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("ExitingBlock" variable
                                               (:pointer 1
                                                :type ("BasicBlock" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57509 57534])
                                            ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57535 57555]))                                          
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [57488 57562])
                                    ("getMax" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57642 57662]))                                          
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [57623 57669])
                                    ("getMax" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("ExitingBlock" variable
                                               (:pointer 1
                                                :type ("BasicBlock" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57765 57790])
                                            ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57791 57811]))                                          
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [57746 57818])
                                    ("isMaxOrZero" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [57963 57983]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [57946 57990])
                                    ("hasOperand" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("S" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("SCEV" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [58114 58128])
                                            ("SE" variable
                                               (:pointer 1
                                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [58129 58149]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [58098 58156])
                                    ("clear" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [58221 58234]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [54167 58239])
                            ("BackedgeTakenCounts" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Loop" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("BackedgeTakenInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [58339 58401])
                            ("PredicatedBackedgeTakenCounts" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Loop" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("BackedgeTakenInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [58512 58584])
                            ("ConstantEvolutionLoopExitValue" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("PHINode" type (:pointer 1) nil nil)
                                      ("Constant" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [58877 58940])
                            ("ValuesAtScopes" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SmallVector" type (:template-specifier 
                                        ( ("std::pair" type (:template-specifier 
                                            ( ("Loop" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            ) nil nil)
                                          ("2"))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [59112 59211])
                            ("LoopDispositions" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SmallVector" type (:template-specifier 
                                        ( ("PointerIntPair" type (:template-specifier 
                                            ( ("Loop" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("2")
                                              ("LoopDisposition" type nil nil nil))                                            ) nil nil)
                                          ("2"))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [59262 59385])
                            ("LoopProperties" type
                               (:members 
                                  ( ("HasNoAbnormalExits" variable (:type "bool") (reparse-symbol classsubparts) [59569 59593])
                                    ("HasNoSideEffects" variable (:type "bool") (reparse-symbol classsubparts) [59969 59991]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [59389 59996])
                            ("LoopPropertiesCache" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Loop" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("LoopProperties" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [60038 60097])
                            ("getLoopProperties" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60213 60227]))                                  
                                :type ("LoopProperties" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [60180 60228])
                            ("loopHasNoSideEffects" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60258 60272]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60232 60328])
                            ("loopHasNoAbnormalExits" function
                               (:arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60360 60374]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60332 60432])
                            ("computeLoopDisposition" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60514 60528])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60529 60543]))                                  
                                :type ("LoopDisposition" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [60475 60544])
                            ("BlockDispositions" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SmallVector" type (:template-specifier 
                                        ( ("PointerIntPair" type (:template-specifier 
                                            ( ("BasicBlock" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("2")
                                              ("BlockDisposition" type nil nil nil))                                            ) nil nil)
                                          ("2"))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [60596 60729])
                            ("computeBlockDisposition" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60814 60828])
                                    ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60829 60850]))                                  
                                :type ("BlockDisposition" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [60773 60851])
                            ("UnsignedRanges" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("ConstantRange" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [60892 60945])
                            ("SignedRanges" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("ConstantRange" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [60986 61037])
                            ("RangeSignHint" type
                               (:members 
                                  ( ("HINT_RANGE_UNSIGNED" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [61098 61118])
                                    ("HINT_RANGE_SIGNED" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [61119 61138]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [61077 61139])
                            ("setRange" function
                               (:constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61222 61236])
                                    ("Hint" variable (:type ("RangeSignHint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61237 61256])
                                    ("CR" variable (:type ("ConstantRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61289 61306]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61192 61581])
                            ("getRangeRef" function
                               (:prototype-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61778 61792])
                                    ("Hint" variable (:type ("RangeSignHint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61793 61812]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61745 61813])
                            ("getRangeForAffineAR" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61960 61978])
                                    ("Stop" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61979 61996])
                                    ("MaxBECount" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62033 62056])
                                    ("BitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62057 62075]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61926 62076])
                            ("getRangeViaFactoring" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62302 62320])
                                    ("Stop" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62321 62338])
                                    ("MaxBECount" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62376 62399])
                                    ("BitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62400 62418]))                                  
                                :type ("ConstantRange" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [62267 62419])
                            ("createSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62538 62547]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [62515 62548])
                            ("createNodeForPHI" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62646 62658]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [62617 62659])
                            ("createAddRecFromPHI" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62747 62759]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [62715 62760])
                            ("createSimpleAffineAddRec" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62873 62885])
                                    ("BEValueV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62886 62902])
                                    ("StartValueV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62947 62966]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [62836 62967])
                            ("createNodeFromSelectLikePHI" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63063 63075]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [63023 63076])
                            ("createNodeForSelectOrPHI" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63362 63377])
                                    ("Cond" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63378 63390])
                                    ("TrueVal" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63430 63445])
                                    ("FalseVal" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63446 63462]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [63325 63463])
                            ("createNodeForGEP" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("GEP" variable
                                       (:pointer 1
                                        :type ("GEPOperator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63561 63578]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [63532 63579])
                            ("computeSCEVAtScope" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63711 63725])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63726 63740]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [63680 63741])
                            ("forgetSymbolicName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63986 64001])
                                    ("SymName" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64002 64022]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [63962 64023])
                            ("getBackedgeTakenInfo" function
                               (:prototype-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64262 64276]))                                  
                                :type ("BackedgeTakenInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [64216 64277])
                            ("getPredicatedBackedgeTakenInfo" function
                               (:prototype-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64470 64484]))                                  
                                :type ("BackedgeTakenInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [64414 64485])
                            ("computeBackedgeTakenCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64723 64737])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [64784 64812]))                                  
                                :type ("BackedgeTakenInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [64679 64814])
                            ("computeExitLimit" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65104 65118])
                                    ("ExitingBlock" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65119 65144])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [65174 65202]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [65077 65204])
                            ("computeExitLimitFromCond" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65822 65836])
                                    ("ExitCond" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65837 65853])
                                    ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [65891 65907])
                                    ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [65908 65926])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [65964 65992]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [65787 65994])
                            ("ExitLimitCache" type
                               (:members 
                                  ( ("TripCountMap" variable (:type ("SmallDenseMap" type
                                         (:template-specifier 
                                            ( ("PointerIntPair" type (:template-specifier 
                                                ( ("Value" type (:pointer 1) nil nil)
                                                  ("1"))                                                ) nil nil)
                                              ("ExitLimit" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [66478 66544])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [66550 66564])
                                    ("ExitIfTrue" variable (:type "bool") (reparse-symbol classsubparts) [66569 66585])
                                    ("AllowPredicates" variable (:type "bool") (reparse-symbol classsubparts) [66590 66611])
                                    ("public" label nil (reparse-symbol classsubparts) [66615 66622])
                                    ("ExitLimitCache" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("L" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [66642 66656])
                                            ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [66657 66673])
                                            ("AllowPredicates" variable (:type "bool") (reparse-symbol arg-sub-list) [66674 66695]))                                          
                                        :type ("ExitLimitCache" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [66627 66771])
                                    ("find" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("L" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [66802 66816])
                                            ("ExitCond" variable
                                               (:pointer 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [66817 66833])
                                            ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [66834 66850])
                                            ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [66880 66898])
                                            ("AllowPredicates" variable (:type "bool") (reparse-symbol arg-sub-list) [66899 66920]))                                          
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("ExitLimit" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [66777 66921])
                                    ("insert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("L" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Loop" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [66939 66953])
                                            ("ExitCond" variable
                                               (:pointer 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [66954 66970])
                                            ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [66971 66987])
                                            ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [67004 67022])
                                            ("AllowPredicates" variable (:type "bool") (reparse-symbol arg-sub-list) [67023 67044])
                                            ("EL" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ExitLimit" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [67045 67065]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [66927 67066]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [66093 67071])
                            ("ExitLimitCacheTy" variable
                               (:default-value "ExitLimitCache"
                                :type "int")
                                (reparse-symbol classsubparts) [67081 67115])
                            ("computeExitLimitFromCondCached" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Cache" variable
                                       (:reference 1
                                        :type ("ExitLimitCacheTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67160 67184])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67228 67242])
                                    ("ExitCond" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67243 67259])
                                    ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [67303 67319])
                                    ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [67363 67381])
                                    ("AllowPredicates" variable (:type "bool") (reparse-symbol arg-sub-list) [67425 67446]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [67119 67447])
                            ("computeExitLimitFromCondImpl" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Cache" variable
                                       (:reference 1
                                        :type ("ExitLimitCacheTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67489 67513])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67514 67528])
                                    ("ExitCond" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67570 67586])
                                    ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [67587 67603])
                                    ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [67645 67663])
                                    ("AllowPredicates" variable (:type "bool") (reparse-symbol arg-sub-list) [67705 67726]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [67450 67727])
                            ("computeExitLimitFromICmp" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68083 68097])
                                    ("ExitCond" variable
                                       (:pointer 1
                                        :type ("ICmpInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68098 68117])
                                    ("ExitIfTrue" variable (:type "bool") (reparse-symbol arg-sub-list) [68155 68171])
                                    ("IsSubExpr" variable (:type "bool") (reparse-symbol arg-sub-list) [68209 68224])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [68262 68290]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [68048 68292])
                            ("computeExitLimitFromSingleExitSwitch" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68514 68528])
                                    ("Switch" variable
                                       (:pointer 1
                                        :type ("SwitchInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68578 68597])
                                    ("ExitingBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68647 68669])
                                    ("IsSubExpr" variable (:type "bool") (reparse-symbol arg-sub-list) [68719 68734]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [68467 68735])
                            ("computeLoadConstantCompareExitLimit" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LI" variable
                                       (:pointer 1
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68902 68915])
                                    ("RHS" variable
                                       (:pointer 1
                                        :type ("Constant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68916 68930])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68979 68993])
                                    ("p" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69042 69064]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [68856 69065])
                            ("computeShiftCompareExitLimit" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69467 69478])
                                    ("RHS" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69479 69490])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69491 69505])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69547 69572]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [69428 69573])
                            ("computeExitCountExhaustively" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69946 69960])
                                    ("Cond" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69961 69973])
                                    ("ExitWhen" variable (:type "bool") (reparse-symbol arg-sub-list) [70017 70031]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [69905 70032])
                            ("howFarToZero" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70346 70360])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70361 70375])
                                    ("IsSubExpr" variable (:type "bool") (reparse-symbol arg-sub-list) [70376 70391])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [70417 70445]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [70323 70447])
                            ("howFarToNonZero" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70639 70653])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70654 70668]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [70613 70669])
                            ("howManyLessThans" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71286 71302])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71303 71319])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71320 71334])
                                    ("isSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [71364 71378])
                                    ("ControlsExit" variable (:type "bool") (reparse-symbol arg-sub-list) [71379 71397])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [71427 71455]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [71259 71457])
                            ("howManyGreaterThans" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71491 71507])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71508 71524])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71525 71539])
                                    ("isSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [71572 71586])
                                    ("IsSubExpr" variable (:type "bool") (reparse-symbol arg-sub-list) [71587 71602])
                                    ("AllowPredicates" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [71635 71663]))                                  
                                :type ("ExitLimit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [71461 71665])
                            ("getPredecessorWithUniqueSuccessorForBB" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71932 71947]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("BasicBlock" type (:pointer 1) nil nil)
                                          ("BasicBlock" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [71853 71948])
                            ("isImpliedCond" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72109 72134])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72135 72151])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72152 72168])
                                    ("FoundCondValue" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72190 72212])
                                    ("Inverse" variable (:type "bool") (reparse-symbol arg-sub-list) [72213 72226]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [72090 72227])
                            ("isImpliedCond" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72410 72435])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72436 72452])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72453 72469])
                                    ("FoundPred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72491 72521])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72522 72543])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72565 72586]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [72391 72587])
                            ("isImpliedCondOperands" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72777 72802])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72803 72819])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72849 72865])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72866 72887])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72917 72938]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [72750 72939])
                            ("isImpliedViaOperations" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73209 73234])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73265 73281])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73282 73298])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73329 73350])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73351 73372])
                                    ("Depth" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [73403 73421]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [73181 73423])
                            ("isKnownViaNonRecursiveReasoning" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73619 73644])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73684 73700])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73701 73717]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [73582 73718])
                            ("isImpliedCondOperandsHelper" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73914 73939])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73940 73956])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73992 74008])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74009 74030])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74066 74087]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [73881 74088])
                            ("isImpliedCondOperandsViaRanges" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74398 74423])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74424 74440])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74479 74495])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74496 74517])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74556 74577]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [74362 74578])
                            ("isImpliedViaGuard" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74741 74756])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74757 74782])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74808 74824])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74825 74841]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [74718 74842])
                            ("isImpliedCondOperandsViaNoOverflow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75201 75226])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75269 75285])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75286 75302])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75345 75366])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75409 75430]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [75161 75431])
                            ("isImpliedViaMerge" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75799 75824])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75850 75866])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75867 75883])
                                    ("FoundLHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75909 75930])
                                    ("FoundRHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75931 75952])
                                    ("Depth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [75978 75993]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [75776 75994])
                            ("getConstantEvolutionLoopExitValue" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("PN" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76257 76269])
                                    ("BEs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76270 76287])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76334 76348]))                                  
                                :type ("Constant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [76213 76349])
                            ("isKnownPredicateViaConstantRanges" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76531 76556])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76598 76614])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76615 76631]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [76492 76632])
                            ("isKnownPredicateViaNoOverflow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76866 76891])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76892 76908])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76946 76962]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [76831 76963])
                            ("isKnownPredicateViaSplitting" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77109 77134])
                                    ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77135 77151])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77188 77204]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [77075 77205])
                            ("splitBinaryAdd" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77278 77295])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77296 77309])
                                    ("" variable (:type ("L" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77309 77311])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77312 77325])
                                    ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77325 77327])
                                    ("Flags" variable
                                       (:reference 1
                                        :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77350 77375]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [77258 77376])
                            ("computeConstantDifference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77788 77804])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77805 77821]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("APInt" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [77746 77822])
                            ("forgetMemoizedResults" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77901 77915]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [77874 77916])
                            ("getExistingSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78027 78036]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [77999 78037])
                            ("checkValidity" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78149 78163]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [78130 78170])
                            ("proveNoWrapByVaryingStart" function
                               (:template 
                                  ( ("ExtendOpTy" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78548 78566])
                                    ("Step" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78567 78584])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78618 78632]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [78484 78633])
                            ("proveNoWrapViaConstantRanges" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("AR" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78762 78787]))                                  
                                :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [78715 78788])
                            ("isMonotonicPredicateImpl" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78822 78848])
                                    ("Pred" variable (:type ("ICmpInst::Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78881 78906])
                                    ("Increasing" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [78907 78924]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [78792 78925])
                            ("getNoWrapFlagsFromUB" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [79172 79187]))                                  
                                :type ("SCEV::NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [79133 79188])
                            ("isSCEVExprNeverPoison" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [79913 79934]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [79886 79935])
                            ("isAddRecNeverPoison" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [80233 80254])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [80255 80269]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [80208 80270])
                            ("createAddRecFromPHIWithCastsImpl" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SymbolicPHI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUnknown" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81064 81095]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("std::pair" type (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("SmallVector" type (:template-specifier 
                                                ( ("SCEVPredicate" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil)
                                                  ("3"))                                                ) nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [80956 81096])
                            ("computeBECount" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Delta" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81264 81282])
                                    ("Stride" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81283 81302])
                                    ("Equality" variable (:type "bool") (reparse-symbol arg-sub-list) [81332 81346]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [81237 81347])
                            ("computeMaxBECountForLT" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81703 81721])
                                    ("Stride" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81722 81741])
                                    ("End" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81779 81795])
                                    ("BitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [81796 81814])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [81852 81866]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [81668 81867])
                            ("doesIVOverflowOnLT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82113 82129])
                                    ("Stride" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82130 82149])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [82150 82164])
                                    ("NoWrap" variable (:type "bool") (reparse-symbol arg-sub-list) [82191 82203]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [82089 82204])
                            ("doesIVOverflowOnGT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82453 82469])
                                    ("Stride" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82470 82489])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [82490 82504])
                                    ("NoWrap" variable (:type "bool") (reparse-symbol arg-sub-list) [82531 82543]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [82429 82544])
                            ("getOrCreateAddExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [82635 82662])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82696 82720]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [82604 82721])
                            ("getOrCreateMulExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [82812 82839])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82873 82897]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [82781 82898])
                            ("getOrCreateAddRecExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Ops" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [82994 83021])
                                    ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83058 83072])
                                    ("Flags" variable (:type ("SCEV::NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83073 83097]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [82960 83098])
                            ("stripInjectiveFunctions" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83198 83214]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [83162 83221])
                            ("getUsedLoops" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83418 83432])
                                    ("LoopsUsed" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Loop" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [83433 83474]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [83400 83475])
                            ("addToLoopUseLists" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83600 83614]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [83577 83615])
                            ("matchURem" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83763 83780])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83781 83794])
                                    ("" variable (:type ("LHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83794 83798])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83799 83812])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83812 83816]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [83748 83817])
                            ("findExistingSCEVInCache" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SCEVType" variable (:type "int") (reparse-symbol arg-sub-list) [84245 84258])
                                    ("Ops" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("SCEV" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [84259 84286]))                                  
                                :type ("std::tuple" type
                                     (:template-specifier 
                                        ( ("SCEV" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("FoldingSetNodeID" type nil nil nil)
                                          ("void" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [84168 84287])
                            ("UniqueSCEVs" variable (:type ("FoldingSet" type
                                 (:template-specifier 
                                    ( ("SCEV" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [84291 84320])
                            ("UniquePreds" variable (:type ("FoldingSet" type
                                 (:template-specifier 
                                    ( ("SCEVPredicate" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [84323 84361])
                            ("SCEVAllocator" variable (:type ("BumpPtrAllocator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [84364 84395])
                            ("LoopUsers" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Loop" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SmallVector" type (:template-specifier 
                                        ( ("SCEV" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("4"))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [84492 84555])
                            ("PredicatedSCEVRewrites" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("std::pair" type (:template-specifier 
                                        ( ("SCEVUnknown" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("Loop" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil))                                        ) nil nil)
                                      ("std::pair" type (:template-specifier 
                                        ( ("SCEV" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("SmallVector" type (:template-specifier 
                                            ( ("SCEVPredicate" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil)
                                              ("3"))                                            ) nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [84699 84858])
                            ("FirstUnknown" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("SCEVUnknown" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85035 85071]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [16470 85074])
                    ("ScalarEvolutionAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [85236 85286])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85290 85313])
                            ("public" label nil (reparse-symbol classsubparts) [85315 85322])
                            ("Result" variable
                               (:default-value "ScalarEvolution"
                                :type "int")
                                (reparse-symbol classsubparts) [85331 85356])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85380 85392])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85393 85421]))                                  
                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85360 85422]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [85146 85425])
                    ("ScalarEvolutionVerifierPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [85581 85588])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85613 85625])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85626 85654]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85591 85655]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [85489 85658])
                    ("ScalarEvolutionPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [85813 85829])
                            ("public" label nil (reparse-symbol classsubparts) [85831 85838])
                            ("ScalarEvolutionPrinterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85877 85893]))                                  
                                :type ("ScalarEvolutionPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85850 85905])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85931 85943])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85944 85972]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85909 85973]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [85721 85976])
                    ("ScalarEvolutionWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SE" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("ScalarEvolution" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [86037 86073])
                            ("public" label nil (reparse-symbol classsubparts) [86075 86082])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [86085 86100])
                            ("ScalarEvolutionWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("ScalarEvolutionWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [86104 86133])
                            ("getSE" function (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [86137 86177])
                            ("getSE" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [86180 86232])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [86268 86277])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [86301 86310])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [86354 86369])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [86426 86441])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [86466 86481]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [85978 86484])
                    ("PredicatedScalarEvolution" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [87230 87237])
                            ("PredicatedScalarEvolution" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [87266 87286])
                                    ("L" variable
                                       (:reference 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [87287 87295]))                                  
                                :type ("PredicatedScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87240 87296])
                            ("getUnionPredicate" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :constant-flag t
                                :type ("SCEVUnionPredicate" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87300 87352])
                            ("getSCEV" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [87633 87642]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87613 87643])
                            ("getBackedgeTakenCount" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87712 87748])
                            ("addPredicate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Pred" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SCEVPredicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [87798 87824]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [87780 87825])
                            ("getAsAddRec" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88102 88111]))                                  
                                :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88068 88112])
                            ("setNoOverflow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88198 88207])
                                    ("Flags" variable (:type ("SCEVWrapPredicate::IncrementWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88208 88252]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [88179 88253])
                            ("hasNoOverflow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88367 88376])
                                    ("Flags" variable (:type ("SCEVWrapPredicate::IncrementWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88377 88421]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [88348 88422])
                            ("getSE" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88475 88521])
                            ("PredicatedScalarEvolution" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PredicatedScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88628 88662]))                                  
                                :type ("PredicatedScalarEvolution" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88602 88663])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88797 88813])
                                    ("Depth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [88814 88829]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [88786 88836])
                            ("areAddRecsEqualWithPreds" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("AR1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88973 88999])
                                    ("AR2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [89032 89058]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [88943 89065])
                            ("private" label nil (reparse-symbol classsubparts) [89067 89075])
                            ("updateGeneration" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [89202 89226])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [89368 89402])
                            ("RewriteMap" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("RewriteEntry" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [89720 89768])
                            ("FlagsMap" variable (:type ("ValueMap" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("SCEVWrapPredicate::IncrementWrapFlags" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [89830 89896])
                            ("SE" variable (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [89936 89956])
                            ("L" variable
                               (:constant-flag t
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [89985 89999])
                            ("Preds" variable (:type ("SCEVUnionPredicate" type (:type "class") nil nil)) (reparse-symbol classsubparts) [90124 90149])
                            ("Generation" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [90433 90457])
                            ("BackedgeCount" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [90493 90529]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [87196 90532]))                  
                :type "namespace")
                nil [1856 90535]))          
      :file "ScalarEvolution.h"
      :pointmax 90601
      :fsize 90600
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((punctuation 89366 . 89367) (symbol 89353 . 89365) (USING 89347 . 89352) (semantic-list 86463 . 86465) (symbol 86449 . 86463) (VOID 86444 . 86448) (semantic-list 86382 . 86425) (symbol 86377 . 86382) (VOID 86372 . 86376) (semantic-list 86334 . 86353) (symbol 86318 . 86334) (VOID 86313 . 86317) (semantic-list 86298 . 86300) (symbol 86285 . 86298) (VOID 86280 . 86284) (semantic-list 86254 . 86267) (symbol 86241 . 86254) (BOOL 86236 . 86240) (EXPLICIT 85841 . 85849) (USING 85325 . 85330) (punctuation 83811 . 83812) (punctuation 83793 . 83794) (punctuation 77324 . 77325) (punctuation 77308 . 77309) (USING 67075 . 67080) (punctuation 55396 . 55397) (symbol 55383 . 55395) (USING 55377 . 55382) (punctuation 55370 . 55371) (DEFAULT 55363 . 55370) (punctuation 55361 . 55362) (semantic-list 55338 . 55360) (punctuation 55337 . 55338) (OPERATOR 55329 . 55337) (punctuation 55358 . 55359) (punctuation 55328 . 55329) (symbol 55310 . 55327) (punctuation 55358 . 55359) (punctuation 55304 . 55305) (DEFAULT 55297 . 55304) (punctuation 55295 . 55296) (semantic-list 55272 . 55294) (symbol 55255 . 55272) (punctuation 55292 . 55293) (punctuation 55396 . 55397) (symbol 55383 . 55395) (USING 55377 . 55382) (punctuation 55370 . 55371) (DEFAULT 55363 . 55370) (punctuation 55361 . 55362) (semantic-list 55338 . 55360) (punctuation 55337 . 55338) (OPERATOR 55329 . 55337) (punctuation 55358 . 55359) (punctuation 55328 . 55329) (symbol 55310 . 55327) (punctuation 55358 . 55359) (punctuation 55304 . 55305) (DEFAULT 55297 . 55304) (punctuation 55295 . 55296) (semantic-list 55272 . 55294) (symbol 55255 . 55272) (punctuation 55292 . 55293) (EXPLICIT 53534 . 53542) (EXPLICIT 53534 . 53542) (punctuation 49984 . 49985) (symbol 49967 . 49983) (USING 49961 . 49966) (punctuation 48905 . 48906) (symbol 48888 . 48904) (USING 48882 . 48887) (punctuation 48843 . 48844) (symbol 48827 . 48842) (USING 48821 . 48826) (punctuation 48651 . 48652) (symbol 48637 . 48650) (USING 48631 . 48636) (punctuation 47879 . 47880) (punctuation 47851 . 47852) (punctuation 47822 . 47823) (PUBLIC 47589 . 47595) (punctuation 47587 . 47588) (symbol 47581 . 47586) (symbol 47566 . 47580) (CLASS 47560 . 47565) (punctuation 41159 . 41160) (punctuation 41113 . 41114) (punctuation 40777 . 40778) (punctuation 40718 . 40719) (punctuation 24364 . 24365) (punctuation 24363 . 24364) (punctuation 24074 . 24075) (punctuation 24073 . 24074) (punctuation 21040 . 21041) (punctuation 21039 . 21040) (punctuation 20750 . 20751) (punctuation 20749 . 20750) (punctuation 20575 . 20576) (punctuation 20574 . 20575) (punctuation 20295 . 20296) (punctuation 20294 . 20295) (punctuation 20005 . 20006) (punctuation 20004 . 20005) (punctuation 19830 . 19831) (punctuation 19829 . 19830) (punctuation 17979 . 17980) (symbol 17652 . 17666) (symbol 17443 . 17457) (symbol 17252 . 17266) (punctuation 16529 . 16530) (PUBLIC 15028 . 15034) (punctuation 15026 . 15027) (symbol 15020 . 15025) (symbol 15001 . 15019) (CLASS 14995 . 15000) (PUBLIC 10843 . 10849) (punctuation 10841 . 10842) (symbol 10835 . 10840) (symbol 10817 . 10834) (CLASS 10811 . 10816) (PUBLIC 9350 . 9356) (punctuation 9348 . 9349) (symbol 9342 . 9347) (symbol 9323 . 9341) (CLASS 9317 . 9322) (punctuation 7528 . 7529) (DEFAULT 7521 . 7528) (punctuation 7519 . 7520) (semantic-list 7495 . 7518) (punctuation 7494 . 7495) (OPERATOR 7486 . 7494) (punctuation 7485 . 7486) (symbol 7471 . 7484) (punctuation 7467 . 7468) (DEFAULT 7460 . 7467) (punctuation 7458 . 7459) (semantic-list 7434 . 7457) (symbol 7421 . 7434) (punctuation 7417 . 7418) (DEFAULT 7410 . 7417) (punctuation 7408 . 7409) (semantic-list 7405 . 7407) (symbol 7392 . 7405) (punctuation 7391 . 7392) (FRIEND 7083 . 7089) (punctuation 4406 . 4407) (DELETE 4400 . 4406) (punctuation 4398 . 4399) (semantic-list 4383 . 4397) (punctuation 4382 . 4383) (OPERATOR 4374 . 4382) (punctuation 4373 . 4374) (symbol 4368 . 4372) (punctuation 4364 . 4365) (DELETE 4358 . 4364) (punctuation 4356 . 4357) (semantic-list 4341 . 4355) (symbol 4337 . 4341) (EXPLICIT 4155 . 4163) (FRIEND 2393 . 2399))
      :lexical-table 
        '(("LLVM_ANALYSIS_SCALAREVOLUTION_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f7ef5b5c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_SCALAREVOLUTIONALIASANALYSIS_H" variable (:constant-flag t) nil [586 630])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [632 672])
            ("llvm/Analysis/ScalarEvolutionExpressions.h" include nil nil [673 726])
            ("llvm/IR/Function.h" include nil nil [727 756])
            ("llvm/IR/Module.h" include nil nil [757 784])
            ("llvm/Pass.h" include nil nil [785 807])
            ("llvm" type
               (:members 
                  ( ("SCEVAAResult" type
                       (:superclasses 
                          ( ("AAResultBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SE" variable (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [978 998])
                            ("public" label nil (reparse-symbol classsubparts) [1000 1007])
                            ("SCEVAAResult" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1032 1052]))                                  
                                :type ("SCEVAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1019 1080])
                            ("SCEVAAResult" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SCEVAAResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1096 1111])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1111 1115]))                                  
                                :type ("SCEVAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1083 1161])
                            ("alias" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LocA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1183 1210])
                                    ("LocB" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1211 1238])
                                    ("AAQI" variable
                                       (:reference 1
                                        :type ("AAQueryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1259 1277]))                                  
                                :type ("AliasResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1165 1278])
                            ("private" label nil (reparse-symbol classsubparts) [1280 1288])
                            ("GetBaseValue" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1311 1325]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1291 1326]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [919 1329])
                    ("SCEVAA" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1454 1487])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1490 1513])
                            ("public" label nil (reparse-symbol classsubparts) [1515 1522])
                            ("Result" type
                               (:typedef ("SCEVAAResult" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [1525 1553])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1574 1586])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1587 1615]))                                  
                                :type ("SCEVAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1557 1616]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1402 1619])
                    ("SCEVAAWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("Result" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("SCEVAAResult" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1731 1768])
                            ("public" label nil (reparse-symbol classsubparts) [1770 1777])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [1780 1795])
                            ("SCEVAAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("SCEVAAWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1799 1819])
                            ("getResult" function (:type ("SCEVAAResult" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1823 1868])
                            ("getResult" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("SCEVAAResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1871 1928])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [1964 1973])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [2017 2032]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1681 2035])
                    ("createSCEVAAWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("FunctionPass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2086 2126]))                  
                :type "namespace")
                nil [809 2129]))          
      :file "ScalarEvolutionAliasAnalysis.h"
      :pointmax 2138
      :fsize 2137
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((semantic-list 1997 . 2016) (symbol 1981 . 1997) (VOID 1976 . 1980) (semantic-list 1950 . 1963) (symbol 1937 . 1950) (BOOL 1932 . 1936) (punctuation 1110 . 1111) (EXPLICIT 1010 . 1018))
      :lexical-table 
        '(("LLVM_ANALYSIS_SCALAREVOLUTIONALIASANALYSIS_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f7ef5b7c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_TARGETLIBRARYINFO_H" variable (:constant-flag t) nil [421 454])
            ("llvm/ADT/BitVector.h" include nil nil [456 487])
            ("llvm/ADT/DenseMap.h" include nil nil [488 518])
            ("llvm/ADT/Optional.h" include nil nil [519 549])
            ("llvm/ADT/Triple.h" include nil nil [550 578])
            ("llvm/IR/CallSite.h" include nil nil [579 608])
            ("llvm/IR/Function.h" include nil nil [609 638])
            ("llvm/IR/Module.h" include nil nil [639 666])
            ("llvm/IR/PassManager.h" include nil nil [667 699])
            ("llvm/Pass.h" include nil nil [700 722])
            ("llvm" type
               (:members 
                  ( ("ArrayRef" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [741 778])
                    ("VecDesc" type
                       (:members 
                          ( ("ScalarFnName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [963 986])
                            ("VectorFnName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [989 1012])
                            ("VectorizationFactor" variable (:type "unsigned int") (reparse-symbol classsubparts) [1015 1044]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [944 1047])
                    ("TargetLibraryInfoImpl" type
                       (:members 
                          ( ("TargetLibraryInfo" friend nil (reparse-symbol classsubparts) [1536 1566])
                            ("AvailableArray" variable
                               (:dereference 1
                                :type "unsigned char")
                                (reparse-symbol classsubparts) [1571 1619])
                            ("CustomNames" variable (:type ("llvm::DenseMap" type
                                 (:template-specifier 
                                    ( ("unsigned int" type nil nil nil)
                                      ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1622 1672])
                            ("StandardNames" variable
                               (:dereference 1
                                :typemodifiers ("static")
                                :type ("StringLiteral" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1675 1729])
                            ("ShouldExtI32Param" variable (:type "bool") (reparse-symbol classsubparts) [1732 1798])
                            ("ShouldExtI32Return" variable (:type "bool") (reparse-symbol classsubparts) [1732 1798])
                            ("ShouldSignExtI32Param" variable (:type "bool") (reparse-symbol classsubparts) [1732 1798])
                            ("AvailabilityState" type
                               (:members 
                                  ( ("StandardName" variable
                                       (:constant-flag t
                                        :default-value (1846 1847)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1831 1847])
                                    ("CustomName" variable
                                       (:constant-flag t
                                        :default-value (1890 1891)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1877 1891])
                                    ("Unavailable" variable
                                       (:constant-flag t
                                        :default-value (1911 1912)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1897 1912]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [1802 1943])
                            ("setState" function
                               (:arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1960 1970])
                                    ("State" variable (:type ("AvailabilityState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1971 1995]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1946 2090])
                            ("getState" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2120 2130]))                                  
                                :type ("AvailabilityState" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2093 2223])
                            ("VectorDescs" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("VecDesc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2285 2318])
                            ("ScalarDescs" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("VecDesc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2448 2481])
                            ("isValidProtoForLibFunc" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("FTy" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FunctionType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2648 2672])
                                    ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2673 2683])
                                    ("DL" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2714 2735]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2620 2742])
                            ("public" label nil (reparse-symbol classsubparts) [2744 2751])
                            ("VectorLibrary" type
                               (:members 
                                  ( ("NoLibrary" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3136 3146])
                                    ("Accelerate" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3185 3196])
                                    ("MASSV" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3230 3236])
                                    ("SVML" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3274 3325]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [3111 3326])
                            ("TargetLibraryInfoImpl" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3330 3354])
                            ("TargetLibraryInfoImpl" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("T" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3388 3404]))                                  
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3366 3405])
                            ("TargetLibraryInfoImpl" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3461 3494]))                                  
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3439 3495])
                            ("TargetLibraryInfoImpl" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3520 3544])
                                    ("" variable (:type ("TLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3544 3548]))                                  
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3498 3549])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3585 3618]))                                  
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3552 3619])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3655 3679])
                                    ("" variable (:type ("TLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3679 3683]))                                  
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3622 3684])
                            ("getLibFunc" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("funcName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3864 3883])
                                    ("F" variable
                                       (:reference 1
                                        :type ("LibFunc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3884 3895]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3848 3902])
                            ("getLibFunc" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("FDecl" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4170 4192])
                                    ("F" variable
                                       (:reference 1
                                        :type ("LibFunc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4193 4204]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4154 4211])
                            ("setUnavailable" function
                               (:arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4288 4298]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4268 4334])
                            ("setAvailable" function
                               (:arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4407 4417]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4389 4454])
                            ("setAvailableWithName" function
                               (:arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4589 4599])
                                    ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4600 4615]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4563 4825])
                            ("disableAllFunctions" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4918 4945])
                            ("addVectorizableFunctions" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Fns" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("VecDesc" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [5094 5116]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5064 5117])
                            ("addVectorizableFunctionsFromVecLib" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("VecLib" variable (:type ("VectorLibrary" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [5267 5293]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5227 5294])
                            ("isFunctionVectorizable" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5422 5434])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [5435 5447]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5394 5509])
                            ("isFunctionVectorizable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5638 5650]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5610 5657])
                            ("getVectorizedFunction" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5824 5836])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [5837 5849]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5792 5856])
                            ("isFunctionScalarizable" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5998 6010])
                                    ("VF" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [6011 6024]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5970 6086])
                            ("getScalarizedFunction" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6286 6298])
                                    ("VF" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [6299 6312]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6254 6319])
                            ("setShouldExtI32Param" function
                               (:arguments 
                                  ( ("Val" variable (:type "bool") (reparse-symbol arg-sub-list) [6526 6535]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6500 6570])
                            ("setShouldExtI32Return" function
                               (:arguments 
                                  ( ("Val" variable (:type "bool") (reparse-symbol arg-sub-list) [6777 6786]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6750 6822])
                            ("setShouldSignExtI32Param" function
                               (:arguments 
                                  ( ("Val" variable (:type "bool") (reparse-symbol arg-sub-list) [7001 7010]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6971 7049])
                            ("getWCharSize" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7202 7218]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7180 7225])
                            ("getWidestVF" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ScalarF" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7341 7359]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7320 7366]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1504 7369])
                    ("TargetLibraryInfo" type
                       (:members 
                          ( ("TargetLibraryAnalysis" friend nil (reparse-symbol classsubparts) [7633 7667])
                            ("TargetLibraryInfoWrapperPass" friend nil (reparse-symbol classsubparts) [7671 7712])
                            ("Impl" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7759 7793])
                            ("OverrideAsUnavailable" variable (:type ("BitVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7922 7954])
                            ("public" label nil (reparse-symbol classsubparts) [7956 7963])
                            ("TargetLibraryInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Impl" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7993 8027])
                                    ("F" variable
                                       (:default-value "None"
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("Function" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8057 8092]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7975 8724])
                            ("TargetLibraryInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8776 8805]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8758 8881])
                            ("TargetLibraryInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8902 8922])
                                    ("" variable (:type ("TLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8922 8926]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8884 9002])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9034 9063]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9005 9163])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9195 9215])
                                    ("" variable (:type ("TLI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9215 9219]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9166 9319])
                            ("getLibFunc" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("funcName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9499 9518])
                                    ("F" variable
                                       (:reference 1
                                        :type ("LibFunc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9519 9530]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9483 9584])
                            ("getLibFunc" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("FDecl" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9604 9626])
                                    ("F" variable
                                       (:reference 1
                                        :type ("LibFunc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9627 9638]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9588 9689])
                            ("getLibFunc" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("CS" variable (:type ("ImmutableCallSite" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9862 9883])
                                    ("F" variable
                                       (:reference 1
                                        :type ("LibFunc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9884 9895]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9846 10018])
                            ("getState" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10401 10411]))                                  
                                :type ("TargetLibraryInfoImpl::AvailabilityState" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10351 10536])
                            ("has" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10602 10612]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10593 10686])
                            ("isFunctionVectorizable" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10717 10729])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10730 10742]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10689 10802])
                            ("isFunctionVectorizable" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10833 10845]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10805 10901])
                            ("getVectorizedFunction" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10936 10948])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10949 10961]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10904 11020])
                            ("hasOptimizedCodeGen" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11148 11158]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [11123 12847])
                            ("getName" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("F" variable (:type ("LibFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12869 12879]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12851 13193])
                            ("getExtAttrForI32Param" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Signed" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [13401 13419]))                                  
                                :type ("Attribute::AttrKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13359 13617])
                            ("getExtAttrForI32Return" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Signed" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [13829 13847]))                                  
                                :type ("Attribute::AttrKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13786 13979])
                            ("getWCharSize" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14058 14074]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [14036 14120])
                            ("invalidate" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14326 14335])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14336 14362])
                                    ("" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14381 14418]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14310 14442])
                            ("invalidate" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14461 14472])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14473 14499])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14518 14557]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14445 14581])
                            ("getWidestVF" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("ScalarF" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14697 14715]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [14676 14766]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [7605 14769])
                    ("TargetLibraryAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [15013 15020])
                            ("Result" type
                               (:typedef ("TargetLibraryInfo" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [15023 15056])
                            ("TargetLibraryAnalysis" function
                               (:constructor-flag t
                                :type ("TargetLibraryAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15205 15231])
                            ("TargetLibraryAnalysis" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BaselineInfoImpl" variable (:type ("TargetLibraryInfoImpl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15406 15445]))                                  
                                :type ("TargetLibraryAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15384 15502])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15528 15546])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15547 15573]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15506 15574])
                            ("private" label nil (reparse-symbol classsubparts) [15576 15584])
                            ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [15587 15635])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15638 15661])
                            ("BaselineInfoImpl" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("TargetLibraryInfoImpl" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [15665 15714]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [14933 15717])
                    ("TargetLibraryInfoWrapperPass" type
                       (:superclasses 
                          ( ("ImmutablePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("TLA" variable (:type ("TargetLibraryAnalysis" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15781 15807])
                            ("TLI" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("TargetLibraryInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [15810 15842])
                            ("anchor" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [15846 15868])
                            ("public" label nil (reparse-symbol classsubparts) [15870 15877])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [15880 15895])
                            ("TargetLibraryInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("TargetLibraryInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15898 15929])
                            ("TargetLibraryInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("T" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15970 15986]))                                  
                                :type ("TargetLibraryInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15941 15987])
                            ("TargetLibraryInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfoImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16028 16061]))                                  
                                :type ("TargetLibraryInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15999 16062])
                            ("getTLI" function
                               (:arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16092 16110]))                                  
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16066 16203]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [15719 16206]))                  
                :type "namespace")
                nil [724 16209]))          
      :file "TargetLibraryInfo.h"
      :pointmax 16240
      :fsize 16239
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((EXPLICIT 15990 . 15998) (EXPLICIT 15932 . 15940) (semantic-list 10308 . 10347) (symbol 10286 . 10307) (semantic-list 10274 . 10285) (symbol 10260 . 10274) (VOID 10255 . 10259) (semantic-list 10160 . 10198) (symbol 10138 . 10159) (semantic-list 10135 . 10137) (symbol 10116 . 10135) (VOID 10111 . 10115) (punctuation 9214 . 9215) (punctuation 8921 . 8922) (EXPLICIT 7966 . 7974) (punctuation 7712 . 7713) (punctuation 7667 . 7668) (punctuation 3678 . 3679) (punctuation 3543 . 3544) (EXPLICIT 3357 . 3365) (punctuation 1566 . 1567) (punctuation 1184 . 1185) (semantic-list 1075 . 1184) (UNSIGNED 1066 . 1074) (punctuation 1064 . 1065) (symbol 1056 . 1063) (ENUM 1051 . 1055))
      :lexical-table 
        '(("LLVM_ANALYSIS_TARGETLIBRARYINFO_H")
          ("TLI_DEFINE_ENUM")
          )
)
    (semanticdb-table "semanticdb-table-1559f7ef5b9c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_TARGETTRANSFORMINFO_H" variable (:constant-flag t) nil [976 1011])
            ("llvm/ADT/Optional.h" include nil nil [1013 1043])
            ("llvm/IR/Operator.h" include nil nil [1044 1073])
            ("llvm/IR/PassManager.h" include nil nil [1074 1106])
            ("llvm/Pass.h" include nil nil [1107 1129])
            ("llvm/Support/AtomicOrdering.h" include nil nil [1130 1170])
            ("llvm/Support/DataTypes.h" include nil nil [1171 1206])
            ("llvm/Analysis/LoopInfo.h" include nil nil [1207 1242])
            ("llvm/Analysis/ScalarEvolution.h" include nil nil [1243 1285])
            ("llvm/IR/Dominators.h" include nil nil [1286 1317])
            ("llvm/Analysis/AssumptionCache.h" include nil nil [1318 1360])
            ("functional" include (:system-flag t) nil [1361 1382])
            ("llvm" type
               (:members 
                  ( ("Intrinsic" type
                       (:members 
                          ( ("ID" type
                               (:typedef ("unsigned int")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1424 1444]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1402 1446])
                    ("AssumptionCache" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1448 1470])
                    ("BlockFrequencyInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1471 1496])
                    ("BranchInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1497 1514])
                    ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1515 1530])
                    ("GlobalValue" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1531 1549])
                    ("IntrinsicInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1550 1570])
                    ("LoadInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1571 1586])
                    ("LoopAccessInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1587 1608])
                    ("Loop" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1609 1620])
                    ("ProfileSummaryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1621 1646])
                    ("SCEV" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1647 1658])
                    ("ScalarEvolution" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1659 1681])
                    ("StoreInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1682 1698])
                    ("SwitchInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1699 1716])
                    ("TargetLibraryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1717 1741])
                    ("Type" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1742 1753])
                    ("User" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1754 1765])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1766 1778])
                    ("MemIntrinsicInfo" type
                       (:members 
                          ( ("PtrVal" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2118 2142])
                            ("AtomicOrdering::NotAtomic" variable (:type "int") (reparse-symbol classsubparts) [2209 2235])
                            ("MatchingId" variable
                               (:default-value "0"
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [2314 2344])
                            ("ReadMem" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [2348 2369])
                            ("WriteMem" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [2372 2394])
                            ("IsVolatile" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [2397 2421])
                            ("isUnordered" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2425 2575]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1848 2578])
                    ("HardwareLoopInfo" type
                       (:members 
                          ( ("HardwareLoopInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2708 2716]))                                  
                                :type ("HardwareLoopInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2691 2726])
                            ("L" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2729 2747])
                            ("ExitBlock" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2750 2782])
                            ("ExitBranch" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("BranchInst" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2785 2818])
                            ("ExitCount" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2821 2853])
                            ("CountType" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("IntegerType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2856 2889])
                            ("LoopDecrement" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2892 2923])
                            ("IsNestingLegal" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [3027 3055])
                            ("CounterInReg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [3159 3185])
                            ("PerformEntryTest" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [3287 3317])
                            ("isHardwareLoopCandidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3553 3573])
                                    ("LI" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3574 3587])
                                    ("DT" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3619 3637])
                                    ("ForceNestedLoop" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [3638 3666])
                                    ("ForceHardwareLoopPHI" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [3699 3732]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3524 3734])
                            ("canAnalyze" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("LI" variable
                                       (:reference 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3753 3766]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3737 3767]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2632 3770])
                    ("TargetTransformInfo" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3906 3913])
                            ("TargetTransformInfo" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("TargetTransformInfo" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Impl" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4201 4208]))                                  
                                :constructor-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [4159 4209])
                            ("TargetTransformInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4456 4477]))                                  
                                :type ("TargetTransformInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4436 4478])
                            ("TargetTransformInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4531 4553])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4553 4557]))                                  
                                :type ("TargetTransformInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4511 4558])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4592 4614])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4614 4618]))                                  
                                :type ("TargetTransformInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4561 4619])
                            ("TargetTransformInfo" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4717 4740])
                            ("invalidate" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5030 5041])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5042 5068])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5087 5126]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5014 5271])
                            ("TargetCostKind" type
                               (:members 
                                  ( ("TCK_RecipThroughput" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5537 5557])
                                    ("TCK_Latency" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5590 5602])
                                    ("TCK_CodeSize" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5648 5700]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [5511 5701])
                            ("getInstructionCost" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6042 6063])
                                    ("kind" variable (:type ("TargetCostKind" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [6064 6089]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [6019 6368])
                            ("TargetCostConstants" type
                               (:members 
                                  ( ("TCC_Free" variable
                                       (:constant-flag t
                                        :default-value (7629 7630)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7618 7630])
                                    ("TCC_Basic" variable
                                       (:constant-flag t
                                        :default-value (7692 7693)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7680 7693])
                                    ("TCC_Expensive" variable
                                       (:constant-flag t
                                        :default-value (7764 7765)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7748 7765]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [7587 7815])
                            ("getOperationCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8615 8631])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8632 8641])
                                    ("OpTy" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8642 8662]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8594 8670])
                            ("getGEPCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("PointeeType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8936 8954])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8955 8972])
                                    ("Operands" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [8990 9023]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8921 9030])
                            ("getExtCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9296 9317])
                                    ("Src" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9318 9335]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9281 9342])
                            ("getCallCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("FTy" variable
                                       (:pointer 1
                                        :type ("FunctionType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9830 9848])
                                    ("NumArgs" variable
                                       (:default-value "-1"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [9849 9865])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9885 9908]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9814 9916])
                            ("getCallCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10164 10182])
                                    ("NumArgs" variable
                                       (:default-value "-1"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [10183 10199])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10219 10242]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [10148 10250])
                            ("getCallCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10419 10437])
                                    ("Arguments" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [10438 10472])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10491 10514]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [10403 10522])
                            ("getInliningThresholdMultiplier" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10872 10920])
                            ("getInlinerVectorBonusPercent" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [11527 11568])
                            ("getIntrinsicCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11727 11745])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11746 11758])
                                    ("ParamTys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [11782 11808])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11832 11855]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [11706 11863])
                            ("getIntrinsicCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12022 12040])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12041 12053])
                                    ("Arguments" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [12077 12111])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12135 12158]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [12001 12166])
                            ("getMemcpyCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12340 12361]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [12322 12368])
                            ("getEstimatedNumberOfCaseClusters" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("SI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SwitchInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12579 12600])
                                    ("JTSize" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [12645 12662])
                                    ("PSI" variable
                                       (:pointer 1
                                        :type ("ProfileSummaryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12707 12731])
                                    ("BFI" variable
                                       (:pointer 1
                                        :type ("BlockFrequencyInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12776 12800]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [12537 12807])
                            ("getUserCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13991 14005])
                                    ("Operands" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14006 14039]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [13975 14046])
                            ("getUserCost" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14200 14214]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [14184 14390])
                            ("hasBranchDivergence" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14623 14656])
                            ("isSourceOfDivergence" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15018 15033]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14992 15040])
                            ("isAlwaysUniform" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15198 15213]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [15177 15220])
                            ("getFlatAddressSpace" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [16169 16206])
                            ("collectFlatAddressOperands" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OpIndexes" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("int" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16420 16452])
                                    ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16487 16505]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16388 16512])
                            ("rewriteIntrinsicWithAddressSpace" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("II" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16844 16862])
                                    ("OldV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16903 16915])
                                    ("NewV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16916 16928]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16806 16935])
                            ("isLoweredToCall" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17618 17636]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [17597 17643])
                            ("LSRCost" type
                               (:members 
                                  ( ("Insns" variable (:type "unsigned int") (reparse-symbol classsubparts) [17768 17783])
                                    ("NumRegs" variable (:type "unsigned int") (reparse-symbol classsubparts) [17788 17805])
                                    ("AddRecCost" variable (:type "unsigned int") (reparse-symbol classsubparts) [17810 17830])
                                    ("NumIVMuls" variable (:type "unsigned int") (reparse-symbol classsubparts) [17835 17854])
                                    ("NumBaseAdds" variable (:type "unsigned int") (reparse-symbol classsubparts) [17859 17880])
                                    ("ImmCost" variable (:type "unsigned int") (reparse-symbol classsubparts) [17885 17902])
                                    ("SetupCost" variable (:type "unsigned int") (reparse-symbol classsubparts) [17907 17926])
                                    ("ScaleCost" variable (:type "unsigned int") (reparse-symbol classsubparts) [17931 17950]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [17647 17955])
                            ("UnrollingPreferences" type
                               (:members 
                                  ( ("Threshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [18549 18568])
                                    ("MaxPercentThresholdBoost" variable (:type "unsigned int") (reparse-symbol classsubparts) [19263 19297])
                                    ("OptSizeThreshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [19414 19440])
                                    ("PartialThreshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [19588 19614])
                                    ("PartialOptSizeThreshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [19802 19835])
                                    ("Count" variable (:type "unsigned int") (reparse-symbol classsubparts) [20113 20128])
                                    ("PeelCount" variable (:type "unsigned int") (reparse-symbol classsubparts) [20402 20421])
                                    ("DefaultUnrollRuntimeCount" variable (:type "unsigned int") (reparse-symbol classsubparts) [20491 20526])
                                    ("MaxCount" variable (:type "unsigned int") (reparse-symbol classsubparts) [20798 20816])
                                    ("FullUnrollMaxCount" variable (:type "unsigned int") (reparse-symbol classsubparts) [21063 21091])
                                    ("BEInsns" variable (:type "unsigned int") (reparse-symbol classsubparts) [21307 21324])
                                    ("Partial" variable (:type "bool") (reparse-symbol classsubparts) [21482 21495])
                                    ("Runtime" variable (:type "bool") (reparse-symbol classsubparts) [21675 21688])
                                    ("AllowRemainder" variable (:type "bool") (reparse-symbol classsubparts) [21771 21791])
                                    ("AllowExpensiveTripCount" variable (:type "bool") (reparse-symbol classsubparts) [21933 21962])
                                    ("Force" variable (:type "bool") (reparse-symbol classsubparts) [22068 22079])
                                    ("UpperBound" variable (:type "bool") (reparse-symbol classsubparts) [22144 22160])
                                    ("AllowPeeling" variable (:type "bool") (reparse-symbol classsubparts) [22208 22226])
                                    ("UnrollRemainder" variable (:type "bool") (reparse-symbol classsubparts) [22308 22329])
                                    ("UnrollAndJam" variable (:type "bool") (reparse-symbol classsubparts) [22410 22428])
                                    ("PeelProfiledIterations" variable (:type "bool") (reparse-symbol classsubparts) [22696 22724])
                                    ("UnrollAndJamInnerLoopThreshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [22970 23010]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [18032 23015])
                            ("getUnrollingPreferences" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23223 23231])
                                    ("" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23232 23250])
                                    ("UP" variable
                                       (:reference 1
                                        :type ("UnrollingPreferences" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23282 23307]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [23194 23314])
                            ("isHardwareLoopProfitable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23456 23464])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23465 23485])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23518 23538])
                                    ("LibInfo" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23571 23598])
                                    ("HWLoopInfo" variable
                                       (:reference 1
                                        :type ("HardwareLoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23631 23660]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [23426 23667])
                            ("preferPredicateOverEpilogue" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23855 23863])
                                    ("LI" variable
                                       (:pointer 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23864 23877])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23878 23898])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23934 23954])
                                    ("TLI" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23955 23978])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24014 24032])
                                    ("LAI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoopAccessInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24068 24094]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [23822 24101])
                            ("PopcntSupportKind" type
                               (:members 
                                  ( ("PSK_Software" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [24661 24674])
                                    ("PSK_SlowHardware" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [24675 24692])
                                    ("PSK_FastHardware" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [24693 24711]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [24636 24712])
                            ("isLegalAddImmediate" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Imm" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24967 24979]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [24942 24986])
                            ("isLegalICmpImmediate" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Imm" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25257 25269]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [25231 25276])
                            ("isLegalAddressingMode" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25684 25693])
                                    ("BaseGV" variable
                                       (:pointer 1
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25694 25714])
                                    ("BaseOffset" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25715 25734])
                                    ("HasBaseReg" variable (:type "bool") (reparse-symbol arg-sub-list) [25764 25780])
                                    ("Scale" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25781 25795])
                                    ("AddrSpace" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [25825 25847])
                                    ("I" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25878 25902]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [25657 25910])
                            ("isLSRCostLess" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("C1" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo::LSRCost" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25987 26020])
                                    ("C2" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo::LSRCost" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26042 26075]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [25968 26082])
                            ("canMacroFuseCmp" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [26274 26303])
                            ("canSaveCmp" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26439 26447])
                                    ("BI" variable
                                       (:pointer 2
                                        :type ("BranchInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26448 26464])
                                    ("SE" variable
                                       (:pointer 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26465 26485])
                                    ("LI" variable
                                       (:pointer 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26486 26499])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26518 26536])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26537 26557])
                                    ("LibInfo" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26576 26603]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26423 26610])
                            ("shouldFavorPostInc" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [26723 26755])
                            ("shouldFavorBackedgeIndex" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26914 26928]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26884 26935])
                            ("isLegalMaskedStore" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27018 27033])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27034 27055]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26994 27062])
                            ("isLegalMaskedLoad" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27142 27157])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27158 27179]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27119 27186])
                            ("isLegalNTStore" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27270 27285])
                                    ("Alignment" variable (:type ("Align" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27286 27302]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27250 27309])
                            ("isLegalNTLoad" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27390 27405])
                                    ("Alignment" variable (:type ("Align" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27406 27422]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27371 27429])
                            ("isLegalMaskedScatter" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27516 27531])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27532 27553]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27490 27560])
                            ("isLegalMaskedGather" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27644 27659])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27660 27681]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27619 27688])
                            ("isLegalMaskedCompressStore" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27788 27803]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27756 27810])
                            ("isLegalMaskedExpandLoad" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27903 27918]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27874 27925])
                            ("hasDivRemOp" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28328 28343])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [28344 28358]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [28311 28365])
                            ("hasVolatileVariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28724 28739])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [28740 28759]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [28700 28766])
                            ("prefersVectorizedAddressing" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [28833 28874])
                            ("getScalingFactorCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29226 29235])
                                    ("BaseGV" variable
                                       (:pointer 1
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29236 29256])
                                    ("BaseOffset" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29257 29276])
                                    ("HasBaseReg" variable (:type "bool") (reparse-symbol arg-sub-list) [29304 29320])
                                    ("Scale" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29321 29335])
                                    ("AddrSpace" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [29363 29385]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [29201 29393])
                            ("LSRWithInstrQueries" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [29656 29689])
                            ("isTruncateFree" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty1" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29906 29916])
                                    ("Ty2" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29917 29927]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29886 29934])
                            ("isProfitableToHoist" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30059 30074]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30034 30081])
                            ("useAA" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [30085 30104])
                            ("isTypeLegal" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30166 30175]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30149 30182])
                            ("shouldBuildLookupTables" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [30274 30311])
                            ("shouldBuildLookupTablesForConstant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("C" variable
                                       (:pointer 1
                                        :type ("Constant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30474 30486]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30434 30493])
                            ("useColdCCForColdCall" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30641 30653]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30615 30660])
                            ("getScalarizationOverhead" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30698 30707])
                                    ("Insert" variable (:type "bool") (reparse-symbol arg-sub-list) [30708 30720])
                                    ("Extract" variable (:type "bool") (reparse-symbol arg-sub-list) [30721 30734]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [30664 30741])
                            ("getOperandsScalarizationOverhead" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Args" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [30787 30816])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [30861 30873]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [30745 30880])
                            ("supportsEfficientVectorElementLoadStore" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [31082 31135])
                            ("enableAggressiveInterleaving" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("LoopHasReductions" variable (:type "bool") (reparse-symbol arg-sub-list) [31232 31255]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [31198 31262])
                            ("MemCmpExpansionOptions" type
                               (:members 
                                  ( ("MaxNumLoads" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [31572 31597])
                                    ("LoadSizes" variable (:type ("SmallVector" type
                                         (:template-specifier 
                                            ( ("unsigned int" type nil nil nil)
                                              ("8"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [31683 31718])
                                    ("NumLoadsPerBlock" variable
                                       (:default-value "1"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [32120 32150])
                                    ("AllowOverlappingLoads" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [32386 32421]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [31388 32426])
                            ("enableMemCmpExpansion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OptSize" variable (:type "bool") (reparse-symbol arg-sub-list) [32474 32487])
                                    ("IsZeroCmp" variable (:type "bool") (reparse-symbol arg-sub-list) [32535 32550]))                                  
                                :type ("MemCmpExpansionOptions" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32429 32557])
                            ("enableInterleavedAccessVectorization" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [32613 32663])
                            ("enableMaskedInterleavedAccessVectorization" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [32830 32886])
                            ("isFPVectorizationPotentiallyUnsafe" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [33350 33398])
                            ("allowsMisalignedMemoryAccesses" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33504 33525])
                                    ("BitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [33564 33582])
                                    ("AddressSpace" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [33583 33608])
                                    ("Alignment" variable
                                       (:default-value "1"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [33648 33670])
                                    ("Fast" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [33710 33730]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33468 33738])
                            ("getPopcntSupport" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("IntTyWidthInBit" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [33829 33854]))                                  
                                :type ("PopcntSupportKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33794 33861])
                            ("haveFastSqrt" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33953 33962]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33935 33969])
                            ("isFCmpOrdCheaperThanFCmpZero" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34292 34301]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [34258 34308])
                            ("getFPOpCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34431 34440]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [34415 34447])
                            ("getIntImmCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34578 34595])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34596 34605]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [34560 34612])
                            ("getIntImmCostInst" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opc" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [34863 34876])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [34877 34890])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34891 34908])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34933 34942]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [34841 34949])
                            ("getIntImmCostIntrin" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34976 34994])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [34995 35008])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35009 35026])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35053 35062]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [34952 35069])
                            ("getIntImmCodeSizeCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opc" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35596 35609])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35610 35623])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35624 35641])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35670 35679]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [35570 35686])
                            ("ShuffleKind" type
                               (:members 
                                  ( ("SK_Broadcast" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [35834 35847])
                                    ("SK_Reverse" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [35906 35917])
                                    ("SK_Select" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [35968 35978])
                                    ("SK_Transpose" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36199 36212])
                                    ("SK_InsertSubvector" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36251 36270])
                                    ("SK_ExtractSubvector" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36327 36347])
                                    ("SK_PermuteTwoSrc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36403 36420])
                                    ("SK_PermuteSingleSrc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36532 36653]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [35811 36654])
                            ("OperandValueKind" type
                               (:members 
                                  ( ("OK_AnyValue" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36751 36763])
                                    ("OK_UniformValue" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36813 36829])
                                    ("OK_UniformConstantValue" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36886 36910])
                                    ("OK_NonUniformConstantValue" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36949 37023]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [36723 37024])
                            ("OperandValueProperties" type
                               (:members 
                                  ( ("OP_None" variable
                                       (:constant-flag t
                                        :default-value (37120 37121)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [37110 37121])
                                    ("OP_PowerOf2" variable
                                       (:constant-flag t
                                        :default-value (37137 37138)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [37123 37138]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [37080 37141])
                            ("getNumberOfRegisters" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ClassID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [37252 37269]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [37222 37276])
                            ("getRegisterClassForType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Vector" variable (:type "bool") (reparse-symbol arg-sub-list) [38122 38134])
                                    ("Ty" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38135 38153]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [38089 38161])
                            ("getRegisterClassName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("ClassID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [38252 38269]))                                  
                                :type "char")
                                (reparse-symbol classsubparts) [38219 38276])
                            ("getRegisterBitWidth" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Vector" variable (:type "bool") (reparse-symbol arg-sub-list) [38380 38392]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [38351 38399])
                            ("getMinVectorRegisterBitWidth" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [38465 38511])
                            ("shouldMaximizeVectorBandwidth" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OptSize" variable (:type "bool") (reparse-symbol arg-sub-list) [38925 38938]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [38890 38945])
                            ("getMinimumVF" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ElemWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [39181 39200]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [39159 39207])
                            ("shouldConsiderAddressTypePromotion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39478 39499])
                                    ("AllowPromotionWithoutCommonHeader" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [39500 39540]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39431 39547])
                            ("getCacheLineSize" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [39600 39634])
                            ("CacheLevel" type (:type "class") (reparse-symbol classsubparts) [39675 39947])
                            ("getCacheSize" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Level" variable (:type ("CacheLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40055 40072]))                                  
                                :type ("llvm::Optional" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [40017 40079])
                            ("getCacheAssociativity" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Level" variable (:type ("CacheLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40196 40213]))                                  
                                :type ("llvm::Optional" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [40149 40220])
                            ("getPrefetchDistance" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [40370 40407])
                            ("getMinPrefetchStride" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [40655 40693])
                            ("getMaxPrefetchIterationsAhead" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [40868 40915])
                            ("getMaxInterleaveFactor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [41159 41171]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [41127 41178])
                            ("getOperandInfo" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41292 41301])
                                    ("OpProps" variable
                                       (:reference 1
                                        :type ("OperandValueProperties" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41343 41375]))                                  
                                :type ("OperandValueKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41253 41376])
                            ("getArithmeticInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [42461 42477])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42478 42487])
                                    ("Opd1Info" variable
                                       (:default-value "OK_AnyValue"
                                        :type ("OperandValueKind" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42488 42527])
                                    ("Opd2Info" variable
                                       (:default-value "OK_AnyValue"
                                        :type ("OperandValueKind" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42535 42574])
                                    ("Opd1PropInfo" variable
                                       (:default-value "OP_None"
                                        :type ("OperandValueProperties" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42582 42627])
                                    ("Opd2PropInfo" variable
                                       (:default-value "OP_None"
                                        :type ("OperandValueProperties" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42635 42680])
                                    ("Args" variable
                                       (:default-value "ArrayRef<const Value *>()"
                                        :type ("ArrayRef" type
                                             (:template-specifier 
                                                ( ("Value" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [42688 42744])
                                    ("CxtI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42752 42785]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [42427 42793])
                            ("getShuffleCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("ShuffleKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43167 43184])
                                    ("Tp" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43185 43194])
                                    ("Index" variable
                                       (:default-value "0"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [43195 43208])
                                    ("SubTp" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43231 43252]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [43148 43260])
                            ("getCastInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [43480 43496])
                                    ("Dst" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43497 43507])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43508 43518])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43542 43572]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [43459 43580])
                            ("getExtractWithExtendCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [43766 43782])
                                    ("Dst" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43783 43793])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43794 43812])
                                    ("Index" variable
                                       (:default-value "-1"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [43844 43863]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [43737 43871])
                            ("getCFInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [43991 44007]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [43972 44014])
                            ("getCmpSelInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44216 44232])
                                    ("ValTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44233 44245])
                                    ("CondTy" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44263 44285])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44287 44317]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [44193 44325])
                            ("getVectorInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44488 44504])
                                    ("Val" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44505 44515])
                                    ("Index" variable
                                       (:default-value "-1"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [44516 44535]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [44465 44543])
                            ("getMemoryOpCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44622 44638])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44639 44649])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44650 44671])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44694 44716])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44739 44769]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [44602 44777])
                            ("getMaskedMemoryOpCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44869 44885])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44886 44896])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44897 44916])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [44945 44967]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [44843 44974])
                            ("getGatherScatterOpCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [45443 45459])
                                    ("DataTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45460 45473])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45474 45485])
                                    ("VariableMask" variable (:type "bool") (reparse-symbol arg-sub-list) [45515 45533])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [45534 45553]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [45416 45560])
                            ("getInterleavedMemoryOpCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [46151 46167])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46168 46180])
                                    ("Factor" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [46181 46197])
                                    ("Indices" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("unsigned int" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [46231 46258])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [46259 46278])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [46312 46334])
                                    ("UseMaskForCond" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [46368 46395])
                                    ("UseMaskForGaps" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [46430 46457]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [46120 46465])
                            ("getArithmeticReductionCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [46997 47013])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47014 47023])
                                    ("IsPairwiseForm" variable (:type "bool") (reparse-symbol arg-sub-list) [47057 47077]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [46966 47084])
                            ("getMinMaxReductionCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47114 47123])
                                    ("CondTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47124 47137])
                                    ("IsPairwiseForm" variable (:type "bool") (reparse-symbol arg-sub-list) [47138 47158])
                                    ("IsUnsigned" variable (:type "bool") (reparse-symbol arg-sub-list) [47188 47204]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47087 47211])
                            ("getIntrinsicInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47459 47476])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47477 47489])
                                    ("Args" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [47518 47541])
                                    ("FMF" variable (:type ("FastMathFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47542 47560])
                                    ("VF" variable
                                       (:default-value "1"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [47589 47604]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47433 47612])
                            ("getIntrinsicInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47858 47875])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47876 47888])
                                    ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [47917 47938])
                                    ("FMF" variable (:type ("FastMathFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47939 47957])
                                    ("ScalarizationCostPassed" variable
                                       (:default-value "UINT_MAX"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [47986 48029]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47832 48037])
                            ("getCallInstrCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48108 48120])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48121 48133])
                                    ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [48134 48155]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [48087 48162])
                            ("getNumberOfParts" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Tp" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48343 48352]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [48317 48359])
                            ("getAddressComputationCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48916 48925])
                                    ("SE" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48926 48955])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48989 49014]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [48886 49022])
                            ("getCostOfKeepingLiveOverCall" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [49312 49333]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [49274 49340])
                            ("getTgtMemIntrinsic" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49620 49640])
                                    ("Info" variable
                                       (:reference 1
                                        :type ("MemIntrinsicInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49641 49664]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [49596 49671])
                            ("getAtomicMemIntrinsicMaxElementSize" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [49782 49835])
                            ("getOrCreateResultFromMemIntrinsic" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50150 50170])
                                    ("ExpectedType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50214 50233]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50109 50240])
                            ("getMemcpyLoopLoweringType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50345 50366])
                                    ("Length" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50367 50381])
                                    ("SrcAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [50416 50434])
                                    ("DestAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [50435 50454]))                                  
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50313 50461])
                            ("getMemcpyLoopResidualLoweringType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OpsOut" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Type" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [50827 50859])
                                    ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50901 50922])
                                    ("RemainingBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [50964 50988])
                                    ("SrcAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [51030 51048])
                                    ("DestAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [51090 51109]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [50788 51116])
                            ("areInlineCompatible" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Caller" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51242 51265])
                                    ("Callee" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51293 51316]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [51217 51323])
                            ("areFunctionArgsABICompatible" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Caller" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51599 51622])
                                    ("Callee" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51659 51682])
                                    ("Args" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Argument" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [51719 51753]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [51565 51760])
                            ("MemIndexedMode" type
                               (:members 
                                  ( ("MIM_Unindexed" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [51829 51843])
                                    ("MIM_PreInc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [51867 51878])
                                    ("MIM_PreDec" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [51910 51921])
                                    ("MIM_PostInc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [51953 51965])
                                    ("MIM_PostDec" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [51997 52040]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [51803 52041])
                            ("isIndexedLoadLegal" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Mode" variable (:type ("MemIndexedMode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [52148 52173])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [52174 52183]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [52124 52190])
                            ("isIndexedStoreLegal" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Mode" variable (:type ("MemIndexedMode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [52299 52324])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [52325 52334]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [52274 52341])
                            ("getLoadStoreVecRegBitWidth" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [52504 52523]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [52468 52530])
                            ("isLegalToVectorizeLoad" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("LI" variable
                                       (:pointer 1
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [52629 52642]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [52601 52649])
                            ("isLegalToVectorizeStore" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("SI" variable
                                       (:pointer 1
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [52750 52764]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [52721 52771])
                            ("isLegalToVectorizeLoadChain" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [52878 52904])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [52940 52959])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [52995 53014]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [52845 53021])
                            ("isLegalToVectorizeStoreChain" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53130 53156])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53193 53212])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53249 53268]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [53096 53275])
                            ("getLoadVectorFactor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53439 53451])
                                    ("LoadSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53452 53470])
                                    ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53502 53528])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [53560 53578]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [53410 53585])
                            ("getStoreVectorFactor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53751 53763])
                                    ("StoreSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53764 53783])
                                    ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [53816 53842])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [53875 53893]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [53721 53900])
                            ("ReductionFlags" type
                               (:members 
                                  ( ("ReductionFlags" function
                                       (:constructor-flag t
                                        :type ("ReductionFlags" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [53985 54052])
                                    ("IsMaxOp" variable (:type "bool") (reparse-symbol classsubparts) [54057 54070])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol classsubparts) [54137 54151])
                                    ("NoNaN" variable (:type "bool") (reparse-symbol classsubparts) [54210 54221]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [53957 54287])
                            ("useReductionIntrinsic" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [54452 54468])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [54469 54478])
                                    ("Flags" variable (:type ("ReductionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54508 54529]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [54425 54536])
                            ("shouldExpandReduction" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("II" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [54678 54702]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [54651 54709])
                            ("getGISelRematGlobalCost" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [54817 54858])
                            ("private" label nil (reparse-symbol classsubparts) [54870 54878])
                            ("getInstructionLatency" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [54998 55019]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [54972 55026])
                            ("getInstructionThroughput" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55163 55184]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55134 55191])
                            ("Concept" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [55280 55294])
                            ("Model" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [55414 55448])
                            ("TTIImpl" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("Concept" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [55452 55485]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3878 55488])
                    ("Concept" type
                       (:parent "TargetTransformInfo"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [55527 55534])
                            ("Concept" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [55537 55560])
                            ("getDataLayout" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [55563 55615])
                            ("getOperationCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [55647 55663])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55664 55673])
                                    ("OpTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55674 55685]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55618 55690])
                            ("getGEPCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("PointeeType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55716 55734])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55735 55752])
                                    ("Operands" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [55778 55811]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55693 55816])
                            ("getExtCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55842 55863])
                                    ("Src" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55864 55881]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55819 55886])
                            ("getCallCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("FTy" variable
                                       (:pointer 1
                                        :type ("FunctionType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55913 55931])
                                    ("NumArgs" variable (:type "int") (reparse-symbol arg-sub-list) [55932 55944])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55945 55959]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55889 55964])
                            ("getCallCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55991 56009])
                                    ("NumArgs" variable (:type "int") (reparse-symbol arg-sub-list) [56010 56022])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56023 56037]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [55967 56042])
                            ("getCallCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56069 56087])
                                    ("Arguments" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [56114 56148])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56149 56163]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [56045 56168])
                            ("getInliningThresholdMultiplier" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [56171 56225])
                            ("getInlinerVectorBonusPercent" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "int")
                                (reparse-symbol classsubparts) [56228 56275])
                            ("getIntrinsicCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56307 56325])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56326 56338])
                                    ("ParamTys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [56370 56396])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56397 56411]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [56278 56416])
                            ("getIntrinsicCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56448 56466])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56467 56479])
                                    ("Arguments" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [56511 56545])
                                    ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56577 56591]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [56419 56596])
                            ("getMemcpyCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56625 56646]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [56599 56651])
                            ("getEstimatedNumberOfCaseClusters" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("SI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SwitchInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56704 56725])
                                    ("JTSize" variable
                                       (:reference 1
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [56778 56795])
                                    ("PSI" variable
                                       (:pointer 1
                                        :type ("ProfileSummaryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56848 56872])
                                    ("BFI" variable
                                       (:pointer 1
                                        :type ("BlockFrequencyInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56925 56949]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [56654 56954])
                            ("getUserCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("U" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("User" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56983 56997])
                                    ("Operands" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [56998 57031]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [56957 57036])
                            ("hasBranchDivergence" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [57039 57078])
                            ("isSourceOfDivergence" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57115 57130]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57081 57135])
                            ("isAlwaysUniform" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57167 57182]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57138 57187])
                            ("getFlatAddressSpace" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [57190 57233])
                            ("collectFlatAddressOperands" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OpIndexes" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("int" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [57276 57308])
                                    ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57351 57369]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57236 57380])
                            ("rewriteIntrinsicWithAddressSpace" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("II" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57434 57452])
                                    ("OldV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57453 57465])
                                    ("NewV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57466 57478]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57383 57489])
                            ("isLoweredToCall" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57521 57539]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57492 57544])
                            ("getUnrollingPreferences" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57584 57592])
                                    ("" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57593 57611])
                                    ("UP" variable
                                       (:reference 1
                                        :type ("UnrollingPreferences" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57651 57676]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [57547 57681])
                            ("isHardwareLoopProfitable" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57722 57730])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57731 57751])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57792 57812])
                                    ("LibInfo" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57853 57880])
                                    ("HWLoopInfo" variable
                                       (:reference 1
                                        :type ("HardwareLoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57921 57950]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57684 57955])
                            ("preferPredicateOverEpilogue" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57999 58007])
                                    ("LI" variable
                                       (:pointer 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58008 58021])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58065 58085])
                                    ("AC" variable
                                       (:reference 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58129 58149])
                                    ("TLI" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58193 58216])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58260 58278])
                                    ("LAI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoopAccessInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58322 58348]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [57958 58353])
                            ("isLegalAddImmediate" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Imm" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58389 58401]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [58356 58406])
                            ("isLegalICmpImmediate" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Imm" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58443 58455]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [58409 58460])
                            ("isLegalAddressingMode" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58498 58507])
                                    ("BaseGV" variable
                                       (:pointer 1
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58508 58528])
                                    ("BaseOffset" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58566 58585])
                                    ("HasBaseReg" variable (:type "bool") (reparse-symbol arg-sub-list) [58586 58602])
                                    ("Scale" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58640 58654])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [58692 58711])
                                    ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58749 58764]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [58463 58769])
                            ("isLSRCostLess" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("C1" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo::LSRCost" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58799 58832])
                                    ("C2" variable
                                       (:reference 1
                                        :type ("TargetTransformInfo::LSRCost" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58862 58895]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [58772 58900])
                            ("canMacroFuseCmp" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [58903 58938])
                            ("canSaveCmp" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58965 58973])
                                    ("BI" variable
                                       (:pointer 2
                                        :type ("BranchInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58974 58990])
                                    ("SE" variable
                                       (:pointer 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58991 59011])
                                    ("LI" variable
                                       (:pointer 1
                                        :type ("LoopInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59038 59051])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59052 59070])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59071 59091])
                                    ("LibInfo" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59118 59145]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [58941 59150])
                            ("shouldFavorPostInc" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [59153 59197])
                            ("shouldFavorBackedgeIndex" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59238 59252]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59200 59263])
                            ("isLegalMaskedStore" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59298 59313])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59314 59335]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59266 59340])
                            ("isLegalMaskedLoad" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59374 59389])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59390 59411]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59343 59416])
                            ("isLegalNTStore" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59447 59462])
                                    ("Alignment" variable (:type ("Align" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59463 59479]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59419 59484])
                            ("isLegalNTLoad" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59514 59529])
                                    ("Alignment" variable (:type ("Align" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59530 59546]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59487 59551])
                            ("isLegalMaskedScatter" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59588 59603])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59604 59625]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59554 59630])
                            ("isLegalMaskedGather" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59666 59681])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59682 59703]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59633 59708])
                            ("isLegalMaskedCompressStore" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59751 59766]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59711 59771])
                            ("isLegalMaskedExpandLoad" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59811 59826]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59774 59831])
                            ("hasDivRemOp" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("DataType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59859 59874])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [59875 59889]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59834 59894])
                            ("hasVolatileVariant" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59929 59944])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [59945 59964]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [59897 59969])
                            ("prefersVectorizedAddressing" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [59972 60019])
                            ("getScalingFactorCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60055 60064])
                                    ("BaseGV" variable
                                       (:pointer 1
                                        :type ("GlobalValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60065 60085])
                                    ("BaseOffset" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60121 60140])
                                    ("HasBaseReg" variable (:type "bool") (reparse-symbol arg-sub-list) [60141 60157])
                                    ("Scale" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60193 60207])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [60208 60227]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [60022 60232])
                            ("LSRWithInstrQueries" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [60235 60274])
                            ("isTruncateFree" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty1" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60305 60315])
                                    ("Ty2" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60316 60326]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60277 60331])
                            ("isProfitableToHoist" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60367 60382]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60334 60387])
                            ("useAA" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [60390 60415])
                            ("isTypeLegal" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60443 60452]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60418 60457])
                            ("shouldBuildLookupTables" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [60460 60503])
                            ("shouldBuildLookupTablesForConstant" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("C" variable
                                       (:pointer 1
                                        :type ("Constant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60554 60566]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60506 60571])
                            ("useColdCCForColdCall" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60608 60620]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60574 60625])
                            ("getScalarizationOverhead" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60672 60681])
                                    ("Insert" variable (:type "bool") (reparse-symbol arg-sub-list) [60682 60694])
                                    ("Extract" variable (:type "bool") (reparse-symbol arg-sub-list) [60695 60708]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [60628 60713])
                            ("getOperandsScalarizationOverhead" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Args" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [60766 60795])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [60848 60860]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [60716 60865])
                            ("supportsEfficientVectorElementLoadStore" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [60868 60927])
                            ("enableAggressiveInterleaving" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("LoopHasReductions" variable (:type "bool") (reparse-symbol arg-sub-list) [60972 60995]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [60930 61000])
                            ("enableMemCmpExpansion" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OptSize" variable (:type "bool") (reparse-symbol arg-sub-list) [61058 61071])
                                    ("IsZeroCmp" variable (:type "bool") (reparse-symbol arg-sub-list) [61072 61087]))                                  
                                :type ("MemCmpExpansionOptions" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61003 61098])
                            ("enableInterleavedAccessVectorization" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [61101 61157])
                            ("enableMaskedInterleavedAccessVectorization" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [61160 61222])
                            ("isFPVectorizationPotentiallyUnsafe" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [61225 61279])
                            ("allowsMisalignedMemoryAccesses" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61326 61347])
                                    ("BitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61394 61412])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61459 61481])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61528 61547])
                                    ("Fast" variable
                                       (:pointer 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [61594 61605]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [61282 61610])
                            ("getPopcntSupport" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("IntTyWidthInBit" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61656 61681]))                                  
                                :type ("PopcntSupportKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61613 61686])
                            ("haveFastSqrt" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61715 61724]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [61689 61729])
                            ("isFCmpOrdCheaperThanFCmpZero" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61774 61783]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [61732 61788])
                            ("getFPOpCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61815 61824]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [61791 61829])
                            ("getIntImmCodeSizeCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opc" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61866 61879])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [61880 61893])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61894 61911])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61948 61957]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [61832 61962])
                            ("getIntImmCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61991 62008])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62009 62018]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [61965 62023])
                            ("getIntImmCostInst" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opc" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62056 62069])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62070 62083])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62084 62101])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62134 62143]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [62026 62148])
                            ("getIntImmCostIntrin" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("IID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62183 62201])
                                    ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62202 62215])
                                    ("Imm" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62250 62267])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62268 62277]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [62151 62282])
                            ("getNumberOfRegisters" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ClassID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62323 62340]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62285 62351])
                            ("getRegisterClassForType" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Vector" variable (:type "bool") (reparse-symbol arg-sub-list) [62395 62407])
                                    ("Ty" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62408 62426]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62354 62438])
                            ("getRegisterClassName" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :arguments 
                                  ( ("ClassID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62482 62499]))                                  
                                :type "char")
                                (reparse-symbol classsubparts) [62441 62510])
                            ("getRegisterBitWidth" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Vector" variable (:type "bool") (reparse-symbol arg-sub-list) [62550 62562]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62513 62573])
                            ("getMinVectorRegisterBitWidth" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62576 62628])
                            ("shouldMaximizeVectorBandwidth" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OptSize" variable (:type "bool") (reparse-symbol arg-sub-list) [62674 62687]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [62631 62698])
                            ("getMinimumVF" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ElemWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62731 62750]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62701 62761])
                            ("shouldConsiderAddressTypePromotion" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62819 62840])
                                    ("AllowPromotionWithoutCommonHeader" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [62841 62881]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [62764 62886])
                            ("getCacheLineSize" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [62889 62935])
                            ("getCacheSize" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Level" variable (:type ("CacheLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62984 63001]))                                  
                                :type ("llvm::Optional" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [62938 63012])
                            ("getCacheAssociativity" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Level" variable (:type ("CacheLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63070 63087]))                                  
                                :type ("llvm::Optional" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [63015 63098])
                            ("getPrefetchDistance" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [63248 63297])
                            ("getMinPrefetchStride" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [63545 63595])
                            ("getMaxPrefetchIterationsAhead" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [63770 63829])
                            ("getMaxInterleaveFactor" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [63873 63885]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [63833 63890])
                            ("getArithmeticInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [63940 63956])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63957 63966])
                                    ("Opd1Info" variable (:type ("OperandValueKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63967 63993])
                                    ("Opd2Info" variable (:type ("OperandValueKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64000 64026])
                                    ("Opd1PropInfo" variable (:type ("OperandValueProperties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64027 64063])
                                    ("Opd2PropInfo" variable (:type ("OperandValueProperties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64070 64106])
                                    ("Args" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [64107 64136])
                                    ("CxtI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64143 64176]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [63893 64182])
                            ("getShuffleCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Kind" variable (:type ("ShuffleKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64212 64229])
                                    ("Tp" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64230 64239])
                                    ("Index" variable (:type "int") (reparse-symbol arg-sub-list) [64240 64250])
                                    ("SubTp" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64280 64292]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64185 64297])
                            ("getCastInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64329 64345])
                                    ("Dst" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64346 64356])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64357 64367])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64399 64420]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64300 64425])
                            ("getExtractWithExtendCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64465 64481])
                                    ("Dst" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64482 64492])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64532 64550])
                                    ("Index" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64551 64566]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64428 64571])
                            ("getCFInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64601 64617]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64574 64622])
                            ("getCmpSelInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64656 64672])
                                    ("ValTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64673 64685])
                                    ("CondTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64718 64731])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64732 64753]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64625 64758])
                            ("getVectorInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64792 64808])
                                    ("Val" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64809 64819])
                                    ("Index" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64853 64868]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64761 64873])
                            ("getMemoryOpCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64904 64920])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64921 64931])
                                    ("Alignment" variable (:type ("MaybeAlign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64932 64953])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64984 65006])
                                    ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65007 65028]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [64876 65033])
                            ("getMaskedMemoryOpCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65070 65086])
                                    ("Src" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65087 65097])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65134 65153])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65190 65212]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [65036 65217])
                            ("getGatherScatterOpCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65255 65271])
                                    ("DataTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65272 65285])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65323 65334])
                                    ("VariableMask" variable (:type "bool") (reparse-symbol arg-sub-list) [65335 65353])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65391 65410]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [65220 65415])
                            ("getInterleavedMemoryOpCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65457 65473])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65474 65486])
                                    ("Factor" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65528 65544])
                                    ("Indices" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("unsigned int" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [65586 65613])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65655 65674])
                                    ("AddressSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65716 65738])
                                    ("UseMaskForCond" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [65780 65807])
                                    ("UseMaskForGaps" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [65850 65877]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [65418 65883])
                            ("getArithmeticReductionCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65925 65941])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65942 65951])
                                    ("IsPairwiseForm" variable (:type "bool") (reparse-symbol arg-sub-list) [65993 66013]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [65886 66018])
                            ("getMinMaxReductionCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66056 66065])
                                    ("CondTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66066 66079])
                                    ("IsPairwiseForm" variable (:type "bool") (reparse-symbol arg-sub-list) [66117 66137])
                                    ("IsUnsigned" variable (:type "bool") (reparse-symbol arg-sub-list) [66138 66154]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [66021 66159])
                            ("getIntrinsicInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66196 66213])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66214 66226])
                                    ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [66249 66270])
                                    ("FMF" variable (:type ("FastMathFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66271 66289])
                                    ("ScalarizationCostPassed" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [66312 66345]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [66162 66350])
                            ("getIntrinsicInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ID" variable (:type ("Intrinsic::ID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66387 66404])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66405 66417])
                                    ("Args" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Value" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [66427 66450])
                                    ("FMF" variable (:type ("FastMathFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66451 66469])
                                    ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [66470 66482]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [66353 66487])
                            ("getCallInstrCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66519 66531])
                                    ("RetTy" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66532 66544])
                                    ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [66576 66597]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [66490 66602])
                            ("getNumberOfParts" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Tp" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66639 66648]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [66605 66653])
                            ("getAddressComputationCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66694 66703])
                                    ("SE" variable
                                       (:pointer 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66704 66724])
                                    ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66765 66781]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [66656 66786])
                            ("getCostOfKeepingLiveOverCall" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Tys" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("Type" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [66835 66856]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [66789 66861])
                            ("getTgtMemIntrinsic" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66896 66916])
                                    ("Info" variable
                                       (:reference 1
                                        :type ("MemIntrinsicInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66951 66974]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [66864 66979])
                            ("getAtomicMemIntrinsicMaxElementSize" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [66982 67047])
                            ("getOrCreateResultFromMemIntrinsic" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67099 67119])
                                    ("ExpectedType" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67171 67190]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [67050 67195])
                            ("getMemcpyLoopLoweringType" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67238 67259])
                                    ("Length" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67260 67274])
                                    ("SrcAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [67317 67335])
                                    ("DestAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [67378 67397]))                                  
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [67198 67408])
                            ("getMemcpyLoopResidualLoweringType" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OpsOut" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Type" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [67465 67497])
                                    ("Context" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67498 67519])
                                    ("RemainingBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [67526 67550])
                                    ("SrcAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [67551 67569])
                                    ("DestAlign" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [67570 67589]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [67411 67600])
                            ("areInlineCompatible" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Caller" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67636 67659])
                                    ("Callee" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67695 67718]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [67603 67729])
                            ("areFunctionArgsABICompatible" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Caller" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67776 67799])
                                    ("Callee" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67800 67823])
                                    ("Args" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Argument" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [67855 67889]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [67732 67900])
                            ("isIndexedLoadLegal" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Mode" variable (:type ("MemIndexedMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67935 67955])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [67956 67965]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [67903 67976])
                            ("isIndexedStoreLegal" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Mode" variable (:type ("MemIndexedMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68012 68032])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68032 68041]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [67979 68052])
                            ("getLoadStoreVecRegBitWidth" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68099 68118]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [68055 68129])
                            ("isLegalToVectorizeLoad" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("LI" variable
                                       (:pointer 1
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68168 68181]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [68132 68192])
                            ("isLegalToVectorizeStore" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("SI" variable
                                       (:pointer 1
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68232 68246]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [68195 68257])
                            ("isLegalToVectorizeLoadChain" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68301 68327])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68371 68390])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68434 68453]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [68260 68464])
                            ("isLegalToVectorizeStoreChain" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68509 68535])
                                    ("Alignment" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68580 68599])
                                    ("AddrSpace" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68644 68663]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [68467 68674])
                            ("getLoadVectorFactor" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68714 68726])
                                    ("LoadSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68727 68745])
                                    ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68785 68811])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68851 68869]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [68677 68880])
                            ("getStoreVectorFactor" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("VF" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68921 68933])
                                    ("StoreSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68934 68953])
                                    ("ChainSizeInBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [68994 69020])
                                    ("VecTy" variable
                                       (:pointer 1
                                        :type ("VectorType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69061 69079]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [68883 69090])
                            ("useReductionIntrinsic" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [69128 69144])
                                    ("Ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69145 69154])
                                    ("" variable (:type ("ReductionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69192 69207]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [69093 69218])
                            ("shouldExpandReduction" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("II" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IntrinsicInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69256 69280]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [69221 69291])
                            ("getGISelRematGlobalCost" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [69294 69347])
                            ("getInstructionLatency" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [69384 69405]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [69350 69410]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [55490 69413])
                    ("TargetTransformInfo::Concept" variable (:type "int") (reparse-symbol namespacesubparts) [69485 90195])
                    ("TargetTransformInfo" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("TargetTransformInfo" type (:type "class") nil nil)
                        :arguments 
                          ( ("Impl" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [90260 90267]))                          
                        :parent "TargetTransformInfo"
                        :constructor-flag t)
                        (reparse-symbol namespacesubparts) [90197 90304])
                    ("TargetIRAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [90985 90992])
                            ("Result" type
                               (:typedef ("TargetTransformInfo" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [90995 91030])
                            ("TargetIRAnalysis" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91185 91204])
                            ("TargetIRAnalysis" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91444 91458])
                                    ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91458 91482])
                                    ("" variable (:type ("TTICallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91484 91496]))                                  
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91427 91497])
                            ("TargetIRAnalysis" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [91580 91608]))                                  
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91563 91648])
                            ("TargetIRAnalysis" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [91668 91687])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91687 91691]))                                  
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91651 91742])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [91773 91801]))                                  
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91745 91860])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [91891 91910])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91910 91914]))                                  
                                :type ("TargetIRAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91863 91984])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [91999 92017])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [92018 92044]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91988 92045])
                            ("private" label nil (reparse-symbol classsubparts) [92047 92055])
                            ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [92058 92101])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [92104 92127])
                            ("TTICallback" variable (:type "int") (reparse-symbol classsubparts) [92770 92782])
                            ("getDefaultTTI" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [92885 92903]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [92857 92904]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [90915 92907])
                    ("TargetTransformInfoWrapperPass" type
                       (:superclasses 
                          ( ("ImmutablePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("TIRA" variable (:type ("TargetIRAnalysis" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93127 93149])
                            ("TTI" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("TargetTransformInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [93152 93186])
                            ("anchor" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [93190 93212])
                            ("public" label nil (reparse-symbol classsubparts) [93214 93221])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [93224 93239])
                            ("TargetTransformInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("TargetTransformInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [93411 93444])
                            ("TargetTransformInfoWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("TIRA" variable (:type ("TargetIRAnalysis" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93488 93510]))                                  
                                :type ("TargetTransformInfoWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [93457 93511])
                            ("getTTI" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [93543 93561]))                                  
                                :type ("TargetTransformInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [93515 93562]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [93063 93565])
                    ("createTargetTransformInfoWrapperPass" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("TIRA" variable (:type ("TargetIRAnalysis" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93770 93792]))                          
                        :type ("ImmutablePass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [93718 93793]))                  
                :type "namespace")
                nil [1384 93796]))          
      :file "TargetTransformInfo.h"
      :pointmax 93827
      :fsize 93826
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((EXPLICIT 93448 . 93456) (punctuation 92768 . 92769) (semantic-list 92750 . 92768) (symbol 92744 . 92750) (punctuation 92743 . 92744) (symbol 92735 . 92743) (punctuation 92734 . 92735) (punctuation 92733 . 92734) (symbol 92730 . 92733) (punctuation 91909 . 91910) (punctuation 91686 . 91687) (punctuation 91482 . 91483) (semantic-list 91464 . 91482) (punctuation 91457 . 91458) (PUBLIC 69478 . 69484) (punctuation 69476 . 69477) (symbol 69470 . 69475) (symbol 69464 . 69469) (punctuation 69463 . 69464) (punctuation 69462 . 69463) (symbol 69443 . 69462) (CLASS 69437 . 69442) (punctuation 69435 . 69436) (symbol 69434 . 69435) (TYPENAME 69425 . 69433) (punctuation 69424 . 69425) (TEMPLATE 69415 . 69423) (punctuation 39733 . 39734) (symbol 39730 . 39733) (punctuation 39701 . 39702) (symbol 39698 . 39701) (punctuation 39733 . 39734) (symbol 39730 . 39733) (punctuation 39701 . 39702) (symbol 39698 . 39701) (ENUM 39670 . 39674) (semantic-list 31497 . 31524) (CONST 31491 . 31496) (semantic-list 31488 . 31490) (BOOL 31484 . 31488) (OPERATOR 31475 . 31483) (semantic-list 31497 . 31524) (CONST 31491 . 31496) (semantic-list 31488 . 31490) (BOOL 31484 . 31488) (OPERATOR 31475 . 31483) (punctuation 4613 . 4614) (punctuation 4552 . 4553) (EXPLICIT 4427 . 4435) (punctuation 2687 . 2688) (DELETE 2681 . 2687) (punctuation 2679 . 2680) (semantic-list 2676 . 2678) (symbol 2660 . 2676) (punctuation 2207 . 2208) (symbol 2198 . 2206) (symbol 2183 . 2197))
      :lexical-table 
        '(("LLVM_ANALYSIS_TARGETTRANSFORMINFO_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f7ef5bbc"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_MEMORYLOCATION_H" variable (:constant-flag t) nil [700 730])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [732 766])
            ("llvm/ADT/Optional.h" include nil nil [767 797])
            ("llvm/IR/Instructions.h" include nil nil [798 831])
            ("llvm/IR/Metadata.h" include nil nil [832 861])
            ("llvm" type
               (:members 
                  ( ("LoadInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [881 896])
                    ("StoreInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [897 913])
                    ("MemTransferInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [914 936])
                    ("MemIntrinsic" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [937 956])
                    ("AtomicMemTransferInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [957 985])
                    ("AtomicMemIntrinsic" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [986 1011])
                    ("AnyMemTransferInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1012 1037])
                    ("AnyMemIntrinsic" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1038 1060])
                    ("TargetLibraryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1061 1085])
                    ("LocationSize" type
                       (:members 
                          ( ("uint64_t" variable (:type "int") (reparse-symbol classsubparts) [2288 2558])
                            ("Value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2562 2577])
                            ("DirectConstruction" type
                               (:members 
                                  ( ("Direct" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2723 2731]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [2697 2732])
                            ("LocationSize" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Raw" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2759 2772])
                                    ("" variable (:type ("DirectConstruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2773 2792]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2736 2807])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ImpreciseBit" variable
                                       (:reference 1
                                        :type ("Unknown" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2825 2848]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2811 2888])
                            ("public" label nil (reparse-symbol classsubparts) [2889 2896])
                            ("LocationSize" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Raw" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3226 3239]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3203 3288])
                            ("precise" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3320 3335]))                                  
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3292 3367])
                            ("upperBound" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3402 3417]))                                  
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3371 3663])
                            ("unknown" function
                               (:typemodifiers ("static")
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3677 3754])
                            ("mapTombstone" function
                               (:typemodifiers ("static")
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3815 3902])
                            ("mapEmpty" function
                               (:typemodifiers ("static")
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3915 3994])
                            ("unionWith" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Other" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4110 4129]))                                  
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4087 4316])
                            ("hasValue" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4320 4370])
                            ("getValue" function
                               (:methodconst-flag t
                                :type ("uint64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4373 4511])
                            ("isPrecise" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4643 4711])
                            ("isZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4783 4844])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4864 4890]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4848 4935])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4955 4981]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4939 5023])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5253 5269]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5242 5276])
                            ("toRaw" function
                               (:methodconst-flag t
                                :type ("uint64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5404 5444]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2258 5447])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5480 5496])
                            ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5497 5515]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5449 5550])
                    ("MemoryLocation" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [6062 6069])
                            ("uint64_t" variable (:type "int") (reparse-symbol classsubparts) [6282 6322])
                            ("Ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6374 6391])
                            ("Size" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6757 6775])
                            ("AATags" variable (:type ("AAMDNodes" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6921 6938])
                            ("get" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("LI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7068 7087]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7042 7088])
                            ("get" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("SI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7117 7137]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7091 7138])
                            ("get" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("VI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("VAArgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7167 7187]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7141 7188])
                            ("get" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("CXI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicCmpXchgInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7217 7246]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7191 7247])
                            ("get" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("RMWI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicRMWInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7276 7302]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7250 7303])
                            ("get" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7332 7356]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7306 7407])
                            ("getOrNone" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Inst" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7452 7476]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("MemoryLocation" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7410 7925])
                            ("getForSource" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MTI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemTransferInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8034 8061]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7999 8062])
                            ("getForSource" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MTI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicMemTransferInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8100 8133]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8065 8134])
                            ("getForSource" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MTI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AnyMemTransferInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8172 8202]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8137 8203])
                            ("getForDest" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemIntrinsic" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8328 8351]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8295 8352])
                            ("getForDest" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AtomicMemIntrinsic" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8388 8417]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8355 8418])
                            ("getForDest" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("AnyMemIntrinsic" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8454 8480]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8421 8481])
                            ("getForArgument" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8592 8613])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8614 8630])
                                    ("TLI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8670 8699]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8555 8700])
                            ("getForArgument" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8740 8761])
                                    ("ArgIdx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8762 8778])
                                    ("TLI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8818 8847]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8703 8900])
                            ("MemoryLocation" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8928 8954])
                                    ("Size" variable
                                       (:default-value "LocationSize::unknown()"
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8982 9025])
                                    ("AATags" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "AAMDNodes()"
                                        :type ("AAMDNodes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9053 9090]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8913 9139])
                            ("getWithNewPtr" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("NewPtr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9172 9192]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9143 9276])
                            ("getWithNewSize" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("NewSize" variable (:type ("LocationSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9310 9331]))                                  
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9280 9417])
                            ("getWithoutAATags" function
                               (:methodconst-flag t
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9421 9546])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9566 9594]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9550 9683]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [6039 9686])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9766 9849])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("LocationSize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9852 9943])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9975 9999]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [9946 10067])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10090 10114])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LocationSize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10115 10139]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10070 10168]))                          
                        :template-specifier 
                          ( ("LocationSize" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [9716 10171])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10225 10413])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("MemoryLocation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10416 10616])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10648 10674]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10619 10870])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10893 10919])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10920 10946]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10873 10975]))                          
                        :template-specifier 
                          ( ("MemoryLocation" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [10173 10978]))                  
                :type "namespace")
                nil [863 10980]))          
      :file "MemoryLocation.h"
      :pointmax 10989
      :fsize 10988
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((EXPLICIT 8904 . 8912) (punctuation 6280 . 6281) (ENUM 6275 . 6279) (symbol 3905 . 3914) (symbol 3805 . 3814) (symbol 3667 . 3676) (string 2849 . 2886) (punctuation 2286 . 2287) (ENUM 2281 . 2285))
      :lexical-table 
        '(("LLVM_ANALYSIS_MEMORYLOCATION_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f7ef5bdc"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_ASSUMPTIONCACHE_H" variable (:constant-flag t) nil [710 741])
            ("llvm/ADT/ArrayRef.h" include nil nil [743 773])
            ("llvm/ADT/DenseMap.h" include nil nil [774 804])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [805 839])
            ("llvm/ADT/SmallVector.h" include nil nil [840 873])
            ("llvm/IR/PassManager.h" include nil nil [874 906])
            ("llvm/IR/ValueHandle.h" include nil nil [907 939])
            ("llvm/Pass.h" include nil nil [940 962])
            ("memory" include (:system-flag t) nil [963 980])
            ("llvm" type
               (:members 
                  ( ("CallInst" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1000 1015])
                    ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1016 1031])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1032 1050])
                    ("Value" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1051 1063])
                    ("AssumptionCache" type
                       (:members 
                          ( ("F" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1643 1655])
                            ("AssumeHandles" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("WeakTrackingVH" type nil nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1741 1786])
                            ("CallbackVH" variable (:type "int") (reparse-symbol classsubparts) [1835 2110])
                            ("AffectedValueCallbackVH" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [2114 2145])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [2302 2413])
                            ("AffectedValues" variable (:type ("AffectedValuesMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2416 2449])
                            ("getOrInsertAffectedValues" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2584 2593]))                                  
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("WeakTrackingVH" type nil nil nil)
                                          ("1"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [2526 2594])
                            ("transferAffectedValuesInCache" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("OV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2710 2720])
                                    ("NV" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2721 2731]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2675 2732])
                            ("Scanned" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [2910 2931])
                            ("scanFunction" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3002 3022])
                            ("public" label nil (reparse-symbol classsubparts) [3024 3031])
                            ("AssumptionCache" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3144 3156]))                                  
                                :type ("AssumptionCache" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3128 3166])
                            ("invalidate" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3280 3291])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3292 3318])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3337 3376]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3264 3400])
                            ("registerAssumption" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CI" variable
                                       (:pointer 1
                                        :type ("CallInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3610 3623]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3586 3624])
                            ("unregisterAssumption" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CI" variable
                                       (:pointer 1
                                        :type ("CallInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3770 3783]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3744 3784])
                            ("updateAffectedValues" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CI" variable
                                       (:pointer 1
                                        :type ("CallInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3955 3968]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3929 3969])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [4104 4198])
                            ("assumptions" function (:type ("MutableArrayRef" type
                                 (:template-specifier 
                                    ( ("WeakTrackingVH" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4580 4697])
                            ("assumptionsFor" function
                               (:arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4810 4825]))                                  
                                :type ("MutableArrayRef" type
                                     (:template-specifier 
                                        ( ("WeakTrackingVH" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4763 5045]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1490 5048])
                    ("AssumptionAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [5314 5359])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5363 5386])
                            ("public" label nil (reparse-symbol classsubparts) [5388 5395])
                            ("Result" variable
                               (:default-value "AssumptionCache"
                                :type "int")
                                (reparse-symbol classsubparts) [5404 5429])
                            ("run" function
                               (:arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5453 5465])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5466 5492]))                                  
                                :type ("AssumptionCache" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5433 5529]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5238 5532])
                    ("AssumptionPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5668 5684])
                            ("public" label nil (reparse-symbol classsubparts) [5686 5693])
                            ("AssumptionPrinterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5727 5743]))                                  
                                :type ("AssumptionPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5705 5755])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5781 5793])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5794 5822]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5759 5823]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5590 5826])
                    ("AssumptionCacheTracker" type
                       (:superclasses 
                          ( ("ImmutablePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("CallbackVH" variable (:type "int") (reparse-symbol classsubparts) [6501 6741])
                            ("FunctionCallbackVH" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [6745 6771])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [6806 6909])
                            ("AssumptionCaches" variable (:type ("FunctionCallsMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6913 6947])
                            ("public" label nil (reparse-symbol classsubparts) [6949 6956])
                            ("getAssumptionCache" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7169 7181]))                                  
                                :type ("AssumptionCache" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7133 7182])
                            ("lookupAssumptionCache" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7340 7352]))                                  
                                :type ("AssumptionCache" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7301 7353])
                            ("AssumptionCacheTracker" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("AssumptionCacheTracker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7357 7382])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [7411 7420])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [7548 7563])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [7655 7670]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [6258 7720]))                  
                :type "namespace")
                nil [982 7723]))          
      :file "AssumptionCache.h"
      :pointmax 7789
      :fsize 7788
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((semantic-list 7606 . 7651) (symbol 7597 . 7605) (semantic-list 7586 . 7596) (symbol 7572 . 7586) (BOOL 7567 . 7571) (semantic-list 7545 . 7547) (symbol 7531 . 7545) (VOID 7526 . 7530) (semantic-list 7454 . 7522) (symbol 7445 . 7453) (semantic-list 7442 . 7444) (symbol 7429 . 7442) (VOID 7424 . 7428) (semantic-list 7408 . 7410) (symbol 7386 . 7408) (punctuation 7385 . 7386) (punctuation 6798 . 6799) (symbol 6781 . 6797) (USING 6775 . 6780) (PUBLIC 6494 . 6500) (punctuation 6492 . 6493) (symbol 6486 . 6491) (symbol 6467 . 6485) (CLASS 6461 . 6466) (EXPLICIT 5696 . 5704) (USING 5398 . 5403) (punctuation 2294 . 2295) (symbol 2276 . 2293) (USING 2270 . 2275) (PUBLIC 1828 . 1834) (punctuation 1826 . 1827) (symbol 1820 . 1825) (symbol 1796 . 1819) (CLASS 1790 . 1795))
      :lexical-table 
        '(("LLVM_ANALYSIS_ASSUMPTIONCACHE_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a1988"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_CALLGRAPH_H" variable (:constant-flag t) nil [2364 2389])
            ("llvm/ADT/GraphTraits.h" include nil nil [2391 2424])
            ("llvm/ADT/STLExtras.h" include nil nil [2425 2456])
            ("llvm/IR/Function.h" include nil nil [2457 2486])
            ("llvm/IR/InstrTypes.h" include nil nil [2487 2518])
            ("llvm/IR/Intrinsics.h" include nil nil [2519 2550])
            ("llvm/IR/PassManager.h" include nil nil [2551 2583])
            ("llvm/IR/ValueHandle.h" include nil nil [2584 2616])
            ("llvm/Pass.h" include nil nil [2617 2639])
            ("cassert" include (:system-flag t) nil [2640 2658])
            ("map" include (:system-flag t) nil [2659 2673])
            ("memory" include (:system-flag t) nil [2674 2691])
            ("utility" include (:system-flag t) nil [2692 2710])
            ("vector" include (:system-flag t) nil [2711 2728])
            ("llvm" type
               (:members 
                  ( ("CallGraphNode" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2748 2768])
                    ("Module" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2769 2782])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2783 2801])
                    ("CallGraph" type
                       (:members 
                          ( ("M" variable (:type ("Module" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3062 3072])
                            ("std::map" variable (:type "int") (reparse-symbol classsubparts) [3104 3163])
                            ("FunctionMap" variable (:type ("FunctionMapTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3219 3245])
                            ("ExternalCallingNode" variable
                               (:pointer 1
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3367 3402])
                            ("CallsExternalNode" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("CallGraphNode" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3518 3567])
                            ("spliceFunction" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3860 3881])
                                    ("To" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3882 3901]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3840 3902])
                            ("addToCallGraph" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4029 4041]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4009 4042])
                            ("public" label nil (reparse-symbol classsubparts) [4044 4051])
                            ("CallGraph" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4073 4083]))                                  
                                :type ("CallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4063 4084])
                            ("CallGraph" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4097 4109])
                                    ("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4109 4113]))                                  
                                :type ("CallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4087 4114])
                            ("CallGraph" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4117 4130])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4145 4161]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4134 4168])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4171 4189])
                            ("FunctionMapTy::iterator" variable (:type "int") (reparse-symbol classsubparts) [4210 4234])
                            ("FunctionMapTy::const_iterator" variable (:type "int") (reparse-symbol classsubparts) [4260 4290])
                            ("getModule" function
                               (:methodconst-flag t
                                :type ("Module" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4350 4389])
                            ("begin" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4393 4448])
                            ("end" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4451 4502])
                            ("begin" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4505 4572])
                            ("end" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4575 4638])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4742 4760]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4703 4912])
                            ("[]" function
                               (:operator-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5010 5028]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4977 5174])
                            ("getExternalCallingNode" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5285 5362])
                            ("getCallsExternalNode" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5366 5451])
                            ("removeFunctionFromModule" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6019 6038]))                                  
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5984 6039])
                            ("getOrInsertFunction" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6194 6212]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6159 6213]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3042 6216])
                    ("CallGraphNode" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [6439 6446])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [6571 6614])
                            ("public" label nil (reparse-symbol classsubparts) [6616 6623])
                            ("std::vector" variable (:type "int") (reparse-symbol classsubparts) [6656 6680])
                            ("CallGraphNode" function
                               (:constructor-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6754 6766]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6733 6776])
                            ("CallGraphNode" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [6890 6986])
                            ("std::vector::iterator" variable (:type "int") (reparse-symbol classsubparts) [7007 7041])
                            ("std::vector::const_iterator" variable (:type "int") (reparse-symbol classsubparts) [7067 7107])
                            ("getFunction" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7176 7219])
                            ("begin" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7223 7282])
                            ("end" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7285 7340])
                            ("begin" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7343 7414])
                            ("end" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7417 7484])
                            ("empty" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type "bool")
                                (reparse-symbol classsubparts) [7487 7548])
                            ("size" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7551 7624])
                            ("getNumReferences" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7748 7807])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :arguments 
                                  ( ("i" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7877 7888]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7851 7997])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [8039 8057])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8071 8087]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8060 8094])
                            ("removeAllCalledFunctions" function (:type "void") (reparse-symbol classsubparts) [8351 8515])
                            ("stealCalledFunctionsFrom" function
                               (:arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8609 8626]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8579 8794])
                            ("addCalledFunction" function
                               (:arguments 
                                  ( ("Call" variable
                                       (:pointer 1
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8888 8903])
                                    ("M" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8904 8921]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8865 9170])
                            ("removeCallEdge" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9194 9205]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9174 9302])
                            ("removeCallEdgeFor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:reference 1
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9478 9493]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9455 9494])
                            ("removeAnyCallEdgeTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Callee" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9723 9745]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9698 9746])
                            ("removeOneAbstractEdgeTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Callee" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9889 9911]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9860 9912])
                            ("replaceCallEdge" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Call" variable
                                       (:reference 1
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10108 10123])
                                    ("NewCall" variable
                                       (:reference 1
                                        :type ("CallBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10124 10142])
                                    ("NewNode" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10166 10189]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10087 10190])
                            ("private" label nil (reparse-symbol classsubparts) [10192 10200])
                            ("CallGraph" friend nil (reparse-symbol classsubparts) [10203 10225])
                            ("F" variable
                               (:pointer 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10230 10242])
                            ("CalledFunctions" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("CallRecord" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10246 10286])
                            ("NumReferences" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10415 10442])
                            ("DropRef" function (:type "void") (reparse-symbol classsubparts) [10446 10481])
                            ("AddRef" function (:type "void") (reparse-symbol classsubparts) [10484 10518])
                            ("allReferencesDropped" function (:type "void") (reparse-symbol classsubparts) [10596 10646]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [6417 10649])
                    ("CallGraphAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [10961 11005])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11009 11032])
                            ("public" label nil (reparse-symbol classsubparts) [11034 11041])
                            ("Result" variable
                               (:default-value "CallGraph"
                                :type "int")
                                (reparse-symbol classsubparts) [11111 11130])
                            ("run" function
                               (:arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11272 11282])
                                    ("" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11283 11307]))                                  
                                :type ("CallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11258 11332]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [10887 11335])
                    ("CallGraphPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11468 11484])
                            ("public" label nil (reparse-symbol classsubparts) [11486 11493])
                            ("CallGraphPrinterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11526 11542]))                                  
                                :type ("CallGraphPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11505 11554])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11580 11590])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("ModuleAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11591 11617]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11558 11618]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [11392 11621])
                    ("CallGraphWrapperPass" type
                       (:superclasses 
                          ( ("ModulePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("G" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("CallGraph" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [12044 12073])
                            ("public" label nil (reparse-symbol classsubparts) [12075 12082])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [12085 12100])
                            ("CallGraphWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("CallGraphWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12154 12177])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [12204 12213])
                            ("getCallGraph" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("CallGraph" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12307 12359])
                            ("getCallGraph" function (:type ("CallGraph" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12362 12402])
                            ("CallGraph::iterator" variable (:type "int") (reparse-symbol classsubparts) [12423 12443])
                            ("CallGraph::const_iterator" variable (:type "int") (reparse-symbol classsubparts) [12469 12495])
                            ("getModule" function
                               (:methodconst-flag t
                                :type ("Module" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12555 12607])
                            ("begin" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12611 12657])
                            ("end" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12660 12702])
                            ("begin" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12705 12763])
                            ("end" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12766 12820])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12924 12942]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12885 12974])
                            ("[]" function
                               (:operator-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13072 13090]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13039 13110])
                            ("getExternalCallingNode" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13221 13312])
                            ("getCallsExternalNode" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13316 13403])
                            ("removeFunctionFromModule" function
                               (:pointer 1
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13971 13990]))                                  
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13936 14041])
                            ("getOrInsertFunction" function
                               (:pointer 1
                                :arguments 
                                  ( ("F" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14196 14214]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14161 14258])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [14447 14462])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [14493 14502])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [14526 14535])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [14582 14597])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [14600 14618]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [11993 14621])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("CallGraphNode::CallRecord" variable (:type "int") (reparse-symbol classsubparts) [15022 15048])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15080 15099]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15052 15115])
                            ("CGNGetValue" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("P" variable (:type ("CGNPairTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15152 15164]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15118 15185])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15327 15337]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15290 15399])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15438 15448]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15403 15508]))                          
                        :template-specifier 
                          ( ("CallGraphNode" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [14917 15511])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("CallGraphNode::CallRecord" variable (:type "int") (reparse-symbol classsubparts) [15630 15656])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallGraphNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15741 15766]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15713 15782])
                            ("CGNGetValue" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("P" variable (:type ("CGNPairTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15825 15837]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15785 15858])
                            ("CallGraphNode::const_iterator" variable (:type "int") (reparse-symbol classsubparts) [15998 16028])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16069 16079]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16032 16141])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16180 16190]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16145 16250])
                            ("child_edge_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16300 16310]))                                  
                                :type ("ChildEdgeIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16254 16339])
                            ("child_edge_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16386 16396]))                                  
                                :type ("ChildEdgeIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16342 16417])
                            ("edge_dest" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("E" variable (:type ("EdgeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16446 16456]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16421 16477]))                          
                        :template-specifier 
                          ( ("CallGraphNode" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15513 16480])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [16589 16654])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16686 16701]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16658 16780])
                            ("CGGetValuePtr" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PairTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16820 16836]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16784 16869])
                            ("nodes_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CG" variable
                                       (:pointer 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17079 17093]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17045 17155])
                            ("nodes_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CG" variable
                                       (:pointer 1
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17191 17205]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17159 17265]))                          
                        :superclasses 
                          ( ("GraphTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("CallGraph" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [16482 17268])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [17434 17499])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CGN" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17531 17552]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17503 17631])
                            ("CGGetValuePtr" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PairTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17677 17693]))                                  
                                :type ("CallGraphNode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17635 17726])
                            ("nodes_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CG" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17942 17962]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17908 18024])
                            ("nodes_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("CG" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CallGraph" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18060 18080]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18028 18140]))                          
                        :superclasses 
                          ( ("GraphTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("CallGraph" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [17270 18143]))                  
                :type "namespace")
                nil [2730 18146]))          
      :file "CallGraph.h"
      :pointmax 18206
      :fsize 18205
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((punctuation 17903 . 17904) (punctuation 17902 . 17903) (semantic-list 17886 . 17902) (symbol 17878 . 17886) (punctuation 17887 . 17888) (punctuation 17876 . 17877) (symbol 17862 . 17876) (punctuation 17861 . 17862) (punctuation 17860 . 17861) (symbol 17851 . 17860) (punctuation 17850 . 17851) (symbol 17835 . 17850) (punctuation 17827 . 17828) (symbol 17812 . 17826) (USING 17806 . 17811) (punctuation 17426 . 17427) (symbol 17419 . 17425) (USING 17413 . 17418) (punctuation 17040 . 17041) (punctuation 17039 . 17040) (semantic-list 17023 . 17039) (symbol 17015 . 17023) (punctuation 17024 . 17025) (punctuation 17013 . 17014) (symbol 17005 . 17013) (punctuation 17004 . 17005) (punctuation 17003 . 17004) (symbol 16994 . 17003) (punctuation 16993 . 16994) (symbol 16978 . 16993) (punctuation 16970 . 16971) (symbol 16955 . 16969) (USING 16949 . 16954) (punctuation 16581 . 16582) (symbol 16574 . 16580) (USING 16568 . 16573) (punctuation 15996 . 15997) (symbol 15974 . 15995) (USING 15968 . 15973) (punctuation 15964 . 15965) (punctuation 15963 . 15964) (semantic-list 15949 . 15963) (symbol 15941 . 15949) (punctuation 15950 . 15951) (punctuation 15939 . 15940) (symbol 15925 . 15939) (punctuation 15924 . 15925) (punctuation 15923 . 15924) (symbol 15910 . 15923) (punctuation 15909 . 15910) (symbol 15894 . 15909) (punctuation 15886 . 15887) (symbol 15868 . 15885) (USING 15862 . 15867) (punctuation 15708 . 15709) (punctuation 15707 . 15708) (symbol 15696 . 15706) (punctuation 15695 . 15696) (punctuation 15694 . 15695) (symbol 15681 . 15694) (CONST 15675 . 15680) (punctuation 15673 . 15674) (symbol 15665 . 15672) (USING 15659 . 15664) (punctuation 15628 . 15629) (symbol 15618 . 15627) (USING 15612 . 15617) (punctuation 15608 . 15609) (punctuation 15607 . 15608) (symbol 15593 . 15606) (CONST 15587 . 15592) (punctuation 15585 . 15586) (symbol 15577 . 15584) (USING 15571 . 15576) (punctuation 15285 . 15286) (punctuation 15284 . 15285) (semantic-list 15270 . 15284) (symbol 15262 . 15270) (punctuation 15271 . 15272) (punctuation 15260 . 15261) (symbol 15252 . 15260) (punctuation 15251 . 15252) (punctuation 15250 . 15251) (symbol 15237 . 15250) (punctuation 15236 . 15237) (symbol 15221 . 15236) (punctuation 15213 . 15214) (symbol 15195 . 15212) (USING 15189 . 15194) (punctuation 15020 . 15021) (symbol 15010 . 15019) (USING 15004 . 15009) (punctuation 15000 . 15001) (punctuation 14999 . 15000) (symbol 14985 . 14998) (punctuation 14983 . 14984) (symbol 14975 . 14982) (USING 14969 . 14974) (semantic-list 14549 . 14581) (symbol 14544 . 14549) (VOID 14539 . 14543) (semantic-list 14523 . 14525) (symbol 14510 . 14523) (VOID 14505 . 14509) (semantic-list 14481 . 14492) (symbol 14470 . 14481) (BOOL 14465 . 14469) (semantic-list 14427 . 14446) (symbol 14411 . 14427) (VOID 14406 . 14410) (punctuation 12467 . 12468) (symbol 12452 . 12466) (USING 12446 . 12451) (punctuation 12421 . 12422) (symbol 12412 . 12420) (USING 12406 . 12411) (semantic-list 12201 . 12203) (symbol 12181 . 12201) (punctuation 12180 . 12181) (EXPLICIT 11496 . 11504) (USING 11105 . 11110) (punctuation 10225 . 10226) (punctuation 7065 . 7066) (symbol 7050 . 7064) (USING 7044 . 7049) (punctuation 7005 . 7006) (symbol 6996 . 7004) (USING 6990 . 6995) (punctuation 6885 . 6886) (DELETE 6879 . 6885) (punctuation 6877 . 6878) (semantic-list 6853 . 6876) (punctuation 6852 . 6853) (OPERATOR 6844 . 6852) (punctuation 6843 . 6844) (symbol 6829 . 6842) (punctuation 6825 . 6826) (DELETE 6819 . 6825) (punctuation 6817 . 6818) (semantic-list 6793 . 6816) (symbol 6780 . 6793) (punctuation 6654 . 6655) (symbol 6632 . 6653) (USING 6626 . 6631) (punctuation 6569 . 6570) (symbol 6558 . 6568) (USING 6552 . 6557) (punctuation 4258 . 4259) (symbol 4243 . 4257) (USING 4237 . 4242) (punctuation 4208 . 4209) (symbol 4199 . 4207) (USING 4193 . 4198) (punctuation 4108 . 4109) (EXPLICIT 4054 . 4062) (punctuation 3096 . 3097) (symbol 3082 . 3095) (USING 3076 . 3081))
      :lexical-table 
        '(("LLVM_ANALYSIS_CALLGRAPH_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a19a8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_MEMORYSSA_H" variable (:constant-flag t) nil [2855 2880])
            ("llvm/ADT/DenseMap.h" include nil nil [2882 2912])
            ("llvm/ADT/GraphTraits.h" include nil nil [2913 2946])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [2947 2980])
            ("llvm/ADT/SmallVector.h" include nil nil [2981 3014])
            ("llvm/ADT/ilist.h" include nil nil [3015 3042])
            ("llvm/ADT/ilist_node.h" include nil nil [3043 3075])
            ("llvm/ADT/iterator.h" include nil nil [3076 3106])
            ("llvm/ADT/iterator_range.h" include nil nil [3107 3143])
            ("llvm/ADT/simple_ilist.h" include nil nil [3144 3178])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [3179 3219])
            ("llvm/Analysis/MemoryLocation.h" include nil nil [3220 3261])
            ("llvm/Analysis/PHITransAddr.h" include nil nil [3262 3301])
            ("llvm/IR/BasicBlock.h" include nil nil [3302 3333])
            ("llvm/IR/DerivedUser.h" include nil nil [3334 3366])
            ("llvm/IR/Dominators.h" include nil nil [3367 3398])
            ("llvm/IR/Module.h" include nil nil [3399 3426])
            ("llvm/IR/Type.h" include nil nil [3427 3452])
            ("llvm/IR/Use.h" include nil nil [3453 3477])
            ("llvm/IR/User.h" include nil nil [3478 3503])
            ("llvm/IR/Value.h" include nil nil [3504 3530])
            ("llvm/IR/ValueHandle.h" include nil nil [3531 3563])
            ("llvm/Pass.h" include nil nil [3564 3586])
            ("llvm/Support/Casting.h" include nil nil [3587 3620])
            ("llvm/Support/CommandLine.h" include nil nil [3621 3658])
            ("algorithm" include (:system-flag t) nil [3659 3679])
            ("cassert" include (:system-flag t) nil [3680 3698])
            ("cstddef" include (:system-flag t) nil [3699 3717])
            ("iterator" include (:system-flag t) nil [3718 3737])
            ("memory" include (:system-flag t) nil [3738 3755])
            ("utility" include (:system-flag t) nil [3756 3774])
            ("llvm" type
               (:members 
                  ( ("EnableMSSALoopDependency" variable
                       (:typemodifiers ("extern")
                        :type ("cl::opt" type
                             (:template-specifier 
                                ( ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3850 3896])
                    ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3898 3913])
                    ("Instruction" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3914 3932])
                    ("MemoryAccess" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3933 3952])
                    ("MemorySSAWalker" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3953 3975])
                    ("LLVMContext" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3976 3994])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3995 4013])
                    ("MSSAHelpers" type
                       (:members 
                          ( ("AllAccessTag" type (:type "struct") (reparse-symbol namespacesubparts) [4040 4063])
                            ("DefsOnlyTag" type (:type "struct") (reparse-symbol namespacesubparts) [4064 4086]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [4015 4089])
                    ("memoryaccess_def_iterator_base" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [4258 4314])
                    ("memoryaccess_def_iterator_base" variable (:type "int") (reparse-symbol namespacesubparts) [4349 4394])
                    ("memoryaccess_def_iterator_base" variable (:type "int") (reparse-symbol namespacesubparts) [4439 4490])
                    ("MemoryAccess" type
                       (:superclasses 
                          ( ("DerivedUser" type
                               (:protection "public"
                                :type "class")
                                nil nil)
                            ("ilist_node" type
                               (:protection "public"
                                :type "class")
                                nil nil)
                            ("ilist_node" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [4807 4814])
                            ("ilist_node" variable (:type "int") (reparse-symbol classsubparts) [4845 4908])
                            ("ilist_node" variable (:type "int") (reparse-symbol classsubparts) [4938 5000])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5245 5260]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5225 5376])
                            ("getBlock" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5380 5426])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5441 5457]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5430 5464])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [5467 5485])
                            ("iterator" variable
                               (:default-value "user_iterator"
                                :type "int")
                                (reparse-symbol classsubparts) [5540 5565])
                            ("const_iterator" variable
                               (:default-value "const_user_iterator"
                                :type "int")
                                (reparse-symbol classsubparts) [5574 5611])
                            ("defs_begin" function
                               (:prototype-flag t
                                :type ("memoryaccess_def_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5799 5838])
                            ("defs_begin" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("const_memoryaccess_def_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5841 5892])
                            ("defs_end" function
                               (:prototype-flag t
                                :type ("memoryaccess_def_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5895 5932])
                            ("defs_end" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("const_memoryaccess_def_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5935 5984])
                            ("getIterator" function (:type ("AllAccessType::self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6100 6195])
                            ("getIterator" function
                               (:methodconst-flag t
                                :type ("AllAccessType::const_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6198 6305])
                            ("getReverseIterator" function (:type ("AllAccessType::reverse_self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6308 6425])
                            ("getReverseIterator" function
                               (:methodconst-flag t
                                :type ("AllAccessType::const_reverse_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6428 6557])
                            ("getDefsIterator" function (:type ("DefsOnlyType::self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6560 6657])
                            ("getDefsIterator" function
                               (:methodconst-flag t
                                :type ("DefsOnlyType::const_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6660 6769])
                            ("getReverseDefsIterator" function (:type ("DefsOnlyType::reverse_self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6772 6891])
                            ("getReverseDefsIterator" function
                               (:methodconst-flag t
                                :type ("DefsOnlyType::const_reverse_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6894 7025])
                            ("protected" label nil (reparse-symbol classsubparts) [7027 7037])
                            ("MemoryDef" friend nil (reparse-symbol classsubparts) [7040 7062])
                            ("MemoryPhi" friend nil (reparse-symbol classsubparts) [7066 7088])
                            ("MemorySSA" friend nil (reparse-symbol classsubparts) [7092 7114])
                            ("MemoryUse" friend nil (reparse-symbol classsubparts) [7118 7140])
                            ("MemoryUseOrDef" friend nil (reparse-symbol classsubparts) [7144 7171])
                            ("setBlock" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7276 7291]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7262 7307])
                            ("getID" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("inline")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7449 7479])
                            ("MemoryAccess" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("C" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7496 7511])
                                    ("Vty" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7512 7525])
                                    ("DeleteValue" variable (:type ("DeleteValueTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7526 7552])
                                    ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7568 7583])
                                    ("NumOperands" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7584 7605]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7483 7707])
                            ("private" label nil (reparse-symbol classsubparts) [7796 7804])
                            ("Block" variable
                               (:pointer 1
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7807 7825]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4608 7828])
                    ("ilist_alloc_traits" type
                       (:type "struct"
                        :members 
                          ( ("deleteNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7909 7926]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7886 7949]))                          
                        :template-specifier 
                          ( ("MemoryAccess" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [7830 7952])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7985 8001])
                            ("MA" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8002 8025]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7954 8058])
                    ("MemoryUseOrDef" type
                       (:superclasses 
                          ( ("MemoryAccess" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [8466 8473])
                            ("DECLARE_TRANSPARENT_OPERAND_ACCESSORS" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("MemoryAccess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8554 8567]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8516 8568])
                            ("getMemoryInst" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Instruction" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8630 8694])
                            ("getDefiningAccess" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8768 8833])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8857 8873]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8837 8960])
                            ("isOptimized" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("inline")
                                :type "bool")
                                (reparse-symbol classsubparts) [9055 9087])
                            ("getOptimized" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9090 9132])
                            ("setOptimized" function
                               (:prototype-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9160 9175]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9135 9176])
                            ("getOptimizedAccessType" function
                               (:methodconst-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("AliasResult" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [9325 9416])
                            ("resetOptimized" function
                               (:prototype-flag t
                                :typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol classsubparts) [9590 9619])
                            ("protected" label nil (reparse-symbol classsubparts) [9621 9631])
                            ("MemorySSA" friend nil (reparse-symbol classsubparts) [9634 9656])
                            ("MemorySSAUpdater" friend nil (reparse-symbol classsubparts) [9660 9689])
                            ("MemoryUseOrDef" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("C" variable
                                       (:reference 1
                                        :type ("LLVMContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9709 9724])
                                    ("DMA" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9725 9743])
                                    ("Vty" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9744 9757])
                                    ("DeleteValue" variable (:type ("DeleteValueTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9775 9801])
                                    ("MI" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9802 9818])
                                    ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9819 9834])
                                    ("NumOperands" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9852 9873]))                                  
                                :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9694 10029])
                            ("setOptimizedAccessType" function
                               (:arguments 
                                  ( ("AR" variable (:type ("Optional" type
                                         (:template-specifier 
                                            ( ("AliasResult" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [10152 10177]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10124 10214])
                            ("setDefiningAccess" function
                               (:arguments 
                                  ( ("DMA" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10241 10259])
                                    ("Optimized" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [10260 10282])
                                    ("AR" variable
                                       (:default-value "MayAlias"
                                        :type ("Optional" type
                                             (:template-specifier 
                                                ( ("AliasResult" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10309 10344]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10218 10474])
                            ("private" label nil (reparse-symbol classsubparts) [10476 10484])
                            ("MemoryInstruction" variable
                               (:pointer 1
                                :type ("Instruction" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10487 10518])
                            ("OptimizedAccessAlias" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("AliasResult" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10521 10564]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8421 10567])
                    ("MemoryUseOrDef" variable (:type "int") (reparse-symbol namespacesubparts) [10828 11848])
                    ("OperandTraits" type
                       (:type "struct"
                        :superclasses 
                          ( ("FixedNumOperandTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("MemoryUse" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [11850 11942])
                    ("MemoryUseOrDef" variable (:type "int") (reparse-symbol namespacesubparts) [12494 13646])
                    ("OperandTraits" type
                       (:type "struct"
                        :superclasses 
                          ( ("FixedNumOperandTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("MemoryDef" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [13648 13740])
                    ("OperandTraits" type
                       (:type "struct"
                        :members 
                          ( ("op_begin" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MUD" variable
                                       (:pointer 1
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13878 13898]))                                  
                                :type ("Use" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13857 14071])
                            ("op_end" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MUD" variable
                                       (:pointer 1
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14094 14114]))                                  
                                :type ("Use" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14075 14283])
                            ("operands" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("MUD" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14312 14338]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [14287 14517]))                          
                        :template-specifier 
                          ( ("MemoryUseOrDef" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [13804 14520])
                    ("MemoryAccess" variable (:type "int") (reparse-symbol namespacesubparts) [15711 22083])
                    ("getID" function
                       (:methodconst-flag t
                        :parent "MemoryAccess"
                        :typemodifiers ("inline")
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [22085 22354])
                    ("isOptimized" function
                       (:methodconst-flag t
                        :parent "MemoryUseOrDef"
                        :typemodifiers ("inline")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [22356 22534])
                    ("getOptimized" function
                       (:methodconst-flag t
                        :pointer 1
                        :parent "MemoryUseOrDef"
                        :typemodifiers ("inline")
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22536 22726])
                    ("setOptimized" function
                       (:parent "MemoryUseOrDef"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("MA" variable
                               (:pointer 1
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22769 22786]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [22728 22912])
                    ("resetOptimized" function
                       (:parent "MemoryUseOrDef"
                        :typemodifiers ("inline")
                        :type "void")
                        (reparse-symbol namespacesubparts) [22914 23084])
                    ("OperandTraits" type
                       (:type "struct"
                        :superclasses 
                          ( ("HungoffOperandTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("MemoryPhi" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [23086 23166])
                    ("MemorySSA" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [23332 23339])
                            ("MemorySSA" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23352 23363])
                                    ("" variable
                                       (:pointer 1
                                        :type ("AliasAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23364 23380])
                                    ("" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23381 23397]))                                  
                                :type ("MemorySSA" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23342 23398])
                            ("MemorySSA" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [23536 23549])
                            ("getWalker" function
                               (:prototype-flag t
                                :pointer 1
                                :type ("MemorySSAWalker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23553 23582])
                            ("getSkipSelfWalker" function
                               (:prototype-flag t
                                :pointer 1
                                :type ("MemorySSAWalker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23585 23622])
                            ("getMemoryAccess" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23904 23925]))                                  
                                :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23872 24009])
                            ("getMemoryAccess" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24040 24061]))                                  
                                :type ("MemoryPhi" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24013 24154])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [24158 24176])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24190 24204]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24179 24211])
                            ("isLiveOnEntryDef" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24680 24703]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [24651 24754])
                            ("getLiveOnEntryDef" function
                               (:methodconst-flag t
                                :pointer 1
                                :typemodifiers ("inline")
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24758 24843])
                            ("iplist" variable (:type "int") (reparse-symbol classsubparts) [25193 25252])
                            ("simple_ilist" variable (:type "int") (reparse-symbol classsubparts) [25278 25342])
                            ("getBlockAccesses" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25499 25520]))                                  
                                :type ("AccessList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25464 25573])
                            ("getBlockDefs" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25743 25764]))                                  
                                :type ("DefsList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25714 25813])
                            ("locallyDominates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25967 25989])
                                    ("B" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25990 26012]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [25945 26019])
                            ("dominates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26174 26196])
                                    ("B" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26197 26219]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26159 26226])
                            ("dominates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26345 26367])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Use" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26368 26381]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26330 26388])
                            ("verifyMemorySSA" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [26543 26572])
                            ("InsertionPlace" type
                               (:members 
                                  ( ("Beginning" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [26719 26729])
                                    ("End" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [26730 26734])
                                    ("BeforeTerminator" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [26735 26753]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [26697 26754])
                            ("protected" label nil (reparse-symbol classsubparts) [26756 26766])
                            ("MemorySSAAnnotatedWriter" friend nil (reparse-symbol classsubparts) [26830 26867])
                            ("MemorySSAPrinterLegacyPass" friend nil (reparse-symbol classsubparts) [26871 26910])
                            ("MemorySSAUpdater" friend nil (reparse-symbol classsubparts) [26914 26943])
                            ("verifyOrderingDominationAndDefUses" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26988 27000]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26948 27007])
                            ("verifyDominationNumbers" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27039 27057]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27010 27064])
                            ("verifyPrevDefInPhis" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27092 27104]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27067 27111])
                            ("getWritableBlockAccesses" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27204 27225]))                                  
                                :type ("AccessList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27167 27348])
                            ("getWritableBlockDefs" function
                               (:methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27435 27456]))                                  
                                :type ("DefsList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27404 27571])
                            ("moveTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("What" variable
                                       (:pointer 1
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27810 27831])
                                    ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27832 27847])
                                    ("Where" variable (:type ("AccessList::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27848 27875]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27798 27876])
                            ("moveTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("What" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27891 27910])
                                    ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27911 27926])
                                    ("Point" variable (:type ("InsertionPlace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27927 27948]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27879 27949])
                            ("renamePass" function
                               (:arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28021 28036])
                                    ("IncomingVal" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28037 28063])
                                    ("Visited" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("BasicBlock" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [28082 28121]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28005 28194])
                            ("removeFromLookups" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28221 28236]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28198 28237])
                            ("removeFromLists" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28261 28276])
                                    ("ShouldDelete" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [28277 28301]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28240 28303])
                            ("insertIntoListsForBlock" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28335 28350])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28351 28370])
                                    ("" variable (:type ("InsertionPlace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28402 28417]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28306 28418])
                            ("insertIntoListsBefore" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28448 28463])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28464 28483])
                                    ("" variable (:type ("AccessList::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28513 28534]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28421 28535])
                            ("createDefinedAccess" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28574 28588])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28589 28604])
                                    ("Template" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28643 28683])
                                    ("CreationMustSucceed" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [28723 28754]))                                  
                                :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28538 28756])
                            ("private" label nil (reparse-symbol classsubparts) [28758 28766])
                            ("ClobberWalkerBase" type
                               (:template 
                                  ( ("AliasAnalysisType" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [28769 28828])
                            ("CachingWalker" type
                               (:template 
                                  ( ("AliasAnalysisType" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [28831 28886])
                            ("SkipSelfWalker" type
                               (:template 
                                  ( ("AliasAnalysisType" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [28889 28945])
                            ("OptimizeUses" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol classsubparts) [28948 28967])
                            ("getWalkerImpl" function
                               (:prototype-flag t
                                :pointer 1
                                :type ("CachingWalker" type
                                     (:template-specifier 
                                        ( ("AliasAnalysis" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [28971 29017])
                            ("buildMemorySSA" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BAA" variable
                                       (:reference 1
                                        :type ("BatchAAResults" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29040 29060]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29020 29061])
                            ("optimizeUses" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [29064 29084])
                            ("prepareForMoveTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29110 29125])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29126 29139]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29088 29140])
                            ("verifyUseInDefs" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29164 29179])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29180 29195]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29143 29202])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [29224 29282])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [29301 29357])
                            ("determineInsertionPoint" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DefiningBlocks" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("BasicBlock" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [29392 29444]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29361 29445])
                            ("markUnreachableAsLiveOnEntry" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29482 29497]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29448 29498])
                            ("dominatesUse" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29519 29540])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29541 29562]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29501 29569])
                            ("createMemoryPhi" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29599 29614]))                                  
                                :type ("MemoryPhi" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29572 29615])
                            ("createNewAccess" function
                               (:template 
                                  ( ("AliasAnalysisType" type (:type "class") nil nil))                                  
                                :type ("MemoryUseOrDef" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29690 29704])
                                    ("" variable
                                       (:pointer 1
                                        :type ("AliasAnalysisType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29705 29725])
                                    ("Template" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29760 29800]))                                  
                                :pointer 1
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [29618 29802])
                            ("findDominatingDef" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29837 29850])
                                    ("" variable (:type ("InsertionPlace" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [29851 29871]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29805 29872])
                            ("placePHINodes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("BasicBlock" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [29894 29932]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29875 29933])
                            ("renameBlock" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29962 29975])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29976 29991])
                                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [29992 29997]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29936 29998])
                            ("renameSuccessorPhis" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30026 30039])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30040 30055])
                                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [30056 30061]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30001 30062])
                            ("renamePass" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("DomTreeNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30081 30095])
                                    ("IncomingVal" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30096 30122])
                                    ("Visited" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("BasicBlock" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30141 30180])
                                    ("SkipVisited" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [30199 30223])
                                    ("RenameAllUses" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [30225 30251]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30065 30253])
                            ("getOrCreateAccessList" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30290 30309]))                                  
                                :type ("AccessList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30256 30310])
                            ("getOrCreateDefsList" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30343 30362]))                                  
                                :type ("DefsList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30313 30363])
                            ("renumberBlock" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30385 30404]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30366 30411])
                            ("AA" variable
                               (:pointer 1
                                :type ("AliasAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30414 30432])
                            ("DT" variable
                               (:pointer 1
                                :type ("DominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30435 30453])
                            ("F" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30456 30468])
                            ("ValueToMemoryAccess" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("MemoryAccess" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [30497 30557])
                            ("PerBlockAccesses" variable (:type ("AccessMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30920 30947])
                            ("PerBlockDefs" variable (:type ("DefsMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30950 30971])
                            ("LiveOnEntryDef" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("MemoryAccess" type nil nil nil)
                                      ("ValueDeleter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [30974 31033])
                            ("BlockNumberingValid" variable
                               (:typemodifiers ("mutable")
                                :type ("SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("BasicBlock" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("16"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [31148 31212])
                            ("BlockNumbering" variable
                               (:typemodifiers ("mutable")
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("MemoryAccess" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("unsigned long" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [31215 31284])
                            ("WalkerBase" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("ClobberWalkerBase" type (:template-specifier 
                                        ( ("AliasAnalysis" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [31318 31379])
                            ("Walker" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("CachingWalker" type (:template-specifier 
                                        ( ("AliasAnalysis" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [31382 31435])
                            ("SkipWalker" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("SkipSelfWalker" type (:template-specifier 
                                        ( ("AliasAnalysis" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [31438 31496])
                            ("NextID" variable (:type "unsigned int") (reparse-symbol classsubparts) [31499 31515]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [23314 31518])
                    ("MemorySSAUtil" type
                       (:members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [31612 31622])
                            ("GVNHoist" friend nil (reparse-symbol classsubparts) [31625 31646])
                            ("MemorySSAWalker" friend nil (reparse-symbol classsubparts) [31650 31678])
                            ("defClobbersUseOrDef" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("MD" variable
                                       (:pointer 1
                                        :type ("MemoryDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31768 31782])
                                    ("MU" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31783 31808])
                                    ("AA" variable
                                       (:reference 1
                                        :type ("AliasAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31843 31861]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [31736 31862]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [31590 31865])
                    ("MemorySSAPrinterLegacyPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [32066 32073])
                            ("MemorySSAPrinterLegacyPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("MemorySSAPrinterLegacyPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32076 32105])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [32140 32149])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [32193 32208])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [32212 32227]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [32009 32230])
                    ("MemorySSAAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [32369 32413])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32417 32440])
                            ("public" label nil (reparse-symbol classsubparts) [32442 32449])
                            ("Result" type
                               (:members 
                                  ( ("Result" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("std::unique_ptr" type
                                                     (:template-specifier 
                                                        ( ("MemorySSA" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [32688 32717])
                                            ("" variable (:type ("MSSA" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32717 32722]))                                          
                                        :type ("Result" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [32681 32749])
                                    ("getMSSA" function (:type ("MemorySSA" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32755 32799])
                                    ("MSSA" variable (:type ("std::unique_ptr" type
                                         (:template-specifier 
                                            ( ("MemorySSA" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [32805 32837])
                                    ("invalidate" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("F" variable
                                               (:reference 1
                                                :type ("Function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [32859 32871])
                                            ("PA" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [32872 32900])
                                            ("Inv" variable
                                               (:reference 1
                                                :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [32921 32963]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [32843 32964]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [32661 32969])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32984 32996])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32997 33025]))                                  
                                :type ("Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32973 33026]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [32295 33029])
                    ("MemorySSAPrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33142 33158])
                            ("public" label nil (reparse-symbol classsubparts) [33160 33167])
                            ("MemorySSAPrinterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33200 33216]))                                  
                                :type ("MemorySSAPrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33179 33228])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33254 33266])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33267 33295]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33232 33296]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [33066 33299])
                    ("MemorySSAVerifierPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33431 33443])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33444 33472]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33409 33473]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [33337 33476])
                    ("MemorySSAWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [33583 33590])
                            ("MemorySSAWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("MemorySSAWrapperPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33593 33616])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [33620 33635])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [33670 33679])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [33703 33712])
                            ("getMSSA" function (:type ("MemorySSA" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33715 33753])
                            ("getMSSA" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("MemorySSA" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33756 33806])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [33851 33866])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [33892 33907])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [33965 33980])
                            ("private" label nil (reparse-symbol classsubparts) [33982 33990])
                            ("MSSA" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("MemorySSA" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [33993 34025]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [33532 34028])
                    ("MemorySSAWalker" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [34795 34802])
                            ("MemorySSAWalker" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemorySSA" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34821 34833]))                                  
                                :type ("MemorySSAWalker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34805 34834])
                            ("SmallVector" variable (:type "int") (reparse-symbol classsubparts) [34902 34933])
                            ("getClobberingMemoryAccess" function
                               (:pointer 1
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35826 35847]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35786 36021])
                            ("getClobberingMemoryAccess" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36209 36224]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36161 36229])
                            ("getClobberingMemoryAccess" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37002 37017])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryLocation" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37068 37091]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36954 37096])
                            ("invalidateInfo" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37416 37431]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [37388 37434])
                            ("protected" label nil (reparse-symbol classsubparts) [37436 37446])
                            ("MemorySSA" friend nil (reparse-symbol classsubparts) [37449 37471])
                            ("MSSA" variable
                               (:pointer 1
                                :type ("MemorySSA" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37564 37580]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [34771 37583])
                    ("MemorySSAWalker" variable (:type "int") (reparse-symbol namespacesubparts) [37772 38157])
                    ("std::pair" variable (:type "int") (reparse-symbol namespacesubparts) [38184 38226])
                    ("std::pair" variable (:type "int") (reparse-symbol namespacesubparts) [38257 38305])
                    ("memoryaccess_def_iterator_base" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("memoryaccess_def_iterator_base::iterator_facade_base" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [38691 38753])
                            ("public" label nil (reparse-symbol classsubparts) [38755 38762])
                            ("memoryaccess_def_iterator_base" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38796 38805]))                                  
                                :type ("memoryaccess_def_iterator_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38765 38824])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("memoryaccess_def_iterator_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38890 38934]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [38874 39018])
                            ("getPhiArgBlock" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39434 39641])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :typemodifiers ("typename")
                                :type ("BaseT::iterator::pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39645 40029])
                            ("++" function
                               (:operator-flag t
                                :type ("memoryaccess_def_iterator_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40060 40381])
                            ("private" label nil (reparse-symbol classsubparts) [40383 40391])
                            ("Access" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40394 40414])
                            ("ArgNo" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [40417 40436]))                          
                        :superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [38429 40439])
                    ("defs_begin" function
                       (:parent "MemoryAccess"
                        :typemodifiers ("inline")
                        :type ("memoryaccess_def_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [40441 40546])
                    ("defs_begin" function
                       (:methodconst-flag t
                        :parent "MemoryAccess"
                        :typemodifiers ("inline")
                        :type ("const_memoryaccess_def_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [40548 40671])
                    ("defs_end" function
                       (:parent "MemoryAccess"
                        :typemodifiers ("inline")
                        :type ("memoryaccess_def_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [40673 40772])
                    ("defs_end" function
                       (:methodconst-flag t
                        :parent "MemoryAccess"
                        :typemodifiers ("inline")
                        :type ("const_memoryaccess_def_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [40774 40891])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("ChildIteratorType" variable
                               (:default-value "memoryaccess_def_iterator"
                                :type "int")
                                (reparse-symbol classsubparts) [41091 41137])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41169 41179]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41141 41193])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41233 41243]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41196 41271])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41309 41319]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41274 41345]))                          
                        :template-specifier 
                          ( ("MemoryAccess" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [41000 41348])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("MemoryAccess::iterator" variable (:type "int") (reparse-symbol classsubparts) [41470 41493])
                            ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41525 41535]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41497 41549])
                            ("child_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41589 41599]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41552 41627])
                            ("child_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41665 41675]))                                  
                                :type ("ChildIteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41630 41701]))                          
                        :template-specifier 
                          ( ("Inverse" type (:template-specifier 
                              ( ("MemoryAccess" type (:pointer 1) nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [41350 41704])
                    ("upward_defs_iterator" type
                       (:superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("upward_defs_iterator::iterator_facade_base" variable (:type "int") (reparse-symbol classsubparts) [42401 42444])
                            ("public" label nil (reparse-symbol classsubparts) [42446 42453])
                            ("upward_defs_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MemoryAccessPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42477 42506]))                                  
                                :type ("upward_defs_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42456 42721])
                            ("upward_defs_iterator" function
                               (:constructor-flag t
                                :type ("upward_defs_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42725 42780])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("upward_defs_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42800 42834]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42784 42891])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("BaseT::iterator::reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42895 43085])
                            ("++" function
                               (:operator-flag t
                                :type ("upward_defs_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [43116 43387])
                            ("getPhiArgBlock" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [43391 43466])
                            ("private" label nil (reparse-symbol classsubparts) [43468 43476])
                            ("fillInCurrentPair" function (:type "void") (reparse-symbol classsubparts) [43479 44132])
                            ("CurrentPair" variable (:type ("MemoryAccessPair" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44136 44165])
                            ("DefIterator" variable (:type ("memoryaccess_def_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44168 44206])
                            ("Location" variable (:type ("MemoryLocation" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44209 44233])
                            ("OriginalAccess" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44236 44275])
                            ("WalkingPhi" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [44278 44302]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [42181 44305])
                    ("upward_defs_begin" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Pair" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemoryAccessPair" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [44353 44382]))                          
                        :type ("upward_defs_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [44307 44423])
                    ("upward_defs_end" function
                       (:typemodifiers ("inline")
                        :type ("upward_defs_iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [44425 44505])
                    ("upward_defs" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Pair" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemoryAccessPair" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [44563 44592]))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("upward_defs_iterator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [44507 44661])
                    ("def_chain_iterator" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("bool" type (:typevar "UseOptimizedChain") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("def_chain_iterator" function
                               (:constructor-flag t
                                :type ("def_chain_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [45673 45710])
                            ("def_chain_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("MA" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45732 45737]))                                  
                                :type ("def_chain_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [45713 45749])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45753 45787])
                            ("++" function
                               (:operator-flag t
                                :type ("def_chain_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45791 46126])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("O" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("def_chain_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46146 46174]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [46130 46203])
                            ("private" label nil (reparse-symbol classsubparts) [46205 46213])
                            ("MA" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46216 46221]))                          
                        :superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [45439 46224])
                    ("def_chain" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("def_chain_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("MA" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46300 46305])
                            ("UpTo" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46306 46334]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [46226 46565])
                    ("optimized_def_chain" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("def_chain_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("true" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("MA" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46657 46662]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [46567 46778]))                  
                :type "namespace")
                nil [3776 46781]))          
      :file "MemorySSA.h"
      :pointmax 46841
      :fsize 46840
      :lastmodtime '(24055 16144 0 0)
      :unmatched-syntax '((punctuation 43112 . 43113) (punctuation 43111 . 43112) (punctuation 43110 . 43111) (OPERATOR 43102 . 43110) (punctuation 43101 . 43102) (punctuation 43100 . 43101) (symbol 43095 . 43100) (USING 43089 . 43094) (punctuation 42399 . 42400) (symbol 42393 . 42398) (USING 42387 . 42392) (punctuation 41468 . 41469) (symbol 41450 . 41467) (USING 41444 . 41449) (punctuation 41440 . 41441) (punctuation 41439 . 41440) (symbol 41426 . 41438) (punctuation 41424 . 41425) (symbol 41416 . 41423) (USING 41410 . 41415) (USING 41085 . 41090) (punctuation 41081 . 41082) (punctuation 41080 . 41081) (symbol 41067 . 41079) (punctuation 41065 . 41066) (symbol 41057 . 41064) (USING 41051 . 41056) (punctuation 40056 . 40057) (punctuation 40055 . 40056) (punctuation 40054 . 40055) (OPERATOR 40046 . 40054) (punctuation 40045 . 40046) (punctuation 40044 . 40045) (symbol 40039 . 40044) (USING 40033 . 40038) (punctuation 38869 . 38870) (DEFAULT 38862 . 38869) (punctuation 38860 . 38861) (semantic-list 38857 . 38859) (symbol 38827 . 38857) (punctuation 38689 . 38690) (symbol 38683 . 38688) (USING 38677 . 38682) (punctuation 38255 . 38256) (symbol 38233 . 38254) (USING 38227 . 38232) (punctuation 38182 . 38183) (symbol 38165 . 38181) (USING 38159 . 38164) (PUBLIC 37765 . 37771) (punctuation 37763 . 37764) (symbol 37757 . 37762) (symbol 37732 . 37756) (CLASS 37726 . 37731) (punctuation 37471 . 37472) (punctuation 34900 . 34901) (symbol 34884 . 34899) (USING 34878 . 34883) (punctuation 34873 . 34874) (DEFAULT 34866 . 34873) (punctuation 34864 . 34865) (semantic-list 34861 . 34863) (symbol 34846 . 34861) (punctuation 34845 . 34846) (VIRTUAL 34837 . 34844) (semantic-list 33920 . 33964) (symbol 33915 . 33920) (VOID 33910 . 33914) (semantic-list 33889 . 33891) (symbol 33875 . 33889) (VOID 33870 . 33874) (semantic-list 33831 . 33850) (symbol 33815 . 33831) (VOID 33810 . 33814) (semantic-list 33700 . 33702) (symbol 33687 . 33700) (VOID 33682 . 33686) (semantic-list 33657 . 33669) (symbol 33644 . 33657) (BOOL 33639 . 33643) (EXPLICIT 33170 . 33178) (punctuation 32716 . 32717) (punctuation 32716 . 32717) (semantic-list 32173 . 32192) (symbol 32157 . 32173) (VOID 32152 . 32156) (semantic-list 32127 . 32139) (symbol 32114 . 32127) (BOOL 32109 . 32113) (punctuation 31678 . 31679) (punctuation 31646 . 31647) (punctuation 29299 . 29300) (symbol 29291 . 29298) (USING 29285 . 29290) (punctuation 29222 . 29223) (symbol 29212 . 29221) (USING 29206 . 29211) (punctuation 26943 . 26944) (punctuation 26910 . 26911) (punctuation 26867 . 26868) (punctuation 25270 . 25271) (symbol 25261 . 25269) (USING 25255 . 25260) (punctuation 25191 . 25192) (symbol 25180 . 25190) (USING 25174 . 25179) (punctuation 23531 . 23532) (DELETE 23525 . 23531) (punctuation 23523 . 23524) (semantic-list 23508 . 23522) (symbol 23499 . 23508) (punctuation 23520 . 23521) (semantic-list 23203 . 23228) (symbol 23167 . 23203) (punctuation 29299 . 29300) (symbol 29291 . 29298) (USING 29285 . 29290) (punctuation 29222 . 29223) (symbol 29212 . 29221) (USING 29206 . 29211) (punctuation 26943 . 26944) (punctuation 26910 . 26911) (punctuation 26867 . 26868) (punctuation 25270 . 25271) (symbol 25261 . 25269) (USING 25255 . 25260) (punctuation 25191 . 25192) (symbol 25180 . 25190) (USING 25174 . 25179) (punctuation 23531 . 23532) (DELETE 23525 . 23531) (punctuation 23523 . 23524) (semantic-list 23508 . 23522) (symbol 23499 . 23508) (punctuation 23520 . 23521) (punctuation 29299 . 29300) (symbol 29291 . 29298) (USING 29285 . 29290) (punctuation 29222 . 29223) (symbol 29212 . 29221) (USING 29206 . 29211) (punctuation 26943 . 26944) (punctuation 26910 . 26911) (punctuation 26867 . 26868) (punctuation 25270 . 25271) (symbol 25261 . 25269) (USING 25255 . 25260) (punctuation 25191 . 25192) (symbol 25180 . 25190) (USING 25174 . 25179) (punctuation 23531 . 23532) (DELETE 23525 . 23531) (punctuation 23523 . 23524) (semantic-list 23508 . 23522) (symbol 23499 . 23508) (punctuation 23520 . 23521) (PUBLIC 15704 . 15710) (punctuation 15702 . 15703) (symbol 15696 . 15701) (symbol 15686 . 15695) (CLASS 15680 . 15685) (semantic-list 14557 . 14587) (symbol 14521 . 14557) (semantic-list 13777 . 13802) (symbol 13741 . 13777) (PUBLIC 12487 . 12493) (punctuation 12485 . 12486) (symbol 12479 . 12484) (symbol 12469 . 12478) (CLASS 12463 . 12468) (semantic-list 11979 . 12004) (symbol 11943 . 11979) (PUBLIC 10821 . 10827) (punctuation 10819 . 10820) (symbol 10813 . 10818) (symbol 10803 . 10812) (CLASS 10797 . 10802) (punctuation 10119 . 10120) (DEFAULT 10112 . 10119) (punctuation 10110 . 10111) (semantic-list 10107 . 10109) (symbol 10093 . 10107) (punctuation 10092 . 10093) (punctuation 9689 . 9690) (punctuation 9656 . 9657) (punctuation 8511 . 8512) (DELETE 8505 . 8511) (punctuation 8503 . 8504) (semantic-list 8494 . 8502) (NEW 8491 . 8494) (OPERATOR 8482 . 8490) (punctuation 8481 . 8482) (VOID 8476 . 8480) (punctuation 7793 . 7794) (DEFAULT 7786 . 7793) (punctuation 7784 . 7785) (semantic-list 7781 . 7783) (symbol 7769 . 7781) (punctuation 7768 . 7769) (punctuation 7171 . 7172) (punctuation 7140 . 7141) (punctuation 7114 . 7115) (punctuation 7088 . 7089) (punctuation 7062 . 7063) (USING 5568 . 5573) (USING 5534 . 5539) (punctuation 5145 . 5146) (DELETE 5139 . 5145) (punctuation 5137 . 5138) (semantic-list 5128 . 5136) (NEW 5125 . 5128) (OPERATOR 5116 . 5124) (punctuation 5115 . 5116) (VOID 5110 . 5114) (punctuation 5105 . 5106) (DELETE 5099 . 5105) (punctuation 5097 . 5098) (semantic-list 5074 . 5096) (punctuation 5073 . 5074) (OPERATOR 5065 . 5073) (punctuation 5064 . 5065) (symbol 5051 . 5063) (punctuation 5047 . 5048) (DELETE 5041 . 5047) (punctuation 5039 . 5040) (semantic-list 5016 . 5038) (symbol 5004 . 5016) (punctuation 4930 . 4931) (symbol 4917 . 4929) (USING 4911 . 4916) (punctuation 4837 . 4838) (symbol 4823 . 4836) (USING 4817 . 4822) (punctuation 4433 . 4434) (symbol 4401 . 4432) (USING 4395 . 4400) (punctuation 4347 . 4348) (symbol 4321 . 4346) (USING 4315 . 4320) (punctuation 4255 . 4256) (semantic-list 4136 . 4255) (UNSIGNED 4127 . 4135) (punctuation 4125 . 4126) (ENUM 4120 . 4124))
      :lexical-table 
        '(("LLVM_ANALYSIS_MEMORYSSA_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a19c8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_SCALAREVOLUTIONEXPRESSIONS_H" variable (:constant-flag t) nil [598 640])
            ("llvm/ADT/DenseMap.h" include nil nil [642 672])
            ("llvm/ADT/FoldingSet.h" include nil nil [673 705])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [706 739])
            ("llvm/ADT/SmallVector.h" include nil nil [740 773])
            ("llvm/ADT/iterator_range.h" include nil nil [774 810])
            ("llvm/Analysis/ScalarEvolution.h" include nil nil [811 853])
            ("llvm/IR/Constants.h" include nil nil [854 884])
            ("llvm/IR/Value.h" include nil nil [885 911])
            ("llvm/IR/ValueHandle.h" include nil nil [912 944])
            ("llvm/Support/Casting.h" include nil nil [945 978])
            ("llvm/Support/ErrorHandling.h" include nil nil [979 1018])
            ("cassert" include (:system-flag t) nil [1019 1037])
            ("cstddef" include (:system-flag t) nil [1038 1056])
            ("llvm" type
               (:members 
                  ( ("APInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1076 1088])
                    ("Constant" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1089 1104])
                    ("ConstantRange" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1105 1125])
                    ("Loop" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1126 1137])
                    ("Type" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1138 1149])
                    ("SCEVTypes" type
                       (:members 
                          ( ("scConstant" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1275 1286])
                            ("scTruncate" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1287 1298])
                            ("scZeroExtend" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1299 1312])
                            ("scSignExtend" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1313 1326])
                            ("scAddExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1327 1337])
                            ("scMulExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1338 1348])
                            ("scUDivExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1353 1364])
                            ("scAddRecExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1365 1378])
                            ("scUMaxExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1379 1390])
                            ("scSMaxExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1391 1402])
                            ("scUMinExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1403 1414])
                            ("scSMinExpr" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1415 1426])
                            ("scUnknown" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1431 1441])
                            ("scCouldNotCompute" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1442 1463]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [1153 1464])
                    ("SCEVConstant" type
                       (:superclasses 
                          ( ("SCEV" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [1561 1589])
                            ("V" variable
                               (:pointer 1
                                :type ("ConstantInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1596 1611])
                            ("SCEVConstant" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1630 1659])
                                    ("v" variable
                                       (:pointer 1
                                        :type ("ConstantInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1660 1675]))                                  
                                :type ("SCEVConstant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1617 1716])
                            ("public" label nil (reparse-symbol classsubparts) [1720 1727])
                            ("getValue" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ConstantInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1732 1775])
                            ("getAPInt" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1780 1844])
                            ("getType" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1850 1896])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1996 2010]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1976 2063]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1522 2068])
                    ("computeExpressionSize" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("Args" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2116 2144]))                          
                        :type "unsigned short")
                        (reparse-symbol namespacesubparts) [2072 2313])
                    ("SCEVCastExpr" type
                       (:superclasses 
                          ( ("SCEV" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [2416 2426])
                            ("Op" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2431 2446])
                            ("Ty" variable
                               (:pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2451 2460])
                            ("SCEVCastExpr" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2479 2508])
                                    ("SCEVTy" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [2526 2542])
                                    ("op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2543 2558])
                                    ("ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2559 2568]))                                  
                                :type ("SCEVCastExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2466 2569])
                            ("public" label nil (reparse-symbol classsubparts) [2573 2580])
                            ("getOperand" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2585 2630])
                            ("getType" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2635 2671])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2771 2785]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2751 2936]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2379 2941])
                    ("SCEVTruncateExpr" type
                       (:superclasses 
                          ( ("SCEVCastExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [3091 3119])
                            ("SCEVTruncateExpr" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3143 3172])
                                    ("op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3194 3209])
                                    ("ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3210 3219]))                                  
                                :type ("SCEVTruncateExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3126 3220])
                            ("public" label nil (reparse-symbol classsubparts) [3224 3231])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3330 3344]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3310 3397]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3040 3402])
                    ("SCEVZeroExtendExpr" type
                       (:superclasses 
                          ( ("SCEVCastExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [3562 3590])
                            ("SCEVZeroExtendExpr" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3616 3645])
                                    ("op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3669 3684])
                                    ("ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3685 3694]))                                  
                                :type ("SCEVZeroExtendExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3597 3695])
                            ("public" label nil (reparse-symbol classsubparts) [3699 3706])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3805 3819]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3785 3874]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3509 3879])
                    ("SCEVSignExtendExpr" type
                       (:superclasses 
                          ( ("SCEVCastExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [4039 4067])
                            ("SCEVSignExtendExpr" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4093 4122])
                                    ("op" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4146 4161])
                                    ("ty" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4162 4171]))                                  
                                :type ("SCEVSignExtendExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4074 4172])
                            ("public" label nil (reparse-symbol classsubparts) [4176 4183])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4282 4296]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4262 4351]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3986 4356])
                    ("SCEVNAryExpr" type
                       (:superclasses 
                          ( ("SCEV" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [4487 4497])
                            ("Operands" variable
                               (:pointer 2
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4777 4805])
                            ("NumOperands" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4810 4829])
                            ("SCEVNAryExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4848 4877])
                                    ("T" variable (:type ("SCEVTypes" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [4878 4895])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4913 4934])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4935 4944]))                                  
                                :type ("SCEVNAryExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4835 5051])
                            ("public" label nil (reparse-symbol classsubparts) [5055 5062])
                            ("getNumOperands" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5067 5120])
                            ("getOperand" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("i" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [5149 5160]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5126 5264])
                            ("iterator_range" variable (:type "int") (reparse-symbol classsubparts) [5332 5360])
                            ("op_begin" function
                               (:methodconst-flag t
                                :type ("op_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5366 5415])
                            ("op_end" function
                               (:methodconst-flag t
                                :type ("op_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5420 5481])
                            ("operands" function
                               (:methodconst-flag t
                                :type ("op_range" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5486 5566])
                            ("getType" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5572 5630])
                            ("getNoWrapFlags" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Mask" variable
                                       (:default-value "NoWrapMask"
                                        :type ("NoWrapFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5663 5692]))                                  
                                :type ("NoWrapFlags" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5636 5756])
                            ("hasNoUnsignedWrap" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5762 5853])
                            ("hasNoSignedWrap" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5859 5948])
                            ("hasNoSelfWrap" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5954 6040])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6140 6154]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6120 6450]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4450 6455])
                    ("SCEVCommutativeExpr" type
                       (:superclasses 
                          ( ("SCEVNAryExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [6578 6588])
                            ("SCEVCommutativeExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6613 6642])
                                    ("T" variable (:type ("SCEVTypes" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [6667 6684])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6685 6706])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6707 6716]))                                  
                                :type ("SCEVCommutativeExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6593 6753])
                            ("public" label nil (reparse-symbol classsubparts) [6757 6764])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6863 6877]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6843 7124])
                            ("setNoWrapFlags" function
                               (:arguments 
                                  ( ("Flags" variable (:type ("NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7228 7246]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7208 7283]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [6526 7288])
                    ("SCEVAddExpr" type
                       (:superclasses 
                          ( ("SCEVCommutativeExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [7409 7437])
                            ("SCEVAddExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7456 7485])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7502 7523])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7524 7533]))                                  
                                :type ("SCEVAddExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7444 7585])
                            ("public" label nil (reparse-symbol classsubparts) [7589 7596])
                            ("getType" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7601 7897])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7997 8011]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7977 8063]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [7356 8068])
                    ("SCEVMulExpr" type
                       (:superclasses 
                          ( ("SCEVCommutativeExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [8192 8220])
                            ("SCEVMulExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8239 8268])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8285 8306])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8307 8316]))                                  
                                :type ("SCEVMulExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8227 8368])
                            ("public" label nil (reparse-symbol classsubparts) [8372 8379])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8478 8492]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8458 8544]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8139 8549])
                    ("SCEVUDivExpr" type
                       (:superclasses 
                          ( ("SCEV" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [8658 8686])
                            ("LHS" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8693 8709])
                            ("RHS" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8714 8730])
                            ("SCEVUDivExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8749 8778])
                                    ("lhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8779 8795])
                                    ("rhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8796 8812]))                                  
                                :type ("SCEVUDivExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8736 8911])
                            ("public" label nil (reparse-symbol classsubparts) [8915 8922])
                            ("getLHS" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8927 8969])
                            ("getRHS" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8974 9016])
                            ("getType" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9022 9463])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9563 9577]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9543 9630]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8619 9635])
                    ("SCEVAddRecExpr" type
                       (:superclasses 
                          ( ("SCEVNAryExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [10080 10108])
                            ("L" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10115 10129])
                            ("SCEVAddRecExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10150 10179])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10199 10220])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10221 10230])
                                    ("l" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Loop" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10231 10245]))                                  
                                :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10135 10299])
                            ("public" label nil (reparse-symbol classsubparts) [10303 10310])
                            ("getStart" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10315 10367])
                            ("getLoop" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("Loop" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10372 10413])
                            ("getStepRecurrence" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10707 10727]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10677 10983])
                            ("isAffine" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [11099 11289])
                            ("isQuadratic" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [11479 11547])
                            ("setNoWrapFlags" function
                               (:arguments 
                                  ( ("Flags" variable (:type ("NoWrapFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11776 11794]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11756 11928])
                            ("evaluateAtIteration" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("It" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12063 12078])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12079 12099]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12031 12106])
                            ("getNumIterationsInRange" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Range" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ConstantRange" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12535 12562])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12603 12623]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12499 12630])
                            ("getPostIncExpr" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12785 12805]))                                  
                                :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12748 12812])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12912 12926]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12892 12981]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [10031 12986])
                    ("SCEVMinMaxExpr" type
                       (:superclasses 
                          ( ("SCEVCommutativeExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [13100 13128])
                            ("isMinMaxType" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("T" variable (:type ("SCEVTypes" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [13160 13177]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13135 13285])
                            ("protected" label nil (reparse-symbol classsubparts) [13289 13299])
                            ("SCEVMinMaxExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13389 13418])
                                    ("T" variable (:type ("SCEVTypes" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [13419 13436])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13456 13477])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13478 13487]))                                  
                                :type ("SCEVMinMaxExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13374 13661])
                            ("public" label nil (reparse-symbol classsubparts) [13665 13672])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13697 13711]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13677 13788])
                            ("negate" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("T" variable (:type ("SCEVTypes" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [13823 13840]))                                  
                                :type ("SCEVTypes" type (:type "enum") nil nil))
                                (reparse-symbol classsubparts) [13794 14147]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [13044 14152])
                    ("SCEVSMaxExpr" type
                       (:superclasses 
                          ( ("SCEVMinMaxExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [14261 14289])
                            ("SCEVSMaxExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14309 14338])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14339 14360])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14361 14370]))                                  
                                :type ("SCEVSMaxExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14296 14420])
                            ("public" label nil (reparse-symbol classsubparts) [14424 14431])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14530 14544]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14510 14597]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [14212 14602])
                    ("SCEVUMaxExpr" type
                       (:superclasses 
                          ( ("SCEVMinMaxExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [14714 14742])
                            ("SCEVUMaxExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14762 14791])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14792 14813])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14814 14823]))                                  
                                :type ("SCEVUMaxExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14749 14873])
                            ("public" label nil (reparse-symbol classsubparts) [14877 14884])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14983 14997]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14963 15050]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [14665 15055])
                    ("SCEVSMinExpr" type
                       (:superclasses 
                          ( ("SCEVMinMaxExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [15164 15192])
                            ("SCEVSMinExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15212 15241])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15242 15263])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15264 15273]))                                  
                                :type ("SCEVSMinExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15199 15323])
                            ("public" label nil (reparse-symbol classsubparts) [15327 15334])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15433 15447]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [15413 15500]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [15115 15505])
                    ("SCEVUMinExpr" type
                       (:superclasses 
                          ( ("SCEVMinMaxExpr" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ScalarEvolution" friend nil (reparse-symbol classsubparts) [15617 15645])
                            ("SCEVUMinExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:constant-flag t
                                        :type ("FoldingSetNodeIDRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15665 15694])
                                    ("O" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15695 15716])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15717 15726]))                                  
                                :type ("SCEVUMinExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15652 15776])
                            ("public" label nil (reparse-symbol classsubparts) [15780 15787])
                            ("classof" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15886 15900]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [15866 15953]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [15568 15958])
                    ("CallbackVH" variable (:type "int") (reparse-symbol namespacesubparts) [16182 17697])
                    ("SCEVVisitor" type
                       (:members 
                          ( ("visit" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17892 17906]))                                  
                                :type ("RetVal" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17879 19337])
                            ("visitCouldNotCompute" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVCouldNotCompute" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19371 19400]))                                  
                                :type ("RetVal" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19343 19471]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [17854 19476])
                    ("SCEVTraversal" type
                       (:template 
                          ( ("SV" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Visitor" variable (:type ("SV" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19784 19796])
                            ("Worklist" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [19801 19839])
                            ("Visited" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [19844 19881])
                            ("push" function
                               (:arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19897 19911]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [19887 20007])
                            ("public" label nil (reparse-symbol classsubparts) [20011 20018])
                            ("SCEVTraversal" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :type ("SV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20037 20043]))                                  
                                :type ("SCEVTraversal" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20023 20058])
                            ("visitAll" function
                               (:arguments 
                                  ( ("Root" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20078 20095]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20064 21129]))                          )
                        (reparse-symbol namespacesubparts) [19734 21134])
                    ("visitAll" function
                       (:template 
                          ( ("SV" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Root" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21249 21266])
                            ("Visitor" variable
                               (:reference 1
                                :type ("SV" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21267 21279]))                          )
                        (reparse-symbol namespacesubparts) [21211 21341])
                    ("SCEVExprContains" function
                       (:template 
                          ( ("PredTy" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("Root" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21470 21487])
                            ("Pred" variable (:type ("PredTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21488 21500]))                          )
                        (reparse-symbol namespacesubparts) [21419 21882])
                    ("SCEVRewriteVisitor" type
                       (:template 
                          ( ("SC" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [22154 22164])
                            ("SE" variable (:type ("ScalarEvolution" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22169 22189])
                            ("RewriteResults" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SCEV" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [22548 22600])
                            ("public" label nil (reparse-symbol classsubparts) [22604 22611])
                            ("SCEVRewriteVisitor" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22635 22655]))                                  
                                :type ("SCEVRewriteVisitor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22616 22667])
                            ("visit" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22691 22705]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22673 23036])
                            ("visitConstant" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Constant" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVConstant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23068 23097]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23042 23128])
                            ("visitTruncateExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVTruncateExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23164 23193]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23134 23401])
                            ("visitZeroExtendExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVZeroExtendExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23439 23470]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23407 23680])
                            ("visitSignExtendExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVSignExtendExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23718 23749]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23686 23959])
                            ("visitAddExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23990 24014]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23965 24295])
                            ("visitMulExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVMulExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24326 24350]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24301 24631])
                            ("visitUDivExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUDivExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24663 24688]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24637 24932])
                            ("visitAddRecExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24966 24993]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24938 25381])
                            ("visitSMaxExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVSMaxExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25413 25438]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25387 25721])
                            ("visitUMaxExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUMaxExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25753 25778]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25727 26060])
                            ("visitSMinExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVSMinExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26092 26117]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26066 26400])
                            ("visitUMinExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUMinExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26432 26457]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26406 26740])
                            ("visitUnknown" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUnknown" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26771 26795]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26746 26822])
                            ("visitCouldNotCompute" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVCouldNotCompute" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26861 26893]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26828 26920]))                          
                        :superclasses 
                          ( ("SCEVVisitor" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [22062 26925])
                    ("DenseMap" variable (:type "int") (reparse-symbol namespacesubparts) [26953 26986])
                    ("SCEVParameterRewriter" type
                       (:superclasses 
                          ( ("SCEVRewriteVisitor" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [27222 27229])
                            ("rewrite" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("Scev" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27261 27278])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27279 27299])
                                    ("Map" variable
                                       (:reference 1
                                        :type ("ValueToValueMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27331 27352])
                                    ("InterpretConsts" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [27384 27412]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27234 27520])
                            ("SCEVParameterRewriter" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27548 27568])
                                    ("M" variable
                                       (:reference 1
                                        :type ("ValueToValueMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27569 27588])
                                    ("C" variable (:type "bool") (reparse-symbol arg-sub-list) [27589 27596]))                                  
                                :type ("SCEVParameterRewriter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27526 27658])
                            ("visitUnknown" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVUnknown" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27689 27713]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27664 27980])
                            ("private" label nil (reparse-symbol classsubparts) [27984 27992])
                            ("Map" variable (:type ("ValueToValueMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27997 28018])
                            ("InterpretConsts" variable (:type "bool") (reparse-symbol classsubparts) [28023 28044]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [27139 28049])
                    ("DenseMap" variable (:type "int") (reparse-symbol namespacesubparts) [28076 28113])
                    ("SCEVLoopAddRecRewriter" type
                       (:superclasses 
                          ( ("SCEVRewriteVisitor" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [28338 28345])
                            ("SCEVLoopAddRecRewriter" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28373 28393])
                                    ("M" variable
                                       (:reference 1
                                        :type ("LoopToScevMapT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28394 28412]))                                  
                                :type ("SCEVLoopAddRecRewriter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28350 28456])
                            ("rewrite" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("Scev" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEV" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28489 28506])
                                    ("Map" variable
                                       (:reference 1
                                        :type ("LoopToScevMapT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28507 28527])
                                    ("SE" variable
                                       (:reference 1
                                        :type ("ScalarEvolution" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28559 28579]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28462 28670])
                            ("visitAddRecExpr" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Expr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SCEVAddRecExpr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28704 28731]))                                  
                                :type ("SCEV" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28676 29151])
                            ("private" label nil (reparse-symbol classsubparts) [29155 29163])
                            ("Map" variable (:type ("LoopToScevMapT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29168 29188]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [28247 29193]))                  
                :type "namespace")
                nil [1058 29196]))          
      :file "ScalarEvolutionExpressions.h"
      :pointmax 29273
      :fsize 29272
      :lastmodtime '(24186 12264 0 0)
      :unmatched-syntax '((punctuation 28074 . 28075) (symbol 28059 . 28073) (USING 28053 . 28058) (punctuation 26951 . 26952) (symbol 26935 . 26950) (USING 26929 . 26934) (punctuation 17850 . 17851) (VOID 17846 . 17850) (punctuation 17845 . 17846) (symbol 17839 . 17845) (TYPENAME 17830 . 17838) (punctuation 17828 . 17829) (symbol 17826 . 17828) (TYPENAME 17817 . 17825) (punctuation 17816 . 17817) (TEMPLATE 17808 . 17816) (PRIVATE 16174 . 16181) (punctuation 16172 . 16173) (symbol 16168 . 16172) (PUBLIC 16161 . 16167) (punctuation 16159 . 16160) (symbol 16153 . 16158) (symbol 16141 . 16152) (CLASS 16135 . 16140) (punctuation 15645 . 15646) (punctuation 15192 . 15193) (punctuation 14742 . 14743) (punctuation 14289 . 14290) (punctuation 13128 . 13129) (punctuation 10108 . 10109) (punctuation 8686 . 8687) (punctuation 8220 . 8221) (punctuation 7437 . 7438) (punctuation 5330 . 5331) (symbol 5321 . 5329) (USING 5315 . 5320) (punctuation 5309 . 5310) (punctuation 5308 . 5309) (CONST 5302 . 5307) (punctuation 5301 . 5302) (symbol 5296 . 5300) (CONST 5290 . 5295) (punctuation 5288 . 5289) (symbol 5276 . 5287) (USING 5270 . 5275) (punctuation 4067 . 4068) (punctuation 3590 . 3591) (punctuation 3119 . 3120) (punctuation 1589 . 1590))
      :lexical-table 
        '(("LLVM_ANALYSIS_SCALAREVOLUTIONEXPRESSIONS_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f80a19e8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_PHITRANSADDR_H" variable (:constant-flag t) nil [549 577])
            ("llvm/ADT/SmallVector.h" include nil nil [579 612])
            ("llvm/IR/Instruction.h" include nil nil [613 645])
            ("llvm" type
               (:members 
                  ( ("AssumptionCache" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [666 688])
                    ("DominatorTree" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [691 711])
                    ("DataLayout" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [714 731])
                    ("TargetLibraryInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [734 758])
                    ("PHITransAddr" type
                       (:members 
                          ( ("Addr" variable
                               (:pointer 1
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1379 1391])
                            ("DL" variable
                               (:constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1437 1458])
                            ("TLI" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1524 1553])
                            ("AC" variable
                               (:pointer 1
                                :type ("AssumptionCache" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1623 1643])
                            ("InstInputs" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("Instruction" type (:pointer 1) nil nil)
                                      ("4"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1703 1743])
                            ("public" label nil (reparse-symbol classsubparts) [1745 1752])
                            ("PHITransAddr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1768 1780])
                                    ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1781 1802])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1803 1823]))                                  
                                :type ("PHITransAddr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1755 2044])
                            ("getAddr" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2048 2087])
                            ("NeedsPHITranslationFromBlock" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2266 2281]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2232 2533])
                            ("IsPotentiallyPHITranslatable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2755 2797])
                            ("PHITranslateValue" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CurBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3107 3125])
                                    ("PredBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3126 3145])
                                    ("DT" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3171 3195])
                                    ("MustDominate" variable (:type "bool") (reparse-symbol arg-sub-list) [3196 3214]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3084 3215])
                            ("PHITranslateWithInsertion" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("CurBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3538 3556])
                                    ("PredBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3557 3576])
                                    ("DT" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3612 3636])
                                    ("NewInsts" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Instruction" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3672 3713]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3505 3714])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3718 3736])
                            ("Verify" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3912 3932])
                            ("private" label nil (reparse-symbol classsubparts) [3934 3942])
                            ("PHITranslateSubExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3972 3981])
                                    ("CurBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3982 4000])
                                    ("PredBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4001 4020])
                                    ("DT" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4050 4074]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3945 4075])
                            ("InsertPHITranslatedSubExpr" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("InVal" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4385 4398])
                                    ("CurBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4399 4417])
                                    ("PredBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4454 4473])
                                    ("DT" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4474 4498])
                                    ("NewInsts" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Instruction" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4535 4576]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4351 4577])
                            ("AddAsInput" function
                               (:pointer 1
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4680 4689]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4662 4844]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1307 4847]))                  
                :type "namespace")
                nil [647 4850]))          
      :file "PHITransAddr.h"
      :pointmax 4881
      :fsize 4880
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("LLVM_ANALYSIS_PHITRANSADDR_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f83ab2d8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_DOMTREEUPDATER_H" variable (:constant-flag t) nil [634 664])
            ("llvm/Analysis/PostDominators.h" include nil nil [666 707])
            ("llvm/IR/Dominators.h" include nil nil [708 739])
            ("llvm/IR/Instructions.h" include nil nil [740 773])
            ("llvm/IR/ValueHandle.h" include nil nil [774 806])
            ("llvm/Support/GenericDomTree.h" include nil nil [807 847])
            ("functional" include (:system-flag t) nil [848 869])
            ("vector" include (:system-flag t) nil [870 887])
            ("llvm" type
               (:members 
                  ( ("DomTreeUpdater" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [929 936])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1033 1058]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1018 1083])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("DT_" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1101 1120])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1121 1146]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1086 1187])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("DT_" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1205 1224])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1225 1250]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1190 1290])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("PDT_" variable
                                       (:reference 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1308 1332])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1333 1358]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1293 1401])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("PDT_" variable
                                       (:pointer 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1419 1443])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1444 1469]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1404 1511])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("DT_" variable
                                       (:reference 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1529 1548])
                                    ("PDT_" variable
                                       (:reference 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1549 1573])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1591 1616]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1514 1669])
                            ("DomTreeUpdater" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("DT_" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1687 1706])
                                    ("PDT_" variable
                                       (:pointer 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1707 1731])
                                    ("Strategy_" variable (:type ("UpdateStrategy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1749 1774]))                                  
                                :type ("DomTreeUpdater" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1672 1825])
                            ("DomTreeUpdater" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1829 1859])
                            ("isLazy" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1915 1979])
                            ("isEager" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2037 2103])
                            ("hasDomTree" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2156 2205])
                            ("hasPostDomTree" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2261 2315])
                            ("hasPendingDeletedBB" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2530 2594])
                            ("isBBPendingDeletion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("DelBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2721 2739]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2696 2746])
                            ("hasPendingUpdates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3057 3088])
                            ("hasPendingDomTreeUpdates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3219 3257])
                            ("hasPendingPostDomTreeUpdates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3393 3435])
                            ("applyUpdates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Updates" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("DominatorTree::UpdateType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [5154 5198]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5136 5199])
                            ("applyUpdatesPermissive" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Updates" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("DominatorTree::UpdateType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [6319 6363]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6291 6364])
                            ("recalculate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6538 6550]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6521 6551])
                            ("LLVM_ATTRIBUTE_DEPRECATED" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("insertEdge" variable (:type "void") (reparse-symbol arg-sub-list) [7000 7049]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [6974 7110])
                            ("LLVM_ATTRIBUTE_DEPRECATED" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("insertEdgeRelaxed" variable (:type "void") (reparse-symbol arg-sub-list) [7647 7754]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [7621 7825])
                            ("LLVM_ATTRIBUTE_DEPRECATED" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("deleteEdge" variable (:type "void") (reparse-symbol arg-sub-list) [8288 8337]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8262 8398])
                            ("LLVM_ATTRIBUTE_DEPRECATED" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("deleteEdgeRelaxed" variable (:type "void") (reparse-symbol arg-sub-list) [8926 9033]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8900 9104])
                            ("deleteBB" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DelBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9612 9630]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9598 9631])
                            ("callbackDeleteBB" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DelBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10188 10206])
                                    ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10231 10245])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [10245 10263])
                                    ("" variable (:type ("Callback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10265 10274]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10166 10275])
                            ("getDomTree" function
                               (:prototype-flag t
                                :type ("DominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10654 10682])
                            ("getPostDomTree" function
                               (:prototype-flag t
                                :type ("PostDominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10857 10893])
                            ("flush" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [11000 11013])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [11109 11127])
                            ("private" label nil (reparse-symbol classsubparts) [11129 11137])
                            ("CallbackVH" variable (:type "int") (reparse-symbol classsubparts) [11180 11554])
                            ("PendUpdates" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("DominatorTree::UpdateType" type nil nil nil)
                                      ("16"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [11558 11613])
                            ("PendDTUpdateIndex" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11616 11645])
                            ("PendPDTUpdateIndex" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11648 11678])
                            ("DT" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("DominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11681 11709])
                            ("PDT" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("PostDominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11712 11745])
                            ("Strategy" variable
                               (:constant-flag t
                                :type ("UpdateStrategy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11748 11778])
                            ("DeletedBBs" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("BasicBlock" type (:pointer 1) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [11781 11821])
                            ("Callbacks" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("CallBackOnDeletion" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [11824 11866])
                            ("IsRecalculatingDomTree" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [11869 11905])
                            ("IsRecalculatingPostDomTree" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [11908 11948])
                            ("validateDeleteBB" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DelBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12367 12385]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12345 12386])
                            ("forceFlushDeletedBB" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [12448 12475])
                            ("applyDomTreeUpdates" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [12539 12566])
                            ("applyPostDomTreeUpdates" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [12634 12665])
                            ("tryFlushDeletedBB" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [12765 12790])
                            ("dropOutOfDateUpdates" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [12916 12944])
                            ("eraseDelBBNode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("DelBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13072 13090]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13052 13091])
                            ("isUpdateValid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Update" variable (:type ("DominatorTree::UpdateType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13294 13327]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13275 13334])
                            ("isSelfDominance" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Update" variable (:type ("DominatorTree::UpdateType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13411 13444]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13390 13451]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [906 13454]))                  
                :type "namespace")
                nil [889 13456]))          
      :file "DomTreeUpdater.h"
      :pointmax 13517
      :fsize 13516
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((PUBLIC 11173 . 11179) (punctuation 11171 . 11172) (symbol 11165 . 11170) (symbol 11146 . 11164) (CLASS 11140 . 11145) (symbol 11092 . 11108) (punctuation 10263 . 10264) (semantic-list 10249 . 10263) (punctuation 10244 . 10245) (string 9063 . 9102) (semantic-list 8948 . 9033) (string 8367 . 8396) (semantic-list 8303 . 8337) (string 7784 . 7823) (semantic-list 7669 . 7754) (string 7079 . 7108) (semantic-list 7015 . 7049) (punctuation 2103 . 2104) (punctuation 1979 . 1980) (EXPLICIT 1009 . 1017) (punctuation 1004 . 1005) (semantic-list 981 . 1004) (CHAR 976 . 980) (UNSIGNED 967 . 975) (punctuation 965 . 966) (symbol 950 . 964) (CLASS 944 . 949) (ENUM 939 . 943))
      :lexical-table 
        '(("LLVM_ANALYSIS_DOMTREEUPDATER_H")
          )
)
    (semanticdb-table "semanticdb-table-1559f86e7578"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ANALYSIS_POSTDOMINATORS_H" variable (:constant-flag t) nil [568 598])
            ("llvm/ADT/DepthFirstIterator.h" include nil nil [600 640])
            ("llvm/IR/Dominators.h" include nil nil [641 672])
            ("llvm/IR/PassManager.h" include nil nil [673 705])
            ("llvm/Pass.h" include nil nil [706 728])
            ("llvm" type
               (:members 
                  ( ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [748 763])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [764 782])
                    ("PostDominatorTree" type
                       (:superclasses 
                          ( ("PostDomTreeBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [965 972])
                            ("PostDomTreeBase" variable (:type "int") (reparse-symbol classsubparts) [988 1016])
                            ("PostDominatorTree" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1080 1092]))                                  
                                :type ("PostDominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1062 1112])
                            ("invalidate" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1169 1181])
                                    ("PA" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PreservedAnalyses" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1182 1210])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager::Invalidator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1229 1268]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1153 1269])
                            ("Base::dominates" variable (:type "int") (reparse-symbol classsubparts) [1325 1341])
                            ("dominates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("I1" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1491 1513])
                                    ("I2" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1514 1536]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1476 1543]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [902 1546])
                    ("PostDominatorTreeAnalysis" type
                       (:superclasses 
                          ( ("AnalysisInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("AnalysisInfoMixin" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1699 1751])
                            ("Key" variable
                               (:typemodifiers ("static")
                                :type ("AnalysisKey" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1755 1778])
                            ("public" label nil (reparse-symbol classsubparts) [1780 1787])
                            ("Result" variable
                               (:default-value "PostDominatorTree"
                                :type "int")
                                (reparse-symbol classsubparts) [1850 1877])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1995 2007])
                                    ("" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2008 2034]))                                  
                                :type ("PostDominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1973 2035]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1605 2038])
                    ("PostDominatorTreePrinterPass" type
                       (:superclasses 
                          ( ("PassInfoMixin" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("OS" variable (:type ("raw_ostream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2183 2199])
                            ("public" label nil (reparse-symbol classsubparts) [2201 2208])
                            ("PostDominatorTreePrinterPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2249 2265]))                                  
                                :type ("PostDominatorTreePrinterPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2220 2266])
                            ("run" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2292 2304])
                                    ("AM" variable
                                       (:reference 1
                                        :type ("FunctionAnalysisManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2305 2333]))                                  
                                :type ("PreservedAnalyses" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2270 2334]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2087 2337])
                    ("PostDominatorTreeWrapperPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [2401 2416])
                            ("DT" variable (:type ("PostDominatorTree" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2467 2488])
                            ("PostDominatorTreeWrapperPass" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("PostDominatorTreeWrapperPass" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2492 2523])
                            ("getPostDomTree" function (:type ("PostDominatorTree" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2527 2577])
                            ("getPostDomTree" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("PostDominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2580 2642])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [2678 2687])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [2713 2728])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [2929 2944]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2339 2947])
                    ("createPostDomTree" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("FunctionPass" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2949 2983])
                    ("GraphTraits" type
                       (:type "struct"
                        :members 
                          ( ("getEntryNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("DT" variable
                                       (:pointer 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3105 3127]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3077 3163])
                            ("nodes_begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3201 3222]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3167 3340])
                            ("nodes_end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :type ("PostDominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3376 3397]))                                  
                                :type ("nodes_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3344 3439]))                          
                        :superclasses 
                          ( ("GraphTraits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("PostDominatorTree" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [2985 3442]))                  
                :type "namespace")
                nil [730 3445]))          
      :file "PostDominators.h"
      :pointmax 3510
      :fsize 3509
      :lastmodtime '(24055 16144 0 0)
      :unmatched-syntax '((semantic-list 2896 . 2928) (symbol 2891 . 2896) (VOID 2886 . 2890) (semantic-list 2853 . 2882) (symbol 2844 . 2852) (semantic-list 2841 . 2843) (symbol 2828 . 2841) (VOID 2823 . 2827) (semantic-list 2788 . 2819) (symbol 2779 . 2787) (CONST 2773 . 2778) (semantic-list 2753 . 2772) (symbol 2737 . 2753) (VOID 2732 . 2736) (semantic-list 2710 . 2712) (symbol 2696 . 2710) (VOID 2691 . 2695) (semantic-list 2664 . 2677) (symbol 2651 . 2664) (BOOL 2646 . 2650) (EXPLICIT 2211 . 2219) (USING 1844 . 1849) (USING 1319 . 1324) (EXPLICIT 1053 . 1061) (punctuation 1049 . 1050) (DEFAULT 1042 . 1049) (punctuation 1040 . 1041) (semantic-list 1037 . 1039) (symbol 1020 . 1037) (punctuation 986 . 987) (symbol 981 . 985) (USING 975 . 980))
      :lexical-table 
        '(("LLVM_ANALYSIS_POSTDOMINATORS_H")
          )
))
  :file "!usr!include!llvm-10!llvm!Analysis!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
