;; Object semanticdb-project-database-file-155c5777400e
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-155c5777400e"
  :tables
  (list
    (semanticdb-table "semanticdb-table-155c5752a05c"
      :major-mode c++-mode
      :tags 
        '( ("llvm/Transforms/Scalar/NewGVN.h" include nil nil [3284 3326])
            ("llvm/ADT/ArrayRef.h" include nil nil [3327 3357])
            ("llvm/ADT/BitVector.h" include nil nil [3358 3389])
            ("llvm/ADT/DenseMap.h" include nil nil [3390 3420])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [3421 3455])
            ("llvm/ADT/DenseSet.h" include nil nil [3456 3486])
            ("llvm/ADT/DepthFirstIterator.h" include nil nil [3487 3527])
            ("llvm/ADT/GraphTraits.h" include nil nil [3528 3561])
            ("llvm/ADT/Hashing.h" include nil nil [3562 3591])
            ("llvm/ADT/PointerIntPair.h" include nil nil [3592 3628])
            ("llvm/ADT/PostOrderIterator.h" include nil nil [3629 3668])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [3669 3702])
            ("llvm/ADT/SmallVector.h" include nil nil [3703 3736])
            ("llvm/ADT/SparseBitVector.h" include nil nil [3737 3774])
            ("llvm/ADT/Statistic.h" include nil nil [3775 3806])
            ("llvm/ADT/iterator_range.h" include nil nil [3807 3843])
            ("llvm/Analysis/AliasAnalysis.h" include nil nil [3844 3884])
            ("llvm/Analysis/AssumptionCache.h" include nil nil [3885 3927])
            ("llvm/Analysis/CFGPrinter.h" include nil nil [3928 3965])
            ("llvm/Analysis/ConstantFolding.h" include nil nil [3966 4008])
            ("llvm/Analysis/GlobalsModRef.h" include nil nil [4009 4049])
            ("llvm/Analysis/InstructionSimplify.h" include nil nil [4050 4096])
            ("llvm/Analysis/MemoryBuiltins.h" include nil nil [4097 4138])
            ("llvm/Analysis/MemorySSA.h" include nil nil [4139 4175])
            ("llvm/Analysis/TargetLibraryInfo.h" include nil nil [4176 4220])
            ("llvm/IR/Argument.h" include nil nil [4221 4250])
            ("llvm/IR/BasicBlock.h" include nil nil [4251 4282])
            ("llvm/IR/Constant.h" include nil nil [4283 4312])
            ("llvm/IR/Constants.h" include nil nil [4313 4343])
            ("llvm/IR/Dominators.h" include nil nil [4344 4375])
            ("llvm/IR/Function.h" include nil nil [4376 4405])
            ("llvm/IR/InstrTypes.h" include nil nil [4406 4437])
            ("llvm/IR/Instruction.h" include nil nil [4438 4470])
            ("llvm/IR/Instructions.h" include nil nil [4471 4504])
            ("llvm/IR/IntrinsicInst.h" include nil nil [4505 4539])
            ("llvm/IR/Intrinsics.h" include nil nil [4540 4571])
            ("llvm/IR/LLVMContext.h" include nil nil [4572 4604])
            ("llvm/IR/PatternMatch.h" include nil nil [4605 4638])
            ("llvm/IR/Type.h" include nil nil [4639 4664])
            ("llvm/IR/Use.h" include nil nil [4665 4689])
            ("llvm/IR/User.h" include nil nil [4690 4715])
            ("llvm/IR/Value.h" include nil nil [4716 4742])
            ("llvm/InitializePasses.h" include nil nil [4743 4777])
            ("llvm/Pass.h" include nil nil [4778 4800])
            ("llvm/Support/Allocator.h" include nil nil [4801 4836])
            ("llvm/Support/ArrayRecycler.h" include nil nil [4837 4876])
            ("llvm/Support/Casting.h" include nil nil [4877 4910])
            ("llvm/Support/CommandLine.h" include nil nil [4911 4948])
            ("llvm/Support/Debug.h" include nil nil [4949 4980])
            ("llvm/Support/DebugCounter.h" include nil nil [4981 5019])
            ("llvm/Support/ErrorHandling.h" include nil nil [5020 5059])
            ("llvm/Support/PointerLikeTypeTraits.h" include nil nil [5060 5107])
            ("llvm/Support/raw_ostream.h" include nil nil [5108 5145])
            ("llvm/Transforms/Scalar.h" include nil nil [5146 5181])
            ("llvm/Transforms/Scalar/GVNExpression.h" include nil nil [5182 5231])
            ("llvm/Transforms/Utils/Local.h" include nil nil [5232 5272])
            ("llvm/Transforms/Utils/PredicateInfo.h" include nil nil [5273 5321])
            ("llvm/Transforms/Utils/VNCoercion.h" include nil nil [5322 5367])
            ("algorithm" include (:system-flag t) nil [5368 5388])
            ("cassert" include (:system-flag t) nil [5389 5407])
            ("cstdint" include (:system-flag t) nil [5408 5426])
            ("iterator" include (:system-flag t) nil [5427 5446])
            ("map" include (:system-flag t) nil [5447 5461])
            ("memory" include (:system-flag t) nil [5462 5479])
            ("set" include (:system-flag t) nil [5480 5494])
            ("string" include (:system-flag t) nil [5495 5512])
            ("tuple" include (:system-flag t) nil [5513 5529])
            ("utility" include (:system-flag t) nil [5530 5548])
            ("vector" include (:system-flag t) nil [5549 5566])
            ("llvm" using (:type ("llvm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [5568 5589])
            ("llvm::GVNExpression" using (:type ("llvm::GVNExpression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [5590 5626])
            ("llvm::VNCoercion" using (:type ("llvm::VNCoercion" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [5627 5660])
            ("llvm::PatternMatch" using (:type ("llvm::PatternMatch" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [5661 5696])
            ("DEBUG_TYPE" variable (:constant-flag t) nil [5706 5716])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNInstrDeleted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5737 5756]))                  
                :type "int")
                nil [5727 5791])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNBlocksDeleted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5802 5822]))                  
                :type "int")
                nil [5792 5851])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNOpsSimplified" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5862 5882]))                  
                :type "int")
                nil [5852 5919])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNPhisAllSame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5930 5948]))                  
                :type "int")
                nil [5920 5999])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNMaxIterations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6010 6030]))                  
                :type "int")
                nil [6000 6097])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNLeaderChanges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6108 6128]))                  
                :type "int")
                nil [6098 6157])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNSortedLeaderChanges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6168 6194]))                  
                :type "int")
                nil [6158 6230])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNAvoidedSortedLeaderChanges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6241 6274]))                  
                :type "int")
                nil [6231 6328])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNDeadStores" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6339 6356]))                  
                :type "int")
                nil [6329 6403])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNPHIOfOpsCreated" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6414 6436]))                  
                :type "int")
                nil [6404 6469])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NumGVNPHIOfOpsEliminations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6480 6507]))                  
                :type "int")
                nil [6470 6566])
            ("DEBUG_COUNTER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VNCounter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6581 6591]))                  
                :type "int")
                nil [6567 6669])
            ("DEBUG_COUNTER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PHIOfOpsCounter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6684 6700]))                  
                :type "int")
                nil [6670 6785])
            ("EnableStoreRefinement" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("cl::init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7066 7081])
                    ("" variable (:type ("cl::Hidden" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7083 7094]))                  
                :type ("cl::opt" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [6953 7095])
            ("EnablePhiOfOps" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("cl::init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7231 7245])
                    ("" variable (:type ("cl::Hidden" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7283 7294]))                  
                :type ("cl::opt" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [7174 7295])
            ("llvm" type
               (:members 
                  ( ("GVNExpression" type (:type "namespace") (reparse-symbol namespacesubparts) [7539 7897]))                  
                :type "namespace")
                nil [7522 7930])
            ("unnamed" type
               (:members 
                  ( ("TarjanSCC" type
                       (:members 
                          ( ("TarjanSCC" function
                               (:constructor-flag t
                                :type ("TarjanSCC" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8466 8496])
                            ("Start" function
                               (:arguments 
                                  ( ("Start" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8511 8536]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8500 8597])
                            ("getComponentFor" function
                               (:methodconst-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8655 8670]))                                  
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("Value" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [8601 8873])
                            ("private" label nil (reparse-symbol classsubparts) [8875 8883])
                            ("FindSCC" function
                               (:arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8899 8920]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8886 10413])
                            ("DFSNum" variable
                               (:default-value "1"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10417 10441])
                            ("InComponent" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10444 10486])
                            ("Root" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10489 10532])
                            ("Stack" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10535 10571])
                            ("Components" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("SmallPtrSet" type (:template-specifier 
                                        ( ("Value" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("8"))                                        ) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10702 10759])
                            ("ValueToComponent" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10763 10814]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8445 10817])
                    ("CongruenceClass" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [13303 13310])
                            ("MemberType" variable
                               (:default-value "Value"
                                :type "int")
                                (reparse-symbol classsubparts) [13319 13338])
                            ("SmallPtrSet" variable (:type "int") (reparse-symbol classsubparts) [13359 13388])
                            ("MemoryMemberType" variable
                               (:default-value "MemoryPhi"
                                :type "int")
                                (reparse-symbol classsubparts) [13397 13426])
                            ("SmallPtrSet" variable (:type "int") (reparse-symbol classsubparts) [13453 13494])
                            ("CongruenceClass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13523 13535]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13507 13547])
                            ("CongruenceClass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13566 13578])
                                    ("Leader" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13579 13593])
                                    ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13594 13614]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13550 13668])
                            ("getID" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [13672 13709])
                            ("isDead" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [13840 14015])
                            ("getLeader" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14041 14087])
                            ("setLeader" function
                               (:arguments 
                                  ( ("Leader" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14105 14119]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14090 14143])
                            ("getNextLeader" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("Value" type (:pointer 1) nil nil)
                                          ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [14146 14236])
                            ("resetNextLeader" function (:type "void") (reparse-symbol classsubparts) [14239 14293])
                            ("addPossibleNextLeader" function
                               (:arguments 
                                  ( ("LeaderPair" variable (:type ("std::pair" type
                                         (:template-specifier 
                                            ( ("Value" type (:pointer 1) nil nil)
                                              ("unsigned int" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14323 14367]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14296 14451])
                            ("getStoredValue" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14455 14511])
                            ("setStoredValue" function
                               (:arguments 
                                  ( ("Leader" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14534 14548]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14514 14577])
                            ("getMemoryLeader" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14580 14651])
                            ("setMemoryLeader" function
                               (:arguments 
                                  ( ("Leader" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14675 14702]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14654 14732])
                            ("getDefiningExpr" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14766 14832])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14858 14904])
                            ("size" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [14907 14955])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("MemberSet::const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14958 15025])
                            ("end" function
                               (:methodconst-flag t
                                :type ("MemberSet::const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15028 15091])
                            ("insert" function
                               (:arguments 
                                  ( ("M" variable
                                       (:pointer 1
                                        :type ("MemberType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15106 15120]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15094 15143])
                            ("erase" function
                               (:arguments 
                                  ( ("M" variable
                                       (:pointer 1
                                        :type ("MemberType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15157 15171]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15146 15193])
                            ("swap" function
                               (:arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :type ("MemberSet" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15206 15223]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15196 15248])
                            ("memory_empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15275 15334])
                            ("memory_size" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [15337 15398])
                            ("memory_begin" function
                               (:methodconst-flag t
                                :type ("MemoryMemberSet::const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15401 15493])
                            ("memory_end" function
                               (:methodconst-flag t
                                :type ("MemoryMemberSet::const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15496 15584])
                            ("memory" function
                               (:methodconst-flag t
                                :type ("iterator_range" type
                                     (:template-specifier 
                                        ( ("MemoryMemberSet::const_iterator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [15587 15708])
                            ("memory_insert" function
                               (:arguments 
                                  ( ("M" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryMemberType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15731 15757]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15712 15786])
                            ("memory_erase" function
                               (:arguments 
                                  ( ("M" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryMemberType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15807 15833]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15789 15861])
                            ("getStoreCount" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [15882 15935])
                            ("incStoreCount" function (:type "void") (reparse-symbol classsubparts) [15938 15976])
                            ("decStoreCount" function (:type "void") (reparse-symbol classsubparts) [15979 16083])
                            ("definesNoMemory" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16134 16208])
                            ("isEquivalentTo" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16391 16420]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [16371 17067])
                            ("private" label nil (reparse-symbol classsubparts) [17069 17077])
                            ("ID" variable (:type "unsigned int") (reparse-symbol classsubparts) [17080 17092])
                            ("RepLeader" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17124 17151])
                            ("NextLeader" variable
                               (:default-value "{nullptr, ~0U}"
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("Value" type (:pointer 1) nil nil)
                                          ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [17301 17362])
                            ("RepStoredValue" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17430 17462])
                            ("RepMemoryAccess" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17560 17606])
                            ("DefiningExpr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17636 17677])
                            ("Members" variable (:type ("MemberSet" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17716 17734])
                            ("MemoryMembers" variable (:type ("MemoryMemberSet" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17918 17948])
                            ("StoreCount" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol classsubparts) [18071 18090]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [13279 18093]))                  
                :type "namespace")
                nil [7954 18096])
            ("llvm" type
               (:members 
                  ( ("ExactEqualsExpression" type
                       (:members 
                          ( ("E" variable
                               (:constant-flag t
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18176 18196])
                            ("ExactEqualsExpression" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("E" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18231 18251]))                                  
                                :type ("ExactEqualsExpression" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [18209 18261])
                            ("getComputedHash" function
                               (:methodconst-flag t
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18265 18330])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18350 18374]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [18334 18421]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [18143 18424])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18482 18699])
                            ("getTombstoneKey" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18703 18925])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18958 18978]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [18929 19017])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("E" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ExactEqualsExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19050 19081]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [19021 19119])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ExactEqualsExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19143 19176])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19177 19199]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19123 19307])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19331 19353])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19354 19376]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19311 19940]))                          
                        :template-specifier 
                          ( ("Expression" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [18426 19943]))                  
                :type "namespace")
                nil [18125 19946])
            ("unnamed" type
               (:members 
                  ( ("NewGVN" type
                       (:members 
                          ( ("F" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20000 20012])
                            ("DT" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("DominatorTree" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20015 20043])
                            ("TLI" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20046 20085])
                            ("AA" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("AliasAnalysis" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20088 20116])
                            ("MSSA" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("MemorySSA" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20119 20145])
                            ("MSSAWalker" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("MemorySSAWalker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20148 20186])
                            ("DL" variable
                               (:constant-flag t
                                :type ("DataLayout" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20189 20210])
                            ("PredInfo" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("PredicateInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [20213 20253])
                            ("ExpressionAllocator" variable
                               (:typemodifiers ("mutable")
                                :type ("BumpPtrAllocator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20373 20418])
                            ("ArgRecycler" variable
                               (:typemodifiers ("mutable")
                                :type ("ArrayRecycler" type
                                     (:template-specifier 
                                        ( ("Value" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [20421 20464])
                            ("SCCFinder" variable
                               (:typemodifiers ("mutable")
                                :type ("TarjanSCC" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20467 20495])
                            ("SQ" variable
                               (:constant-flag t
                                :type ("SimplifyQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20498 20521])
                            ("NumFuncArgs" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [20576 20605])
                            ("RPOOrdering" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("DomTreeNode" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [20642 20694])
                            ("TOPClass" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20985 21021])
                            ("CongruenceClasses" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("CongruenceClass" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21024 21073])
                            ("NextCongruenceNum" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [21076 21107])
                            ("ValueToClass" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("CongruenceClass" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21132 21182])
                            ("ValueToExpression" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("Expression" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21185 21241])
                            ("PHINodeUses" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Instruction" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21426 21474])
                            ("OpSafeForPHIOfOps" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("bool" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21478 21526])
                            ("TempToBlock" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("BasicBlock" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21593 21643])
                            ("RealToTemp" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("PHINode" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [21774 21820])
                            ("AdditionalUsers" variable
                               (:typemodifiers ("mutable")
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("Value" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("SmallPtrSet" type (:template-specifier 
                                            ( ("Value" type (:pointer 1) nil nil)
                                              ("2"))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [22405 22478])
                            ("ExpressionToPhiOfOps" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Expression" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("SmallPtrSet" type (:template-specifier 
                                        ( ("Instruction" type (:pointer 1) nil nil)
                                          ("2"))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [22481 22568])
                            ("TempToMemory" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Instruction" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("MemoryUseOrDef" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [22623 22684])
                            ("AllTempInstructions" variable (:type ("DenseSet" type
                                 (:template-specifier 
                                    ( ("Instruction" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [22906 22950])
                            ("RevisitOnReachabilityChange" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("BasicBlock" type (:pointer 1) nil nil)
                                      ("SparseBitVector" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [23452 23522])
                            ("PredicateToUsers" variable
                               (:typemodifiers ("mutable")
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("Value" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("SmallPtrSet" type (:template-specifier 
                                            ( ("Instruction" type (:pointer 1) nil nil)
                                              ("2"))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [23827 23913])
                            ("MemoryToUsers" variable
                               (:typemodifiers ("mutable")
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("MemoryAccess" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("SmallPtrSet" type (:template-specifier 
                                            ( ("MemoryAccess" type (:pointer 1) nil nil)
                                              ("2"))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [24073 24164])
                            ("MemoryAccessToClass" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("MemoryAccess" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("CongruenceClass" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [24475 24545])
                            ("MemoryPhiState" type
                               (:members 
                                  ( ("MPS_Invalid" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25314 25326])
                                    ("MPS_TOP" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25327 25335])
                                    ("MPS_Equivalent" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25336 25351])
                                    ("MPS_Unique" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25352 25364]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [25292 25365])
                            ("MemoryPhiState" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("MemoryPhi" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("MemoryPhiState" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [25368 25427])
                            ("InstCycleState" type
                               (:members 
                                  ( ("ICS_Unknown" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25453 25465])
                                    ("ICS_CycleFree" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25466 25480])
                                    ("ICS_Cycle" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [25481 25492]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [25431 25493])
                            ("InstCycleState" variable
                               (:typemodifiers ("mutable")
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("Instruction" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil)
                                          ("InstCycleState" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [25496 25565])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [25630 25678])
                            ("ExpressionToClass" variable (:type ("ExpressionClassMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25681 25718])
                            ("SingletonDeadExpression" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("DeadExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26055 26105])
                            ("LeaderChanges" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [26171 26209])
                            ("BlockEdge" variable
                               (:default-value "BasicBlockEdge"
                                :type "int")
                                (reparse-symbol classsubparts) [26243 26270])
                            ("ReachableEdges" variable (:type ("DenseSet" type
                                 (:template-specifier 
                                    ( ("BlockEdge" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [26273 26308])
                            ("ReachableBlocks" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("BasicBlock" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [26311 26362])
                            ("TouchedInstructions" variable (:type ("BitVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26960 26990])
                            ("BlockInstRange" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("BasicBlock" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("std::pair" type (:template-specifier 
                                        ( ("unsigned int" type nil nil nil)
                                          ("unsigned int" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [26994 27069])
                            ("ProcessedCount" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [27164 27213])
                            ("InstrDFS" variable (:type ("DenseMap" type
                                 (:template-specifier 
                                    ( ("Value" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil)
                                      ("unsigned int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [27411 27454])
                            ("DFSToInstr" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("32"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [27518 27554])
                            ("InstructionsToErase" variable (:type ("SmallPtrSet" type
                                 (:template-specifier 
                                    ( ("Instruction" type (:pointer 1) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [27578 27628])
                            ("public" label nil (reparse-symbol classsubparts) [27630 27637])
                            ("NewGVN" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27647 27659])
                                    ("DT" variable
                                       (:pointer 1
                                        :type ("DominatorTree" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27660 27678])
                                    ("AC" variable
                                       (:pointer 1
                                        :type ("AssumptionCache" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27679 27699])
                                    ("TLI" variable
                                       (:pointer 1
                                        :type ("TargetLibraryInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27709 27732])
                                    ("AA" variable
                                       (:pointer 1
                                        :type ("AliasAnalysis" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27733 27751])
                                    ("MSSA" variable
                                       (:pointer 1
                                        :type ("MemorySSA" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27752 27768])
                                    ("DL" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DataLayout" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27778 27799]))                                  
                                :type ("NewGVN" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27640 27996])
                            ("runGVN" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [28000 28014])
                            ("private" label nil (reparse-symbol classsubparts) [28016 28024])
                            ("createExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28088 28102]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28053 28109])
                            ("createBinaryExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [28153 28162])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28163 28170])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28171 28179])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28180 28188])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28232 28246]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28112 28253])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [28371 28404])
                            ("createPHIExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("ValPair" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [28443 28461])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28462 28482])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28520 28533])
                                    ("HasBackEdge" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [28534 28552])
                                    ("OriginalOpsConstant" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [28590 28616]))                                  
                                :type ("PHIExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28408 28623])
                            ("createDeadExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("DeadExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28626 28677])
                            ("createVariableExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28731 28739]))                                  
                                :type ("VariableExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28680 28746])
                            ("createConstantExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Constant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28800 28811]))                                  
                                :type ("ConstantExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28749 28818])
                            ("createVariableOrConstant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28864 28873]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28821 28880])
                            ("createUnknownExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28932 28946]))                                  
                                :type ("UnknownExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28883 28953])
                            ("createStoreExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("StoreInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29001 29013])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29061 29082]))                                  
                                :type ("StoreExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28956 29089])
                            ("createLoadExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29129 29136])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29137 29145])
                                    ("" variable
                                       (:pointer 1
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29146 29157])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29197 29218]))                                  
                                :type ("LoadExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29092 29225])
                            ("createCallExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("CallInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29271 29282])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29328 29349]))                                  
                                :type ("CallExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29228 29356])
                            ("createAggregateValueExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29425 29439]))                                  
                                :type ("AggregateValueExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29359 29446])
                            ("setBasicExpressionInfo" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29477 29491])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29492 29510]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29449 29517])
                            ("createCongruenceClass" function
                               (:pointer 1
                                :arguments 
                                  ( ("Leader" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29592 29606])
                                    ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29607 29627]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29553 29768])
                            ("createMemoryClass" function
                               (:pointer 1
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29807 29824]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29772 29930])
                            ("ensureLeaderOfMemoryClass" function
                               (:pointer 1
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29977 29994]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29934 30121])
                            ("createSingletonCongruenceClass" function
                               (:pointer 1
                                :arguments 
                                  ( ("Member" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30173 30187]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30125 30345])
                            ("initializeCongruenceClasses" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30382 30394]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30349 30395])
                            ("makePossiblePHIOfOps" function
                               (:prototype-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30437 30451])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Value" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30493 30520]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30398 30521])
                            ("findLeaderForInst" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("ValueOp" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30549 30570])
                                    ("Visited" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Value" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30598 30632])
                                    ("MemAccess" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30660 30684])
                                    ("OrigInst" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30685 30707])
                                    ("PredBB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30735 30754]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30524 30755])
                            ("OpIsSafeForPHIOfOpsHelper" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30789 30798])
                                    ("PHIBlock" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30799 30826])
                                    ("Visited" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Value" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30860 30900])
                                    ("Worklist" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("Instruction" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30934 30975]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30758 30976])
                            ("OpIsSafeForPHIOfOps" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31004 31014])
                                    ("PHIBlock" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31015 31042])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Value" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [31070 31103]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [30979 31104])
                            ("addPhiOfOps" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Op" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31124 31136])
                                    ("BB" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31137 31152])
                                    ("ExistingValue" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31153 31180]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31107 31181])
                            ("removePhiOfOps" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31204 31219])
                                    ("PHITemp" variable
                                       (:pointer 1
                                        :type ("PHINode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31220 31237]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31184 31238])
                            ("valueNumberMemoryPhi" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("MemoryPhi" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31315 31327]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31289 31328])
                            ("valueNumberInstruction" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31359 31373]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31331 31374])
                            ("checkSimplificationResults" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31449 31462])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31463 31477])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31525 31533]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31404 31540])
                            ("performSymbolicEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31587 31595])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Value" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [31642 31669]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31543 31676])
                            ("performSymbolicLoadCoercion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31725 31732])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31733 31741])
                                    ("" variable
                                       (:pointer 1
                                        :type ("LoadInst" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31742 31753])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31802 31816])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31865 31880]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31679 31887])
                            ("performSymbolicLoadEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31938 31952]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31890 31959])
                            ("performSymbolicStoreEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32011 32025]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31962 32032])
                            ("performSymbolicCallEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32083 32097]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32035 32104])
                            ("sortPHIOps" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Ops" variable (:type ("MutableArrayRef" type
                                         (:template-specifier 
                                            ( ("ValPair" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [32123 32152]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [32107 32159])
                            ("performSymbolicPHIEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("ValPair" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [32209 32227])
                                    ("I" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32277 32292])
                                    ("PHIBlock" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32342 32363]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32162 32370])
                            ("performSymbolicAggrValueEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32426 32440]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32373 32447])
                            ("performSymbolicCmpEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32497 32511]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32450 32518])
                            ("performSymbolicPredicateInfoEvaluation" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32578 32592]))                                  
                                :type ("Expression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32521 32599])
                            ("someEquivalentDominates" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32657 32677])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32678 32698]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [32628 32705])
                            ("lookupOperandLeader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32735 32743]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32708 32750])
                            ("getClassForExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32792 32812]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32753 32819])
                            ("performCongruenceFinding" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32852 32866])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32867 32886]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [32822 32887])
                            ("moveValueToNewCongruenceClass" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32925 32939])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32940 32959])
                                    ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32997 33015])
                                    ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33016 33034]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [32890 33035])
                            ("moveMemoryToNewCongruenceClass" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33074 33088])
                                    ("" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33089 33104])
                                    ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33143 33161])
                                    ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33162 33180]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [33038 33181])
                            ("getNextValueLeader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33210 33228]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33184 33235])
                            ("getNextMemoryLeader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33278 33296]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33238 33303])
                            ("setMemoryClass" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33326 33351])
                                    ("To" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33352 33372]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33306 33373])
                            ("getMemoryClass" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33408 33431]))                                  
                                :type ("CongruenceClass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33376 33438])
                            ("lookupMemoryLeader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33480 33501]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33441 33508])
                            ("isMemoryAccessTOP" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33534 33555]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33511 33562])
                            ("getRank" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33600 33614]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [33579 33621])
                            ("shouldSwapOperands" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33648 33662])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33663 33677]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33624 33684])
                            ("updateReachableEdge" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33741 33754])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33755 33768]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [33716 33769])
                            ("processOutgoingEdges" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33798 33812])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33813 33826]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [33772 33827])
                            ("findConditionEquivalence" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33862 33870]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33830 33877])
                            ("ValueDFS" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol classsubparts) [33899 33915])
                            ("convertClassToDFSOrdered" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33948 33972])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("ValueDFS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [34005 34033])
                                    ("" variable
                                       (:reference 1
                                        :type ("DenseMap" type
                                             (:template-specifier 
                                                ( ("Value" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil)
                                                  ("unsigned int" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [34066 34106])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImpl" type
                                             (:template-specifier 
                                                ( ("Instruction" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [34139 34172]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [33918 34179])
                            ("convertClassToLoadsAndStores" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34216 34240])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("ValueDFS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [34277 34305]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34182 34312])
                            ("eliminateInstructions" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34343 34354]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [34316 34355])
                            ("replaceInstruction" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34382 34396])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34397 34405]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34358 34406])
                            ("markInstructionForDeletion" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34441 34455]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34409 34456])
                            ("deleteInstructionsInBlock" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34490 34503]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34459 34504])
                            ("findPHIOfOpsLeader" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34533 34552])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34553 34573])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34602 34621]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34507 34628])
                            ("handleNewInstruction" function
                               (:arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34689 34703]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34663 34706])
                            ("for_each_found" function
                               (:template 
                                  ( ("Map" type (:type "class") nil nil)
                                    ("KeyType" type (:type "class") nil nil)
                                    ("Func" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Map" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34830 34836])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34837 34853])
                                    ("" variable (:type ("Func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34854 34859]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [34751 34860])
                            ("touchAndErase" function
                               (:template 
                                  ( ("Map" type (:type "class") nil nil)
                                    ("KeyType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Map" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34926 34932])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34933 34949]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [34863 34950])
                            ("markUsersTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34975 34983]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34953 34984])
                            ("markMemoryUsersTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35015 35036]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [34987 35037])
                            ("markMemoryDefTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35066 35087]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35040 35088])
                            ("markPredicateUsersTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35122 35136]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35091 35137])
                            ("markValueLeaderChangeTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CC" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35174 35194]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35140 35195])
                            ("markMemoryLeaderChangeTouched" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("CC" variable
                                       (:pointer 1
                                        :type ("CongruenceClass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35233 35253]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35198 35254])
                            ("markPhiOfOpsChanged" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35282 35302]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35257 35303])
                            ("addPredicateUsers" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("PredicateBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35329 35351])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35352 35366]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35306 35373])
                            ("addMemoryUsers" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("To" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35396 35419])
                                    ("U" variable
                                       (:pointer 1
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35420 35436]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35376 35443])
                            ("addAdditionalUsers" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("To" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35470 35480])
                                    ("User" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35481 35493]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35446 35500])
                            ("iterateTouchedInstructions" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [35538 35572])
                            ("cleanupTables" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [35592 35613])
                            ("assignDFSNumbers" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35663 35676])
                                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35677 35686]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil)
                                          ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [35616 35687])
                            ("updateProcessedCount" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35716 35731]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35690 35732])
                            ("verifyMemoryCongruency" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [35735 35771])
                            ("verifyIterationSettled" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35802 35814]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35774 35815])
                            ("verifyStoreExpressions" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [35818 35854])
                            ("singleReachablePHIPath" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSet" type
                                             (:template-specifier 
                                                ( ("MemoryAccess" type
                                                     (:pointer 1
                                                      :constant-flag t)
                                                      nil nil)
                                                  ("8"))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [35885 35924])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35955 35976])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35977 35998]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [35857 36005])
                            ("getBlockForValue" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36037 36046]))                                  
                                :type ("BasicBlock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36008 36053])
                            ("deleteExpression" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Expression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36078 36098]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [36056 36105])
                            ("getMemoryAccess" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36140 36160]))                                  
                                :type ("MemoryUseOrDef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36108 36167])
                            ("getDefiningAccess" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36202 36223]))                                  
                                :type ("MemoryAccess" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36170 36230])
                            ("getMemoryAccess" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36260 36279]))                                  
                                :type ("MemoryPhi" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36233 36286])
                            ("getMinDFSOfRange" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Range" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Range" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36341 36355]))                                  
                                :pointer 1
                                :methodconst-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [36289 36362])
                            ("InstrToDFSNum" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36389 36404]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [36366 36528])
                            ("InstrToDFSNum" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("MemoryAccess" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36555 36578]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [36532 36621])
                            ("InstrFromDFSNum" function
                               (:pointer 1
                                :arguments 
                                  ( ("DFSNum" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [36648 36664]))                                  
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36625 36695])
                            ("MemoryToDFSNum" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("MA" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36935 36951]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [36911 37203])
                            ("isCycleFree" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Instruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37224 37244]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [37207 37251])
                            ("isBackedge" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37270 37287])
                                    ("To" variable
                                       (:pointer 1
                                        :type ("BasicBlock" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37288 37303]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [37254 37310])
                            ("StartingVNCounter" variable
                               (:default-value "0"
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37469 37499]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [19983 37502]))                  
                :type "namespace")
                nil [19970 37505])
            ("equalsLoadStoreHelper" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("LHS" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37590 37603])
                    ("RHS" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37604 37626]))                  
                :typemodifiers ("static"))
                nil [37534 37755])
            ("equals" function
               (:methodconst-flag t
                :parent "LoadExpression"
                :arguments 
                  ( ("Other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37785 37809]))                  
                :type "bool")
                nil [37757 37865])
            ("equals" function
               (:methodconst-flag t
                :parent "StoreExpression"
                :arguments 
                  ( ("Other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37896 37920]))                  
                :type "bool")
                nil [37867 38196])
            ("isBackedge" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("From" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38270 38287])
                    ("To" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38288 38303]))                  
                :type "bool")
                nil [38246 38436])
            ("getBlockName" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("B" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38485 38505]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [38453 38584])
            ("getMemoryAccess" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38689 38710]))                  
                :type ("MemoryUseOrDef" type (:type "class") nil nil))
                nil [38649 38814])
            ("getMemoryAccess" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("BB" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38909 38930]))                  
                :type ("MemoryPhi" type (:type "class") nil nil))
                nil [38874 38976])
            ("getBlockForValue" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39072 39081]))                  
                :type ("BasicBlock" type (:type "class") nil nil))
                nil [39035 39463])
            ("deleteExpression" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39673 39693]))                  
                :type "void")
                nil [39643 39884])
            ("getCopyOf" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39974 39989]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [39950 40141])
            ("isCopyOfPHI" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40243 40258])
                    ("PN" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PHINode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40259 40277]))                  
                :type "bool")
                nil [40219 40321])
            ("isCopyOfAPHI" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40348 40363]))                  
                :type "bool")
                nil [40323 40427])
            ("sortPHIOps" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("Ops" variable (:type ("MutableArrayRef" type
                         (:template-specifier 
                            ( ("ValPair" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [40616 40645]))                  
                :type "void")
                nil [40592 40826])
            ("alwaysAvailable" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41040 41049]))                  
                :type "bool")
                nil [41012 41100])
            ("createPHIExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("PHIOperands" variable (:type ("ArrayRef" type
                         (:template-specifier 
                            ( ("ValPair" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [41473 41503])
                    ("I" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41547 41568])
                    ("PHIBlock" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41612 41633])
                    ("HasBackedge" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [41677 41695])
                    ("OriginalOpsConstant" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [41739 41765]))                  
                :type ("PHIExpression" type (:type "class") nil nil))
                nil [41430 42862])
            ("setBasicExpressionInfo" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43006 43021])
                    ("E" variable
                       (:pointer 1
                        :type ("BasicExpression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43022 43041]))                  
                :type "bool")
                nil [42970 43646])
            ("createBinaryExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("Opcode" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [43697 43713])
                    ("T" variable
                       (:pointer 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43714 43722])
                    ("Arg1" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43772 43784])
                    ("Arg2" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43785 43797])
                    ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43847 43862]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [43648 44733])
            ("checkSimplificationResults" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("E" variable
                       (:pointer 1
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44947 44961])
                    ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45015 45030])
                    ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45084 45093]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [44894 46816])
            ("createExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46957 46972]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [46914 50502])
            ("createAggregateValueExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50576 50591]))                  
                :type ("AggregateValueExpression" type (:type "class") nil nil))
                nil [50504 51339])
            ("createDeadExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :type ("DeadExpression" type (:type "class") nil nil))
                nil [51341 51547])
            ("createVariableExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51608 51617]))                  
                :type ("VariableExpression" type (:type "class") nil nil))
                nil [51549 51733])
            ("createVariableOrConstant" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51786 51795]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [51735 51922])
            ("createConstantExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("C" variable
                       (:pointer 1
                        :type ("Constant" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51983 51995]))                  
                :type ("ConstantExpression" type (:type "class") nil nil))
                nil [51924 52111])
            ("createUnknownExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52170 52185]))                  
                :type ("UnknownExpression" type (:type "class") nil nil))
                nil [52113 52299])
            ("createCallExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("CI" variable
                       (:pointer 1
                        :type ("CallInst" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52353 52366])
                    ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52367 52390]))                  
                :type ("CallExpression" type (:type "class") nil nil))
                nil [52301 52578])
            ("someEquivalentDominates" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("Inst" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52696 52720])
                    ("U" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52758 52779]))                  
                :type "bool")
                nil [52659 54052])
            ("lookupOperandLeader" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54218 54227]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [54183 54638])
            ("lookupMemoryLeader" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54687 54710]))                  
                :type ("MemoryAccess" type (:type "class") nil nil))
                nil [54640 54938])
            ("isMemoryAccessTOP" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55162 55185]))                  
                :type "bool")
                nil [55131 55236])
            ("createLoadExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("LoadType" variable
                       (:pointer 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55283 55298])
                    ("PointerOp" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55299 55316])
                    ("LI" variable
                       (:pointer 1
                        :type ("LoadInst" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55362 55375])
                    ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55421 55444]))                  
                :type ("LoadExpression" type (:type "class") nil nil))
                nil [55238 56027])
            ("createStoreExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("SI" variable
                       (:pointer 1
                        :type ("StoreInst" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56083 56097])
                    ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56098 56121]))                  
                :type ("StoreExpression" type (:type "class") nil nil))
                nil [56029 56791])
            ("performSymbolicStoreEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56850 56865]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [56793 59324])
            ("performSymbolicLoadCoercion" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("LoadType" variable
                       (:pointer 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59486 59501])
                    ("LoadPtr" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59502 59517])
                    ("LI" variable
                       (:pointer 1
                        :type ("LoadInst" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59554 59567])
                    ("DepInst" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59568 59589])
                    ("DefiningAccess" variable
                       (:pointer 1
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59626 59655]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [59431 62972])
            ("performSymbolicLoadEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63030 63045]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [62974 64864])
            ("performSymbolicPredicateInfoEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64932 64947]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [64866 68831])
            ("performSymbolicCallEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68960 68975]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [68904 69886])
            ("getMemoryClass" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69983 70006]))                  
                :type ("CongruenceClass" type (:type "class") nil nil))
                nil [69943 70136])
            ("setMemoryClass" function
               (:parent "NewGVN"
                :arguments 
                  ( ("From" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70324 70349])
                    ("NewClass" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70378 70404]))                  
                :type "bool")
                nil [70296 72082])
            ("isCycleFree" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72360 72381]))                  
                :type "bool")
                nil [72335 73382])
            ("performSymbolicPHIEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("PHIOps" variable (:type ("ArrayRef" type
                         (:template-specifier 
                            ( ("ValPair" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [73508 73533])
                    ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73571 73586])
                    ("PHIBlock" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73624 73645]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [73452 77251])
            ("performSymbolicAggrValueEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77315 77330]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [77253 77886])
            ("performSymbolicCmpEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77943 77958]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [77888 83162])
            ("performSymbolicEvaluation" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83279 83288])
                    ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Value" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [83323 83357]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [83226 85947])
            ("for_each_found" function
               (:template 
                  ( ("Map" type (:type "class") nil nil)
                    ("KeyType" type (:type "class") nil nil)
                    ("Func" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("Map" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86134 86141])
                    ("Key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86142 86161])
                    ("F" variable (:type ("Func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86162 86169]))                  
                :parent "NewGVN")
                nil [86049 86325])
            ("touchAndErase" function
               (:template 
                  ( ("Map" type (:type "class") nil nil)
                    ("KeyType" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("Map" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86536 86543])
                    ("Key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86544 86563]))                  
                :parent "NewGVN")
                nil [86467 86789])
            ("addAdditionalUsers" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("To" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86823 86833])
                    ("User" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86834 86846]))                  
                :type "void")
                nil [86791 86952])
            ("markUsersTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [86984 86993]))                  
                :type "void")
                nil [86954 87239])
            ("addMemoryUsers" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("To" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87269 87292])
                    ("U" variable
                       (:pointer 1
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87293 87309]))                  
                :type "void")
                nil [87241 87428])
            ("markMemoryDefTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87464 87487]))                  
                :type "void")
                nil [87430 87538])
            ("markMemoryUsersTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("MA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87576 87599]))                  
                :type "void")
                nil [87540 87754])
            ("addPredicateUsers" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("PB" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PredicateBase" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87838 87862])
                    ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [87863 87878]))                  
                :type "void")
                nil [87807 88209])
            ("markPredicateUsersTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88311 88326]))                  
                :type "void")
                nil [88272 88368])
            ("markMemoryLeaderChangeTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("CC" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88463 88483]))                  
                :type "void")
                nil [88420 88546])
            ("markValueLeaderChangeTouched" function
               (:parent "NewGVN"
                :arguments 
                  ( ("CC" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88714 88734]))                  
                :type "void")
                nil [88672 88887])
            ("getMinDFSOfRange" function
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("Range" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("R" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [89084 89099]))                  
                :parent "NewGVN"
                :pointer 1
                :methodconst-flag t)
                nil [89024 89311])
            ("getNextMemoryLeader" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("CC" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [89532 89552]))                  
                :type ("MemoryAccess" type (:type "class") nil nil))
                nil [89484 90407])
            ("getNextValueLeader" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("CC" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [90638 90658]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [90604 91315])
            ("moveMemoryToNewCongruenceClass" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [91770 91785])
                    ("InstMA" variable
                       (:pointer 1
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [91830 91851])
                    ("OldClass" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [91896 91922])
                    ("NewClass" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [91967 91993]))                  
                :type "void")
                nil [91726 93566])
            ("moveValueToNewCongruenceClass" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [93754 93769])
                    ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [93770 93790])
                    ("OldClass" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [93834 93860])
                    ("NewClass" variable
                       (:pointer 1
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [93904 93930]))                  
                :type "void")
                nil [93711 97638])
            ("markPhiOfOpsChanged" function
               (:parent "NewGVN"
                :arguments 
                  ( ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97773 97793]))                  
                :type "void")
                nil [97740 97839])
            ("performCongruenceFinding" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97948 97963])
                    ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97964 97984]))                  
                :type "void")
                nil [97910 101854])
            ("updateReachableEdge" function
               (:parent "NewGVN"
                :arguments 
                  ( ("From" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [102025 102042])
                    ("To" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [102043 102058]))                  
                :type "void")
                nil [101992 103422])
            ("findConditionEquivalence" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("Cond" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103596 103608]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [103556 103712])
            ("processOutgoingEdges" function
               (:parent "NewGVN"
                :arguments 
                  ( ("TI" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103807 103823])
                    ("B" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103824 103838]))                  
                :type "void")
                nil [103773 106806])
            ("removePhiOfOps" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [106871 106886])
                    ("PHITemp" variable
                       (:pointer 1
                        :type ("PHINode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [106887 106904]))                  
                :type "void")
                nil [106843 107424])
            ("addPhiOfOps" function
               (:parent "NewGVN"
                :arguments 
                  ( ("Op" variable
                       (:pointer 1
                        :type ("PHINode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [107520 107532])
                    ("BB" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [107533 107548])
                    ("ExistingValue" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [107574 107601]))                  
                :type "void")
                nil [107495 107979])
            ("okayForPHIOfOps" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108009 108030]))                  
                :type "bool")
                nil [107981 108178])
            ("OpIsSafeForPHIOfOpsHelper" function
               (:parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108224 108233])
                    ("PHIBlock" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108234 108261])
                    ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Value" type
                                     (:pointer 1
                                      :constant-flag t)
                                      nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [108266 108306])
                    ("Worklist" variable
                       (:reference 1
                        :type ("SmallVectorImpl" type
                             (:template-specifier 
                                ( ("Instruction" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [108311 108352]))                  
                :type "bool")
                nil [108180 109408])
            ("OpIsSafeForPHIOfOps" function
               (:parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [109868 109877])
                    ("PHIBlock" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [109878 109905])
                    ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Value" type
                                     (:pointer 1
                                      :constant-flag t)
                                      nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [109939 109979]))                  
                :type "bool")
                nil [109835 110324])
            ("findLeaderForInst" function
               (:pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("TransInst" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110685 110708])
                    ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Value" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [110742 110776])
                    ("MemAccess" variable
                       (:pointer 1
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110810 110834])
                    ("OrigInst" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110835 110857])
                    ("PredBB" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110891 110910]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [110652 111935])
            ("makePossiblePHIOfOps" function
               (:pointer 1
                :parent "NewGVN"
                :constant-flag t
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [112082 112097])
                    ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Value" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [112127 112161]))                  
                :type ("Expression" type (:type "class") nil nil))
                nil [112034 118437])
            ("initializeCongruenceClasses" function
               (:parent "NewGVN"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [118698 118710]))                  
                :type "void")
                nil [118657 121253])
            ("cleanupTables" function
               (:parent "NewGVN"
                :type "void")
                nil [121255 122931])
            ("assignDFSNumbers" function
               (:parent "NewGVN"
                :arguments 
                  ( ("B" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [123076 123090])
                    ("Start" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [123146 123161]))                  
                :type ("std::pair" type
                     (:template-specifier 
                        ( ("unsigned int" type nil nil nil)
                          ("unsigned int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [123021 124173])
            ("updateProcessedCount" function
               (:parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [124209 124224]))                  
                :type "void")
                nil [124175 124460])
            ("valueNumberMemoryPhi" function
               (:parent "NewGVN"
                :arguments 
                  ( ("MP" variable
                       (:pointer 1
                        :type ("MemoryPhi" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [124558 124572]))                  
                :type "void")
                nil [124524 127033])
            ("valueNumberInstruction" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [127191 127206]))                  
                :type "void")
                nil [127155 128719])
            ("singleReachablePHIPath" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("Visited" variable
                       (:reference 1
                        :type ("SmallPtrSet" type
                             (:template-specifier 
                                ( ("MemoryAccess" type
                                     (:pointer 1
                                      :constant-flag t)
                                      nil nil)
                                  ("8"))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [128858 128904])
                    ("First" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [128905 128931])
                    ("Second" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MemoryAccess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [128936 128963]))                  
                :type "bool")
                nil [128817 130276])
            ("verifyMemoryCongruency" function
               (:methodconst-flag t
                :parent "NewGVN"
                :type "void")
                nil [130520 134438])
            ("verifyIterationSettled" function
               (:parent "NewGVN"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [134694 134706]))                  
                :type "void")
                nil [134658 136409])
            ("verifyStoreExpressions" function
               (:methodconst-flag t
                :parent "NewGVN"
                :type "void")
                nil [136744 138210])
            ("iterateTouchedInstructions" function
               (:parent "NewGVN"
                :type "void")
                nil [138429 140780])
            ("runGVN" function
               (:parent "NewGVN"
                :type "bool")
                nil [140830 144385])
            ("ValueDFS" type
               (:parent "NewGVN"
                :members 
                  ( ("DFSIn" variable
                       (:default-value "0"
                        :type "int")
                        (reparse-symbol classsubparts) [144415 144429])
                    ("DFSOut" variable
                       (:default-value "0"
                        :type "int")
                        (reparse-symbol classsubparts) [144432 144447])
                    ("LocalNum" variable
                       (:default-value "0"
                        :type "int")
                        (reparse-symbol classsubparts) [144450 144467])
                    ("Def" variable (:type ("PointerIntPair" type
                         (:template-specifier 
                            ( ("Value" type (:pointer 1) nil nil)
                              ("1")
                              ("bool" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [144598 144635])
                    ("U" variable
                       (:pointer 1
                        :default-value "nullptr"
                        :type ("Use" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [144638 144655])
                    ("<" function
                       (:methodconst-flag t
                        :operator-flag t
                        :arguments 
                          ( ("Other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ValueDFS" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [144674 144696]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [144659 146642]))                  
                :type "struct")
                nil [144387 146645])
            ("convertClassToDFSOrdered" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("Dense" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [146992 147021])
                    ("DFSOrderedSet" variable
                       (:reference 1
                        :type ("SmallVectorImpl" type
                             (:template-specifier 
                                ( ("ValueDFS" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [147022 147063])
                    ("UseCounts" variable
                       (:reference 1
                        :type ("DenseMap" type
                             (:template-specifier 
                                ( ("Value" type
                                     (:pointer 1
                                      :constant-flag t)
                                      nil nil)
                                  ("unsigned int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [147068 147117])
                    ("ProbablyDead" variable
                       (:reference 1
                        :type ("SmallPtrSetImpl" type
                             (:template-specifier 
                                ( ("Instruction" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [147122 147167]))                  
                :type "void")
                nil [146949 150157])
            ("convertClassToLoadsAndStores" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("Dense" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CongruenceClass" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [150357 150386])
                    ("LoadsAndStores" variable
                       (:reference 1
                        :type ("SmallVectorImpl" type
                             (:template-specifier 
                                ( ("ValueDFS" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [150391 150433]))                  
                :type "void")
                nil [150310 150998])
            ("patchAndReplaceAllUsesWith" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [151039 151054])
                    ("Repl" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [151055 151067]))                  
                :type "void")
                nil [151000 151142])
            ("deleteInstructionsInBlock" function
               (:parent "NewGVN"
                :arguments 
                  ( ("BB" variable
                       (:pointer 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [151183 151198]))                  
                :type "void")
                nil [151144 152193])
            ("markInstructionForDeletion" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [152235 152250]))                  
                :type "void")
                nil [152195 152350])
            ("replaceInstruction" function
               (:parent "NewGVN"
                :arguments 
                  ( ("I" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [152384 152399])
                    ("V" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [152400 152409]))                  
                :type "void")
                nil [152352 152666])
            ("unnamed" type
               (:members 
                  ( ("ValueDFSStack" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [152797 152804])
                            ("back" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [152807 152856])
                            ("dfs_back" function
                               (:methodconst-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [152859 152923])
                            ("push_back" function
                               (:arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("Value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [152942 152951])
                                    ("DFSIn" variable (:type "int") (reparse-symbol arg-sub-list) [152952 152962])
                                    ("DFSOut" variable (:type "int") (reparse-symbol arg-sub-list) [152963 152974]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [152927 153054])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [153058 153105])
                            ("isInScope" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("DFSIn" variable (:type "int") (reparse-symbol arg-sub-list) [153124 153134])
                                    ("DFSOut" variable (:type "int") (reparse-symbol arg-sub-list) [153135 153146]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [153109 153274])
                            ("popUntilDFSScope" function
                               (:arguments 
                                  ( ("DFSIn" variable (:type "int") (reparse-symbol arg-sub-list) [153300 153310])
                                    ("DFSOut" variable (:type "int") (reparse-symbol arg-sub-list) [153311 153322]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [153278 153677])
                            ("private" label nil (reparse-symbol classsubparts) [153679 153687])
                            ("ValueStack" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("Value" type (:pointer 1) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [153690 153725])
                            ("DFSStack" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("std::pair" type (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        ) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [153728 153773]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [152775 153776]))                  
                :type "namespace")
                nil [152668 153779])
            ("getClassForExpression" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [153912 153932]))                  
                :type ("CongruenceClass" type (:type "class") nil nil))
                nil [153865 154142])
            ("findPHIOfOpsLeader" function
               (:methodconst-flag t
                :pointer 1
                :parent "NewGVN"
                :arguments 
                  ( ("E" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Expression" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [154315 154335])
                    ("OrigInst" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [154370 154398])
                    ("BB" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [154433 154454]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [154281 155288])
            ("eliminateInstructions" function
               (:parent "NewGVN"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [155325 155337]))                  
                :type "bool")
                nil [155290 170582])
            ("getRank" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("V" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [170961 170976]))                  
                :type "unsigned int")
                nil [170932 171630])
            ("shouldSwapOperands" function
               (:methodconst-flag t
                :parent "NewGVN"
                :arguments 
                  ( ("A" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [171787 171802])
                    ("B" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [171803 171818]))                  
                :type "bool")
                nil [171755 172129])
            ("unnamed" type
               (:members 
                  ( ("NewGVNLegacyPass" type
                       (:superclasses 
                          ( ("FunctionPass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [172191 172198])
                            ("ID" variable
                               (:typemodifiers ("static")
                                :type "char")
                                (reparse-symbol classsubparts) [172251 172266])
                            ("NewGVNLegacyPass" function
                               (:constructor-flag t
                                :type ("NewGVNLegacyPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [172270 172383])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [172419 172428])
                            ("private" label nil (reparse-symbol classsubparts) [172430 172438]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [172144 172833]))                  
                :type "namespace")
                nil [172131 172836])
            ("runOnFunction" function
               (:parent "NewGVNLegacyPass"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [172902 172914]))                  
                :type "bool")
                nil [172865 173381])
            ("NewGVNLegacyPass::ID" variable
               (:default-value "0"
                :type "char")
                nil [173383 173413])
            ("createNewGVNPass" function
               (:pointer 1
                :parent "llvm"
                :type ("FunctionPass" type (:type "class") nil nil))
                nil [173998 174071])
            ("run" function
               (:parent "NewGVNPass"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [174107 174119])
                    ("AM" variable
                       (:reference 1
                        :type ("AnalysisManager" type
                             (:template-specifier 
                                ( ("Function" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [174120 174150]))                  
                :type ("PreservedAnalyses" type (:type "class") nil nil))
                nil [174073 174856]))          
      :file "NewGVN.cpp"
      :pointmax 174857
      :fsize 174856
      :lastmodtime '(24391 26990 459407 854000)
      :unmatched-syntax '((semantic-list 173854 . 173942) (symbol 173835 . 173854) (string 173883 . 173907) (string 173873 . 173881) (semantic-list 173812 . 173834) (symbol 173786 . 173812) (semantic-list 173763 . 173785) (symbol 173737 . 173763) (semantic-list 173706 . 173736) (symbol 173680 . 173706) (semantic-list 173653 . 173679) (symbol 173627 . 173653) (semantic-list 173604 . 173626) (symbol 173578 . 173604) (semantic-list 173553 . 173577) (symbol 173527 . 173553) (semantic-list 173436 . 173526) (symbol 173415 . 173436) (string 173465 . 173489) (string 173455 . 173463) (semantic-list 172497 . 172830) (symbol 172488 . 172496) (CONST 172482 . 172487) (semantic-list 172462 . 172481) (symbol 172446 . 172462) (VOID 172441 . 172445) (semantic-list 172405 . 172418) (symbol 172392 . 172405) (BOOL 172387 . 172391) (punctuation 28369 . 28370) (symbol 28361 . 28368) (USING 28355 . 28360) (USING 26237 . 26242) (punctuation 25628 . 25629) (symbol 25609 . 25627) (USING 25603 . 25608) (EXPLICIT 18200 . 18208) (EXPLICIT 13498 . 13506) (punctuation 13451 . 13452) (symbol 13435 . 13450) (USING 13429 . 13434) (USING 13391 . 13396) (punctuation 13357 . 13358) (symbol 13347 . 13356) (USING 13341 . 13346) (USING 13313 . 13318) (punctuation 7893 . 7894) (DEFAULT 7886 . 7893) (punctuation 7884 . 7885) (semantic-list 7881 . 7883) (symbol 7868 . 7881) (punctuation 7867 . 7868) (punctuation 7866 . 7867) (punctuation 7865 . 7866) (symbol 7852 . 7865) (punctuation 7850 . 7851) (DEFAULT 7843 . 7850) (punctuation 7841 . 7842) (semantic-list 7838 . 7840) (symbol 7814 . 7838) (punctuation 7813 . 7814) (punctuation 7812 . 7813) (punctuation 7811 . 7812) (symbol 7787 . 7811) (punctuation 7785 . 7786) (DEFAULT 7778 . 7785) (punctuation 7776 . 7777) (semantic-list 7773 . 7775) (symbol 7758 . 7773) (punctuation 7757 . 7758) (punctuation 7756 . 7757) (punctuation 7755 . 7756) (symbol 7740 . 7755) (punctuation 7738 . 7739) (DEFAULT 7731 . 7738) (punctuation 7729 . 7730) (semantic-list 7726 . 7728) (symbol 7712 . 7726) (punctuation 7711 . 7712) (punctuation 7710 . 7711) (punctuation 7709 . 7710) (symbol 7695 . 7709) (punctuation 7693 . 7694) (DEFAULT 7686 . 7693) (punctuation 7684 . 7685) (semantic-list 7681 . 7683) (symbol 7667 . 7681) (punctuation 7666 . 7667) (punctuation 7665 . 7666) (punctuation 7664 . 7665) (symbol 7650 . 7664) (punctuation 7648 . 7649) (DEFAULT 7641 . 7648) (punctuation 7639 . 7640) (semantic-list 7636 . 7638) (symbol 7621 . 7636) (punctuation 7620 . 7621) (punctuation 7619 . 7620) (punctuation 7618 . 7619) (symbol 7603 . 7618) (punctuation 7601 . 7602) (DEFAULT 7594 . 7601) (punctuation 7592 . 7593) (semantic-list 7589 . 7591) (symbol 7579 . 7589) (punctuation 7578 . 7579) (punctuation 7577 . 7578) (punctuation 7576 . 7577) (symbol 7566 . 7576) (semantic-list 7239 . 7245) (string 7210 . 7229) (semantic-list 7074 . 7081) (string 6996 . 7021) (string 6729 . 6783) (string 6701 . 6713) (string 6619 . 6667) (string 6592 . 6603) (string 6518 . 6564) (string 6437 . 6467) (string 6357 . 6401) (string 6285 . 6326) (string 6195 . 6228) (string 6129 . 6155) (string 6041 . 6095) (string 5949 . 5997) (string 5883 . 5917) (string 5823 . 5849) (string 5757 . 5789) (punctuation 28369 . 28370) (symbol 28361 . 28368) (USING 28355 . 28360) (USING 26237 . 26242) (punctuation 25628 . 25629) (symbol 25609 . 25627) (USING 25603 . 25608) (EXPLICIT 18200 . 18208) (EXPLICIT 13498 . 13506) (punctuation 13451 . 13452) (symbol 13435 . 13450) (USING 13429 . 13434) (USING 13391 . 13396) (punctuation 13357 . 13358) (symbol 13347 . 13356) (USING 13341 . 13346) (USING 13313 . 13318) (punctuation 7893 . 7894) (DEFAULT 7886 . 7893) (punctuation 7884 . 7885) (semantic-list 7881 . 7883) (symbol 7868 . 7881) (punctuation 7867 . 7868) (punctuation 7866 . 7867) (punctuation 7865 . 7866) (symbol 7852 . 7865) (punctuation 7850 . 7851) (DEFAULT 7843 . 7850) (punctuation 7841 . 7842) (semantic-list 7838 . 7840) (symbol 7814 . 7838) (punctuation 7813 . 7814) (punctuation 7812 . 7813) (punctuation 7811 . 7812) (symbol 7787 . 7811) (punctuation 7785 . 7786) (DEFAULT 7778 . 7785) (punctuation 7776 . 7777) (semantic-list 7773 . 7775) (symbol 7758 . 7773) (punctuation 7757 . 7758) (punctuation 7756 . 7757) (punctuation 7755 . 7756) (symbol 7740 . 7755) (punctuation 7738 . 7739) (DEFAULT 7731 . 7738) (punctuation 7729 . 7730) (semantic-list 7726 . 7728) (symbol 7712 . 7726) (punctuation 7711 . 7712) (punctuation 7710 . 7711) (punctuation 7709 . 7710) (symbol 7695 . 7709) (punctuation 7693 . 7694) (DEFAULT 7686 . 7693) (punctuation 7684 . 7685) (semantic-list 7681 . 7683) (symbol 7667 . 7681) (punctuation 7666 . 7667) (punctuation 7665 . 7666) (punctuation 7664 . 7665) (symbol 7650 . 7664) (punctuation 7648 . 7649) (DEFAULT 7641 . 7648) (punctuation 7639 . 7640) (semantic-list 7636 . 7638) (symbol 7621 . 7636) (punctuation 7620 . 7621) (punctuation 7619 . 7620) (punctuation 7618 . 7619) (symbol 7603 . 7618) (punctuation 7601 . 7602) (DEFAULT 7594 . 7601) (punctuation 7592 . 7593) (semantic-list 7589 . 7591) (symbol 7579 . 7589) (punctuation 7578 . 7579) (punctuation 7577 . 7578) (punctuation 7576 . 7577) (symbol 7566 . 7576) (semantic-list 7239 . 7245) (string 7210 . 7229) (semantic-list 7074 . 7081) (string 6996 . 7021) (string 6729 . 6783) (string 6701 . 6713) (string 6619 . 6667) (string 6592 . 6603) (string 6518 . 6564) (string 6437 . 6467) (string 6357 . 6401) (string 6285 . 6326) (string 6195 . 6228) (string 6129 . 6155) (string 6041 . 6095) (string 5949 . 5997) (string 5883 . 5917) (string 5823 . 5849) (string 5757 . 5789))
      :lexical-table 
        '(("DEBUG_TYPE" . ((string "\"newgvn\"" 5717 . 5725)))
          )
))
  :file "!home!khadinh!gits!llvm-project!llvm!lib!Transforms!Scalar!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
