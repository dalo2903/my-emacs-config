;; Object semanticdb-project-database-file-155f75e52234
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-155f75e52234"
  :tables
  (list
    (semanticdb-table "semanticdb-table-155f75e52246"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_PASS_H" variable (:constant-flag t) nil [1387 1398])
            ("llvm/ADT/StringRef.h" include nil nil [1400 1431])
            ("string" include (:system-flag t) nil [1432 1449])
            ("llvm" type
               (:members 
                  ( ("AnalysisResolver" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1469 1492])
                    ("AnalysisUsage" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1493 1513])
                    ("BasicBlock" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1514 1531])
                    ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1532 1547])
                    ("ImmutablePass" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1548 1568])
                    ("Module" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1569 1582])
                    ("PassInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1583 1598])
                    ("PMDataManager" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1599 1619])
                    ("PMStack" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1620 1634])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1635 1653])
                    ("PassManagerType" type
                       (:members 
                          ( ("PMT_Unknown" variable
                               (:constant-flag t
                                :default-value (1975 1976)
                                :type "int")
                                (reparse-symbol enumsubparts) [1961 1976])
                            ("PMT_ModulePassManager" variable
                               (:constant-flag t
                                :default-value (2004 2005)
                                :type "int")
                                (reparse-symbol enumsubparts) [1980 2005])
                            ("PMT_CallGraphPassManager" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2028 2053])
                            ("PMT_FunctionPassManager" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2076 2100])
                            ("PMT_LoopPassManager" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2124 2144])
                            ("PMT_RegionPassManager" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2172 2194])
                            ("PMT_Last" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2220 2230]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [1936 2231])
                    ("PassKind" type
                       (:members 
                          ( ("PT_Region" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2281 2291])
                            ("PT_Loop" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2294 2302])
                            ("PT_Function" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2305 2317])
                            ("PT_CallGraphSCC" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2320 2336])
                            ("PT_Module" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2339 2349])
                            ("PT_PassManager" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2352 2368]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [2263 2369])
                    ("Pass" type
                       (:members 
                          ( ("Resolver" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("AnalysisResolver" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2662 2699])
                            ("PassID" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2731 2750])
                            ("Kind" variable (:type ("PassKind" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2753 2767])
                            ("public" label nil (reparse-symbol classsubparts) [2769 2776])
                            ("Pass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("K" variable (:type ("PassKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2793 2804])
                                    ("pid" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [2805 2815]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2788 2842])
                            ("Pass" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [2918 2934])
                            ("getPassKind" function
                               (:methodconst-flag t
                                :type ("PassKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2938 2983])
                            ("getPassName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3192 3230])
                            ("getPassID" function
                               (:methodconst-flag t
                                :type ("AnalysisID" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3308 3361])
                            ("doInitialization" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3525 3534]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3495 3553])
                            ("doFinalization" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3709 3718]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3681 3736])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4162 4178])
                                    ("M" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4179 4195]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4143 4202])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4206 4224])
                            ("createPrinterPass" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4419 4435])
                                    ("Banner" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4470 4496]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4387 4507])
                            ("assignPassManager" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("PMStack" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4663 4673])
                                    ("" variable (:type ("PassManagerType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4707 4723]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4632 4726])
                            ("preparePassManager" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("PMStack" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4836 4846]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4804 4847])
                            ("getPotentialPassManagerType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("PassManagerType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4913 4973])
                            ("setResolver" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("AR" variable
                                       (:pointer 1
                                        :type ("AnalysisResolver" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5023 5044]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5006 5045])
                            ("getResolver" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("AnalysisResolver" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5048 5106])
                            ("getAnalysisUsage" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("AnalysisUsage" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5421 5437]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5391 5444])
                            ("releaseMemory" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [6066 6095])
                            ("getAdjustedAnalysisPointer" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("ID" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6390 6404]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6349 6405])
                            ("getAsImmutablePass" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("ImmutablePass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6408 6452])
                            ("getAsPMDataManager" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("PMDataManager" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6455 6499])
                            ("verifyAnalysis" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [6624 6660])
                            ("dumpPassStructure" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("Offset" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [6769 6788]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6738 6790])
                            ("lookupPassInfo" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("TI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6945 6960]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6907 6961])
                            ("lookupPassInfo" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("Arg" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7131 7145]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7093 7146])
                            ("createPass" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("ID" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7271 7285]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7247 7286])
                            ("getAnalysisIfAvailable" function
                               (:template 
                                  ( ("AnalysisType" type (:type "class") nil nil))                                  
                                :type ("AnalysisType" type (:type "class") nil nil)
                                :pointer 1
                                :methodconst-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [7801 7883])
                            ("mustPreserveAnalysisID" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("AID" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [8329 8339]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8301 8346])
                            ("getAnalysis" function
                               (:template 
                                  ( ("AnalysisType" type (:type "class") nil nil))                                  
                                :type ("AnalysisType" type (:type "class") nil nil)
                                :methodconst-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [8537 8605])
                            ("getAnalysis" function
                               (:template 
                                  ( ("AnalysisType" type (:type "class") nil nil))                                  
                                :type ("AnalysisType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8705 8717]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [8645 8718])
                            ("getAnalysisID" function
                               (:template 
                                  ( ("AnalysisType" type (:type "class") nil nil))                                  
                                :type ("AnalysisType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8820 8834]))                                  
                                :methodconst-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [8758 8841])
                            ("getAnalysisID" function
                               (:template 
                                  ( ("AnalysisType" type (:type "class") nil nil))                                  
                                :type ("AnalysisType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8907 8921])
                                    ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8922 8934]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [8845 8935]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2647 8938])
                    ("ModulePass" type
                       (:superclasses 
                          ( ("Pass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [9234 9241])
                            ("ModulePass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("pid" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [9264 9274]))                                  
                                :type ("ModulePass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9253 9300])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [9357 9366])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9517 9532])
                            ("runOnModule" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9667 9677]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9642 9682])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [9742 9751])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9863 9878])
                            ("protected" label nil (reparse-symbol classsubparts) [9880 9890])
                            ("skipModule" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("M" variable
                                       (:reference 1
                                        :type ("Module" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10062 10072]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10046 10079]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9201 10082])
                    ("ImmutablePass" type
                       (:superclasses 
                          ( ("ModulePass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [10408 10415])
                            ("ImmutablePass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("pid" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [10441 10451]))                                  
                                :type ("ImmutablePass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10427 10472])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [10532 10541])
                            ("initializePass" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [10900 10930]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [10366 11092])
                    ("FunctionPass" type
                       (:superclasses 
                          ( ("Pass" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [11573 11580])
                            ("FunctionPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("pid" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [11605 11615]))                                  
                                :type ("FunctionPass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11592 11643])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [11796 11811])
                            ("runOnFunction" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11956 11968]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [11929 11973])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [12033 12042])
                            ("override" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [12154 12169])
                            ("protected" label nil (reparse-symbol classsubparts) [12171 12181])
                            ("skipFunction" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("F" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12400 12418]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12382 12425]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [11538 12428])
                    ("TimePassesIsEnabled" variable
                       (:typemodifiers ("extern")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12630 12662]))                  
                :type "namespace")
                nil [1451 12665])
            ("llvm/PassAnalysisSupport.h" include nil nil [12847 12884])
            ("llvm/PassSupport.h" include nil nil [12885 12914]))          
      :file "Pass.h"
      :pointmax 12938
      :fsize 12937
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((semantic-list 12151 . 12153) (symbol 12124 . 12151) (symbol 12108 . 12123) (semantic-list 11999 . 12032) (symbol 11982 . 11999) (VOID 11977 . 11981) (semantic-list 11725 . 11795) (symbol 11708 . 11725) (punctuation 11707 . 11708) (symbol 11702 . 11706) (EXPLICIT 11583 . 11591) (semantic-list 11072 . 11089) (symbol 11063 . 11071) (semantic-list 11052 . 11062) (symbol 11041 . 11052) (BOOL 11036 . 11040) (semantic-list 10979 . 10995) (symbol 10970 . 10978) (semantic-list 10967 . 10969) (symbol 10949 . 10967) (punctuation 10948 . 10949) (symbol 10934 . 10947) (semantic-list 10529 . 10531) (symbol 10516 . 10529) (punctuation 10515 . 10516) (EXPLICIT 10418 . 10426) (semantic-list 9860 . 9862) (symbol 9833 . 9860) (symbol 9817 . 9832) (semantic-list 9708 . 9741) (symbol 9691 . 9708) (VOID 9686 . 9690) (semantic-list 9446 . 9516) (symbol 9429 . 9446) (punctuation 9428 . 9429) (symbol 9423 . 9427) (semantic-list 9354 . 9356) (symbol 9344 . 9354) (punctuation 9343 . 9344) (EXPLICIT 9244 . 9252) (punctuation 2914 . 2915) (DELETE 2908 . 2914) (punctuation 2906 . 2907) (semantic-list 2891 . 2905) (punctuation 2890 . 2891) (OPERATOR 2882 . 2890) (punctuation 2881 . 2882) (symbol 2876 . 2880) (punctuation 2872 . 2873) (DELETE 2866 . 2872) (punctuation 2864 . 2865) (semantic-list 2849 . 2863) (symbol 2845 . 2849) (EXPLICIT 2779 . 2787) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (VOID 1735 . 1739) (CONST 1729 . 1734) (punctuation 1727 . 1728) (symbol 1716 . 1726) (USING 1710 . 1715))
      :lexical-table 
        '(("LLVM_PASS_H")
          )
)
    (semanticdb-table "semanticdb-table-155f75de03c0"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_PASSANALYSISSUPPORT_H" variable (:constant-flag t) nil [728 754])
            ("Pass.h" include nil nil [756 773])
            ("llvm/ADT/SmallVector.h" include nil nil [774 807])
            ("llvm/ADT/StringRef.h" include nil nil [808 839])
            ("cassert" include (:system-flag t) nil [840 858])
            ("utility" include (:system-flag t) nil [859 877])
            ("vector" include (:system-flag t) nil [878 895])
            ("llvm" type
               (:members 
                  ( ("Function" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [915 930])
                    ("Pass" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [931 942])
                    ("PMDataManager" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [943 963])
                    ("AnalysisUsage" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1523 1530])
                            ("SmallVectorImpl" variable (:type "int") (reparse-symbol classsubparts) [1552 1580])
                            ("private" label nil (reparse-symbol classsubparts) [1582 1590])
                            ("Required" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("AnalysisID" type nil nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1840 1876])
                            ("RequiredTransitive" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("AnalysisID" type nil nil nil)
                                      ("2"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1879 1925])
                            ("Preserved" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("AnalysisID" type nil nil nil)
                                      ("2"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1928 1965])
                            ("Used" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("AnalysisID" type nil nil nil)
                                      ("0"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1968 2000])
                            ("PreservesAll" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [2003 2029])
                            ("public" label nil (reparse-symbol classsubparts) [2031 2038])
                            ("addRequiredID" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2185 2200]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2156 2201])
                            ("addRequiredID" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [2233 2242]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2204 2243])
                            ("addRequired" function
                               (:template 
                                  ( ("PassClass" type (:type "class") nil nil))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2246 2349])
                            ("addRequiredTransitiveID" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ID" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [2392 2401]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2353 2402])
                            ("addRequiredTransitive" function
                               (:template 
                                  ( ("PassClass" type (:type "class") nil nil))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2405 2528])
                            ("addPreservedID" function
                               (:arguments 
                                  ( ("ID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2652 2667]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2622 2720])
                            ("addPreservedID" function
                               (:arguments 
                                  ( ("ID" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [2753 2762]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2723 2816])
                            ("addPreserved" function
                               (:template 
                                  ( ("PassClass" type (:type "class") nil nil))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2901 3023])
                            ("addUsedIfAvailableID" function
                               (:arguments 
                                  ( ("ID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3177 3192]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3141 3240])
                            ("addUsedIfAvailableID" function
                               (:arguments 
                                  ( ("ID" variable
                                       (:reference 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [3279 3288]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3243 3337])
                            ("addUsedIfAvailable" function
                               (:template 
                                  ( ("PassClass" type (:type "class") nil nil))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3417 3540])
                            ("addPreserved" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Arg" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3843 3857]))                                  
                                :type ("AnalysisUsage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3815 3858])
                            ("setPreservesAll" function (:type "void") (reparse-symbol classsubparts) [3925 3972])
                            ("getPreservesAll" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4051 4104])
                            ("setPreservesCFG" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4438 4461])
                            ("getRequiredSet" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("VectorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4465 4526])
                            ("getRequiredTransitiveSet" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("VectorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4529 4616])
                            ("getPreservedSet" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("VectorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4619 4682])
                            ("getUsedSet" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("VectorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4685 4738]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1501 4741])
                    ("AnalysisResolver" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [5015 5022])
                            ("AnalysisResolver" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :type ("PMDataManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5082 5099]))                                  
                                :type ("AnalysisResolver" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5065 5110])
                            ("getPMDataManager" function (:type ("PMDataManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5114 5162])
                            ("findImplPass" function
                               (:pointer 1
                                :arguments 
                                  ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5226 5240]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5207 5463])
                            ("findImplPass" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :type ("Pass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5559 5567])
                                    ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5568 5582])
                                    ("F" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5583 5595]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5540 5596])
                            ("addAnalysisImplsPair" function
                               (:arguments 
                                  ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5626 5640])
                                    ("P" variable
                                       (:pointer 1
                                        :type ("Pass" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5641 5649]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5600 5795])
                            ("clearAnalysisImpls" function (:type "void") (reparse-symbol classsubparts) [5876 5934])
                            ("getAnalysisIfAvailable" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :arguments 
                                  ( ("ID" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6025 6039])
                                    ("Direction" variable (:type "bool") (reparse-symbol arg-sub-list) [6040 6055]))                                  
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5996 6062])
                            ("private" label nil (reparse-symbol classsubparts) [6064 6072])
                            ("AnalysisImpls" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::pair" type (:template-specifier 
                                        ( ("AnalysisID" type nil nil nil)
                                          ("Pass" type (:pointer 1) nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6214 6271])
                            ("PM" variable (:type ("PMDataManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6331 6349]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4990 6352])
                    ("getAnalysisIfAvailable" function
                       (:template 
                          ( ("AnalysisType" type (:type "class") nil nil))                          
                        :type ("AnalysisType" type (:type "class") nil nil)
                        :parent "Pass"
                        :pointer 1
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [6851 7473])
                    ("getAnalysis" function
                       (:template 
                          ( ("AnalysisType" type (:type "class") nil nil))                          
                        :type ("AnalysisType" type (:type "class") nil nil)
                        :parent "Pass"
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [7656 7867])
                    ("getAnalysisID" function
                       (:template 
                          ( ("AnalysisType" type (:type "class") nil nil))                          
                        :type ("AnalysisType" type (:type "class") nil nil)
                        :arguments 
                          ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7935 7949]))                          
                        :parent "Pass"
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [7869 8747])
                    ("getAnalysis" function
                       (:template 
                          ( ("AnalysisType" type (:type "class") nil nil))                          
                        :type ("AnalysisType" type (:type "class") nil nil)
                        :arguments 
                          ( ("F" variable
                               (:reference 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8994 9006]))                          
                        :parent "Pass")
                        (reparse-symbol namespacesubparts) [8930 9149])
                    ("getAnalysisID" function
                       (:template 
                          ( ("AnalysisType" type (:type "class") nil nil))                          
                        :type ("AnalysisType" type (:type "class") nil nil)
                        :arguments 
                          ( ("PI" variable (:type ("AnalysisID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9217 9231])
                            ("F" variable
                               (:reference 1
                                :type ("Function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9232 9244]))                          
                        :parent "Pass")
                        (reparse-symbol namespacesubparts) [9151 9995]))                  
                :type "namespace")
                nil [897 9998]))          
      :file "PassAnalysisSupport.h"
      :pointmax 10059
      :fsize 10058
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((EXPLICIT 5056 . 5064) (punctuation 5052 . 5053) (DELETE 5046 . 5052) (punctuation 5044 . 5045) (semantic-list 5041 . 5043) (symbol 5025 . 5041) (punctuation 2066 . 2067) (DEFAULT 2059 . 2066) (punctuation 2057 . 2058) (semantic-list 2054 . 2056) (symbol 2041 . 2054) (punctuation 1550 . 1551) (symbol 1539 . 1549) (USING 1533 . 1538))
      :lexical-table 
        '(("LLVM_PASSANALYSISSUPPORT_H")
          )
)
    (semanticdb-table "semanticdb-table-155f75de03f8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_PASSSUPPORT_H" variable (:constant-flag t) nil [785 803])
            ("llvm/ADT/StringRef.h" include nil nil [805 836])
            ("llvm/PassInfo.h" include nil nil [837 863])
            ("llvm/PassRegistry.h" include nil nil [864 894])
            ("llvm/Support/Threading.h" include nil nil [895 930])
            ("functional" include (:system-flag t) nil [931 952])
            ("llvm" type
               (:members 
                  ( ("Pass" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [972 983])
                    ("INITIALIZE_PASS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [993 1008])
                    ("INITIALIZE_PASS_BEGIN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1970 1991])
                    ("INITIALIZE_PASS_DEPENDENCY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2124 2150])
                    ("INITIALIZE_AG_DEPENDENCY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2205 2229])
                    ("INITIALIZE_PASS_END" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2335 2354])
                    ("INITIALIZE_PASS_WITH_OPTIONS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3231 3259])
                    ("INITIALIZE_PASS_WITH_OPTIONS_BEGIN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3533 3567])
                    ("callDefaultCtor" function
                       (:template 
                          ( ("PassName" type (:type "class") nil nil))                          
                        :type ("Pass" type (:type "class") nil nil)
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [3719 3798])
                    ("RegisterPass" type
                       (:template 
                          ( ("passName" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("RegisterPass" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("PassArg" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4624 4642])
                                    ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4643 4658])
                                    ("CFGOnly" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [4659 4679])
                                    ("is_analysis" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [4696 4720]))                                  
                                :type ("RegisterPass" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [4611 4939]))                          
                        :superclasses 
                          ( ("PassInfo" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [4492 4942])
                    ("RegisterAGBase" type
                       (:superclasses 
                          ( ("PassInfo" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [5997 6004])
                            ("RegisterAGBase" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6022 6037])
                                    ("InterfaceID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6038 6062])
                                    ("PassID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6080 6108])
                                    ("isDefault" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [6110 6132]))                                  
                                :type ("RegisterAGBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6007 6134]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5956 6137])
                    ("RegisterAnalysisGroup" type
                       (:template 
                          ( ("Interface" type (:type "class") nil nil)
                            ("bool" type (:typevar "Default") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("RegisterAnalysisGroup" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("RPB" variable
                                       (:reference 1
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6279 6293]))                                  
                                :type ("RegisterAnalysisGroup" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [6257 6405])
                            ("RegisterAnalysisGroup" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Name" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [6440 6457]))                                  
                                :type ("RegisterAnalysisGroup" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [6418 6505]))                          
                        :superclasses 
                          ( ("RegisterAGBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [6139 6508])
                    ("INITIALIZE_ANALYSIS_GROUP" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6518 6543])
                    ("INITIALIZE_AG_PASS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7495 7513])
                    ("INITIALIZE_AG_PASS_BEGIN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8958 8982])
                    ("INITIALIZE_AG_PASS_END" variable (:constant-flag t) (reparse-symbol namespacesubparts) [9253 9275])
                    ("PassRegistrationListener" type
                       (:members 
                          ( ("passRegistered" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11071 11088]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11043 11091])
                            ("enumeratePasses" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [11221 11244])
                            ("passEnumerate" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11405 11422]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11378 11425]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [10790 11428]))                  
                :type "namespace")
                nil [954 11431]))          
      :file "PassSupport.h"
      :pointmax 11484
      :fsize 11483
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((punctuation 10911 . 10912) (DEFAULT 10904 . 10911) (punctuation 10902 . 10903) (semantic-list 10899 . 10901) (symbol 10875 . 10899) (punctuation 10874 . 10875) (VIRTUAL 10866 . 10873) (punctuation 10862 . 10863) (DEFAULT 10855 . 10862) (punctuation 10853 . 10854) (semantic-list 10850 . 10852) (symbol 10826 . 10850) (EXPLICIT 6409 . 6417) (EXPLICIT 6248 . 6256))
      :lexical-table 
        '(("INITIALIZE_PASS_END" (spp-arg-list ("passName" "arg" "name" "cfg" "analysis") 2354 . 2390) . 
              ((symbol "PassInfo" 2410 . 2418) (punctuation "*" 2419 . 2420) (symbol "PI" 2420 . 2422) (punctuation "=" 2423 . 2424) (NEW "new" 2425 . 2428) (symbol "PassInfo" 2429 . 2437) (semantic-list "(                                                 \\
      name, arg, &passName::ID,                                                \\
      PassInfo::NormalCtor_t(callDefaultCtor<passName>), cfg, analysis)" 2437 . 2641) (punctuation ";" 2641 . 2642) (symbol "Registry" 2653 . 2661) (punctuation "." 2661 . 2662) (symbol "registerPass" 2662 . 2674) (semantic-list "(*PI, true)" 2674 . 2685) (punctuation ";" 2685 . 2686) (RETURN "return" 2734 . 2740) (symbol "PI" 2741 . 2743) (punctuation ";" 2743 . 2744) (close-paren "}" 2815 . 2816) (STATIC "static" 2896 . 2902) (symbol "llvm" 2903 . 2907) (punctuation ":" 2907 . 2908) (punctuation ":" 2908 . 2909) (symbol "once_flag" 2909 . 2918) (spp-symbol-merge ((spp-symbol-merge ((symbol "Initialize" 2919 . 2929) (symbol "passName" 2931 . 2939)) 2919 . 2939) (symbol "PassFlag" 2941 . 2949)) 2919 . 2949) (punctuation ";" 2949 . 2950) (VOID "void" 2977 . 2981) (symbol "llvm" 2982 . 2986) (punctuation ":" 2986 . 2987) (punctuation ":" 2987 . 2988) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 2988 . 2998) (symbol "passName" 3000 . 3008)) 2988 . 3008) (symbol "Pass" 3010 . 3014)) 2988 . 3014) (semantic-list "(PassRegistry &Registry)" 3014 . 3038) (semantic-list "{              \\
    llvm::call_once(Initialize##passName##PassFlag,                            \\
                    initialize##passName##PassOnce, std::ref(Registry));       \\
  }" 3039 . 3221)))
          ("INITIALIZE_ANALYSIS_GROUP" (spp-arg-list ("agName" "name" "defaultPass") 6543 . 6570) . 
              ((STATIC "static" 6593 . 6599) (VOID "void" 6600 . 6604) (punctuation "*" 6605 . 6606) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 6606 . 6616) (symbol "agName" 6618 . 6624)) 6606 . 6624) (symbol "AnalysisGroupOnce" 6626 . 6643)) 6606 . 6643) (semantic-list "(PassRegistry &Registry)" 6643 . 6667) (semantic-list "{ \\
    initialize##defaultPass##Pass(Registry);                                   \\
    PassInfo *AI = new PassInfo(name, &agName::ID);                            \\
    Registry.registerAnalysisGroup(&agName::ID, 0, *AI, false, true);          \\
    return AI;                                                                 \\
  }" 6668 . 6999) (STATIC "static" 7079 . 7085) (symbol "llvm" 7086 . 7090) (punctuation ":" 7090 . 7091) (punctuation ":" 7091 . 7092) (symbol "once_flag" 7092 . 7101) (spp-symbol-merge ((spp-symbol-merge ((symbol "Initialize" 7102 . 7112) (symbol "agName" 7114 . 7120)) 7102 . 7120) (symbol "AnalysisGroupFlag" 7122 . 7139)) 7102 . 7139) (punctuation ";" 7139 . 7140) (VOID "void" 7160 . 7164) (symbol "llvm" 7165 . 7169) (punctuation ":" 7169 . 7170) (punctuation ":" 7170 . 7171) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 7171 . 7181) (symbol "agName" 7183 . 7189)) 7171 . 7189) (symbol "AnalysisGroup" 7191 . 7204)) 7171 . 7204) (semantic-list "(PassRegistry &Registry)" 7204 . 7228) (semantic-list "{       \\
    llvm::call_once(Initialize##agName##AnalysisGroupFlag,                     \\
                    initialize##agName##AnalysisGroupOnce,                     \\
                    std::ref(Registry));                                       \\
  }" 7229 . 7485)))
          ("INITIALIZE_PASS_WITH_OPTIONS_BEGIN" (spp-arg-list ("PassName" "Arg" "Name" "Cfg" "Analysis") 3567 . 3603) . 
              ((symbol "INITIALIZE_PASS_BEGIN" 3608 . 3629) (semantic-list "(PassName, Arg, Name, Cfg, Analysis)" 3629 . 3665) (symbol "PassName" 3689 . 3697) (punctuation ":" 3697 . 3698) (punctuation ":" 3698 . 3699) (symbol "registerOptions" 3699 . 3714) (semantic-list "()" 3714 . 3716) (punctuation ";" 3716 . 3717)))
          ("INITIALIZE_AG_PASS_END" (spp-arg-list ("passName" "agName" "arg" "n" "cfg" "analysis" "def") 9275 . 9321) . 
              ((symbol "PassInfo" 9328 . 9336) (punctuation "*" 9337 . 9338) (symbol "PI" 9338 . 9340) (punctuation "=" 9341 . 9342) (NEW "new" 9343 . 9346) (symbol "PassInfo" 9347 . 9355) (semantic-list "(                                                 \\
      n, arg, &passName::ID,                                                   \\
      PassInfo::NormalCtor_t(callDefaultCtor<passName>), cfg, analysis)" 9355 . 9559) (punctuation ";" 9559 . 9560) (symbol "Registry" 9571 . 9579) (punctuation "." 9579 . 9580) (symbol "registerPass" 9580 . 9592) (semantic-list "(*PI, true)" 9592 . 9603) (punctuation ";" 9603 . 9604) (symbol "PassInfo" 9733 . 9741) (punctuation "*" 9742 . 9743) (symbol "AI" 9743 . 9745) (punctuation "=" 9746 . 9747) (NEW "new" 9748 . 9751) (symbol "PassInfo" 9752 . 9760) (semantic-list "(n, &agName::ID)" 9760 . 9776) (punctuation ";" 9776 . 9777) (symbol "Registry" 9814 . 9822) (punctuation "." 9822 . 9823) (symbol "registerAnalysisGroup" 9823 . 9844) (semantic-list "(&agName::ID, &passName::ID, *AI, def, true)" 9844 . 9888) (punctuation ";" 9888 . 9889) (RETURN "return" 9895 . 9901) (symbol "AI" 9902 . 9904) (punctuation ";" 9904 . 9905) (close-paren "}" 9976 . 9977) (STATIC "static" 10057 . 10063) (symbol "llvm" 10064 . 10068) (punctuation ":" 10068 . 10069) (punctuation ":" 10069 . 10070) (symbol "once_flag" 10070 . 10079) (spp-symbol-merge ((spp-symbol-merge ((symbol "Initialize" 10080 . 10090) (symbol "passName" 10092 . 10100)) 10080 . 10100) (symbol "PassFlag" 10102 . 10110)) 10080 . 10110) (punctuation ";" 10110 . 10111) (VOID "void" 10138 . 10142) (symbol "llvm" 10143 . 10147) (punctuation ":" 10147 . 10148) (punctuation ":" 10148 . 10149) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 10149 . 10159) (symbol "passName" 10161 . 10169)) 10149 . 10169) (symbol "Pass" 10171 . 10175)) 10149 . 10175) (semantic-list "(PassRegistry &Registry)" 10175 . 10199) (semantic-list "{              \\
    llvm::call_once(Initialize##passName##PassFlag,                            \\
                    initialize##passName##PassOnce, std::ref(Registry));       \\
  }" 10200 . 10382)))
          ("INITIALIZE_AG_PASS_BEGIN" (spp-arg-list ("passName" "agName" "arg" "n" "cfg" "analysis" "def") 8982 . 9028) . 
              ((STATIC "static" 9033 . 9039) (VOID "void" 9040 . 9044) (punctuation "*" 9045 . 9046) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 9046 . 9056) (symbol "passName" 9058 . 9066)) 9046 . 9066) (symbol "PassOnce" 9068 . 9076)) 9046 . 9076) (semantic-list "(PassRegistry &Registry)" 9076 . 9100) (open-paren "{" 9101 . 9102) (IF "if" 9116 . 9118) (semantic-list "(!def)" 9119 . 9125) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 9199 . 9209) (symbol "agName" 9211 . 9217)) 9199 . 9217) (symbol "AnalysisGroup" 9219 . 9232)) 9199 . 9232) (semantic-list "(Registry)" 9232 . 9242) (punctuation ";" 9242 . 9243)))
          ("INITIALIZE_PASS_DEPENDENCY" (spp-arg-list ("depName") 2150 . 2159) . 
              ((spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 2160 . 2170) (symbol "depName" 2172 . 2179)) 2160 . 2179) (symbol "Pass" 2181 . 2185)) 2160 . 2185) (semantic-list "(Registry)" 2185 . 2195) (punctuation ";" 2195 . 2196)))
          ("INITIALIZE_AG_DEPENDENCY" (spp-arg-list ("depName") 2229 . 2238) . 
              ((spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 2280 . 2290) (symbol "depName" 2292 . 2299)) 2280 . 2299) (symbol "AnalysisGroup" 2301 . 2314)) 2280 . 2314) (semantic-list "(Registry)" 2314 . 2324) (punctuation ";" 2324 . 2325)))
          ("INITIALIZE_PASS_WITH_OPTIONS" (spp-arg-list ("PassName" "Arg" "Name" "Cfg" "Analysis") 3259 . 3295) . 
              ((symbol "INITIALIZE_PASS_BEGIN" 3306 . 3327) (semantic-list "(PassName, Arg, Name, Cfg, Analysis)" 3327 . 3363) (symbol "PassName" 3387 . 3395) (punctuation ":" 3395 . 3396) (punctuation ":" 3396 . 3397) (symbol "registerOptions" 3397 . 3412) (semantic-list "()" 3412 . 3414) (punctuation ";" 3414 . 3415) (symbol "INITIALIZE_PASS_END" 3468 . 3487) (semantic-list "(PassName, Arg, Name, Cfg, Analysis)" 3487 . 3523)))
          ("INITIALIZE_AG_PASS" (spp-arg-list ("passName" "agName" "arg" "name" "cfg" "analysis" "def") 7513 . 7562) . 
              ((STATIC "static" 7570 . 7576) (VOID "void" 7577 . 7581) (punctuation "*" 7582 . 7583) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 7583 . 7593) (symbol "passName" 7595 . 7603)) 7583 . 7603) (symbol "PassOnce" 7605 . 7613)) 7583 . 7613) (semantic-list "(PassRegistry &Registry)" 7613 . 7637) (semantic-list "{        \\
    if (!def)                                                                  \\
      initialize##agName##AnalysisGroup(Registry);                             \\
    PassInfo *PI = new PassInfo(                                               \\
        name, arg, &passName::ID,                                              \\
        PassInfo::NormalCtor_t(callDefaultCtor<passName>), cfg, analysis);     \\
    Registry.registerPass(*PI, true);                                          \\
                                                                               \\
    PassInfo *AI = new PassInfo(name, &agName::ID);                            \\
    Registry.registerAnalysisGroup(&agName::ID, &passName::ID, *AI, def,       \\
                                   true);                                      \\
    return AI;                                                                 \\
  }" 7638 . 8543) (STATIC "static" 8623 . 8629) (symbol "llvm" 8630 . 8634) (punctuation ":" 8634 . 8635) (punctuation ":" 8635 . 8636) (symbol "once_flag" 8636 . 8645) (spp-symbol-merge ((spp-symbol-merge ((symbol "Initialize" 8646 . 8656) (symbol "passName" 8658 . 8666)) 8646 . 8666) (symbol "PassFlag" 8668 . 8676)) 8646 . 8676) (punctuation ";" 8676 . 8677) (VOID "void" 8704 . 8708) (symbol "llvm" 8709 . 8713) (punctuation ":" 8713 . 8714) (punctuation ":" 8714 . 8715) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 8715 . 8725) (symbol "passName" 8727 . 8735)) 8715 . 8735) (symbol "Pass" 8737 . 8741)) 8715 . 8741) (semantic-list "(PassRegistry &Registry)" 8741 . 8765) (semantic-list "{              \\
    llvm::call_once(Initialize##passName##PassFlag,                            \\
                    initialize##passName##PassOnce, std::ref(Registry));       \\
  }" 8766 . 8948)))
          ("INITIALIZE_PASS_BEGIN" (spp-arg-list ("passName" "arg" "name" "cfg" "analysis") 1991 . 2027) . 
              ((STATIC "static" 2045 . 2051) (VOID "void" 2052 . 2056) (punctuation "*" 2057 . 2058) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 2058 . 2068) (symbol "passName" 2070 . 2078)) 2058 . 2078) (symbol "PassOnce" 2080 . 2088)) 2058 . 2088) (semantic-list "(PassRegistry &Registry)" 2088 . 2112) (open-paren "{" 2113 . 2114)))
          ("LLVM_PASSSUPPORT_H")
          ("INITIALIZE_PASS" (spp-arg-list ("passName" "arg" "name" "cfg" "analysis") 1008 . 1044) . 
              ((STATIC "static" 1068 . 1074) (VOID "void" 1075 . 1079) (punctuation "*" 1080 . 1081) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 1081 . 1091) (symbol "passName" 1093 . 1101)) 1081 . 1101) (symbol "PassOnce" 1103 . 1111)) 1081 . 1111) (semantic-list "(PassRegistry &Registry)" 1111 . 1135) (semantic-list "{        \\
    PassInfo *PI = new PassInfo(                                               \\
        name, arg, &passName::ID,                                              \\
        PassInfo::NormalCtor_t(callDefaultCtor<passName>), cfg, analysis);     \\
    Registry.registerPass(*PI, true);                                          \\
    return PI;                                                                 \\
  }" 1136 . 1555) (STATIC "static" 1635 . 1641) (symbol "llvm" 1642 . 1646) (punctuation ":" 1646 . 1647) (punctuation ":" 1647 . 1648) (symbol "once_flag" 1648 . 1657) (spp-symbol-merge ((spp-symbol-merge ((symbol "Initialize" 1658 . 1668) (symbol "passName" 1670 . 1678)) 1658 . 1678) (symbol "PassFlag" 1680 . 1688)) 1658 . 1688) (punctuation ";" 1688 . 1689) (VOID "void" 1716 . 1720) (symbol "llvm" 1721 . 1725) (punctuation ":" 1725 . 1726) (punctuation ":" 1726 . 1727) (spp-symbol-merge ((spp-symbol-merge ((symbol "initialize" 1727 . 1737) (symbol "passName" 1739 . 1747)) 1727 . 1747) (symbol "Pass" 1749 . 1753)) 1727 . 1753) (semantic-list "(PassRegistry &Registry)" 1753 . 1777) (semantic-list "{              \\
    llvm::call_once(Initialize##passName##PassFlag,                            \\
                    initialize##passName##PassOnce, std::ref(Registry));       \\
  }" 1778 . 1960)))
          )
)
    (semanticdb-table "semanticdb-table-155f7619952e"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_PASSINFO_H" variable (:constant-flag t) nil [546 561])
            ("llvm/ADT/StringRef.h" include nil nil [563 594])
            ("cassert" include (:system-flag t) nil [595 613])
            ("vector" include (:system-flag t) nil [614 631])
            ("llvm" type
               (:members 
                  ( ("Pass" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [651 662])
                    ("PassInfo" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1000 1007])
                            ("NormalCtor_t" variable
                               (:default-value "Pass* (*)()"
                                :type "int")
                                (reparse-symbol classsubparts) [1016 1043])
                            ("private" label nil (reparse-symbol classsubparts) [1045 1053])
                            ("PassName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1056 1075])
                            ("PassArgument" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1104 1127])
                            ("PassID" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1172 1191])
                            ("IsCFGOnlyPass" variable
                               (:constant-flag t
                                :default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [1194 1227])
                            ("IsAnalysis" variable
                               (:constant-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1266 1288])
                            ("IsAnalysisGroup" variable
                               (:constant-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1336 1363])
                            ("ItfImpl" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("PassInfo" type
                                         (:pointer 1
                                          :constant-flag t)
                                          nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1407 1445])
                            ("NormalCtor" variable
                               (:default-value "nullptr"
                                :type ("NormalCtor_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1487 1521])
                            ("public" label nil (reparse-symbol classsubparts) [1523 1530])
                            ("PassInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1647 1662])
                                    ("arg" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1663 1677])
                                    ("pi" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [1678 1693])
                                    ("normal" variable (:type ("NormalCtor_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1694 1714])
                                    ("isCFGOnly" variable (:type "bool") (reparse-symbol arg-sub-list) [1726 1741])
                                    ("is_analysis" variable (:type "bool") (reparse-symbol arg-sub-list) [1742 1759]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1638 1919])
                            ("PassInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2123 2138])
                                    ("pi" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2139 2154]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2114 2234])
                            ("getPassName" function
                               (:methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2406 2456])
                            ("getPassArgument" function
                               (:methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2640 2698])
                            ("getTypeInfo" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2779 2829])
                            ("isPassID" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("IDPtr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2917 2935]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2903 2969])
                            ("isAnalysisGroup" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3064 3120])
                            ("isAnalysis" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3123 3169])
                            ("isCFGOnlyPass" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3266 3318])
                            ("getNormalCtor" function
                               (:methodconst-flag t
                                :type ("NormalCtor_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3529 3592])
                            ("setNormalCtor" function
                               (:arguments 
                                  ( ("Ctor" variable (:type ("NormalCtor_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3614 3632]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3595 3661])
                            ("createPass" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("Pass" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3738 4006])
                            ("addInterfaceImplemented" function
                               (:arguments 
                                  ( ("ItfPI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4208 4230]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4179 4266])
                            ("getInterfacesImplemented" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("PassInfo" type
                                             (:pointer 1
                                              :constant-flag t)
                                              nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4389 4483]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [983 4486]))                  
                :type "namespace")
                nil [633 4489]))          
      :file "PassInfo.h"
      :pointmax 4539
      :fsize 4538
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((punctuation 2323 . 2324) (DELETE 2317 . 2323) (punctuation 2315 . 2316) (semantic-list 2296 . 2314) (punctuation 2295 . 2296) (OPERATOR 2287 . 2295) (punctuation 2286 . 2287) (symbol 2277 . 2285) (punctuation 2273 . 2274) (DELETE 2267 . 2273) (punctuation 2265 . 2266) (semantic-list 2246 . 2264) (symbol 2238 . 2246) (USING 1010 . 1015))
      :lexical-table 
        '(("LLVM_PASSINFO_H")
          )
)
    (semanticdb-table "semanticdb-table-155f7619954e"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_PASSREGISTRY_H" variable (:constant-flag t) nil [767 786])
            ("llvm/ADT/DenseMap.h" include nil nil [788 818])
            ("llvm/ADT/StringMap.h" include nil nil [819 850])
            ("llvm/ADT/StringRef.h" include nil nil [851 882])
            ("llvm/Support/CBindingWrapping.h" include nil nil [883 925])
            ("llvm/Support/RWMutex.h" include nil nil [926 959])
            ("memory" include (:system-flag t) nil [960 977])
            ("vector" include (:system-flag t) nil [978 995])
            ("llvm" type
               (:members 
                  ( ("PassInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1015 1030])
                    ("PassRegistrationListener" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1031 1063])
                    ("PassRegistry" type
                       (:members 
                          ( ("Lock" variable
                               (:typemodifiers ("mutable")
                                :type ("sys::SmartRWMutex" type
                                     (:template-specifier 
                                        ( ("true" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1450 1487])
                            ("DenseMap" variable (:type "int") (reparse-symbol classsubparts) [1587 1628])
                            ("PassInfoMap" variable (:type ("MapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1631 1651])
                            ("StringMap" variable (:type "int") (reparse-symbol classsubparts) [1677 1705])
                            ("PassInfoStringMap" variable (:type ("StringMapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1708 1740])
                            ("ToFree" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::unique_ptr" type (:template-specifier 
                                        ( ("PassInfo" type (:constant-flag t) nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1744 1796])
                            ("Listeners" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("PassRegistrationListener" type (:pointer 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1799 1849])
                            ("public" label nil (reparse-symbol classsubparts) [1851 1858])
                            ("PassRegistry" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1889 1905])
                            ("getPassRegistry" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :type ("PassRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2069 2108])
                            ("getPassInfo" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("TI" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2258 2273]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2230 2280])
                            ("getPassInfo" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Arg" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2416 2430]))                                  
                                :type ("PassInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2388 2437])
                            ("registerPass" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("PI" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2603 2622])
                                    ("ShouldFree" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [2623 2646]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2585 2648])
                            ("registerAnalysisGroup" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("InterfaceID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2907 2931])
                                    ("PassID" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2932 2951])
                                    ("Registeree" variable
                                       (:reference 1
                                        :type ("PassInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2981 3002])
                                    ("isDefault" variable (:type "bool") (reparse-symbol arg-sub-list) [3003 3018])
                                    ("ShouldFree" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [3048 3071]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2880 3073])
                            ("enumerateWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("PassRegistrationListener" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3247 3275]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3228 3276])
                            ("addRegistrationListener" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("PassRegistrationListener" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3464 3492]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3435 3493])
                            ("removeRegistrationListener" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("L" variable
                                       (:pointer 1
                                        :type ("PassRegistrationListener" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3666 3694]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3634 3695]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1427 3698]))                  
                :type "namespace")
                nil [997 3837]))          
      :file "PassRegistry.h"
      :pointmax 3891
      :fsize 3890
      :lastmodtime '(24013 11271 0 0)
      :unmatched-syntax '((semantic-list 3799 . 3834) (symbol 3765 . 3799) (punctuation 1885 . 1886) (DEFAULT 1878 . 1885) (punctuation 1876 . 1877) (semantic-list 1873 . 1875) (symbol 1861 . 1873) (punctuation 1675 . 1676) (symbol 1661 . 1674) (USING 1655 . 1660) (punctuation 1585 . 1586) (symbol 1577 . 1584) (USING 1571 . 1576))
      :lexical-table 
        '(("LLVM_PASSREGISTRY_H")
          )
))
  :file "!usr!include!llvm-10!llvm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
