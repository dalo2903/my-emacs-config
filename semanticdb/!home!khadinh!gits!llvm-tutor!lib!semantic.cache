;; Object semanticdb-project-database-file-1559f7e1ab0e
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1559f7e1ab0e"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1559f7e1aa8e"
      :major-mode c++-mode
      :tags 
        '( ("DynamicCallCounter.h" include nil nil [2192 2223])
            ("llvm/IR/IRBuilder.h" include nil nil [2225 2255])
            ("llvm/Passes/PassBuilder.h" include nil nil [2256 2292])
            ("llvm/Passes/PassPlugin.h" include nil nil [2293 2328])
            ("llvm/Transforms/Utils/ModuleUtils.h" include nil nil [2329 2375])
            ("llvm" using (:type ("llvm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2377 2398])
            ("DEBUG_TYPE" variable (:constant-flag t) nil [2408 2418])
            ("CreateGlobalCounter" function
               (:pointer 1
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2463 2473])
                    ("GlobalVarName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2474 2498]))                  
                :type ("Constant" type (:type "class") nil nil))
                nil [2433 2990])
            ("runOnModule" function
               (:parent "DynamicCallCounter"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3226 3236]))                  
                :type "bool")
                nil [3189 8681])
            ("run" function
               (:parent "DynamicCallCounter"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("llvm::Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8725 8741])
                    ("" variable
                       (:reference 1
                        :type ("llvm::ModuleAnalysisManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8784 8814]))                  
                :type ("PreservedAnalyses" type (:type "class") nil nil))
                nil [8683 8957])
            ("runOnModule" function
               (:parent "LegacyDynamicCallCounter"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("llvm::Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9002 9018]))                  
                :type "bool")
                nil [8959 9079])
            ("getDynamicCallCounterPluginInfo" function (:type ("llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [9264 9819])
            ("llvmGetPassPluginInfo" function (:type ("LLVM_ATTRIBUTE_WEAK::llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [9832 9953])
            ("LegacyDynamicCallCounter::ID" variable
               (:default-value "0"
                :type "char")
                nil [10141 10179])
            ("X" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10382 10388])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10411 10417]))                  
                :type ("RegisterPass" type
                     (:template-specifier 
                        ( ("LegacyDynamicCallCounter" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [10236 10418]))          
      :file "DynamicCallCounter.cpp"
      :pointmax 10419
      :fsize 10418
      :lastmodtime '(24391 25506 867808 453000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DEBUG_TYPE" . ((string "\"dynamic-cc\"" 2419 . 2431)))
          )
)
    (semanticdb-table "semanticdb-table-1559f7e1aaae"
      :major-mode c++-mode
      :tags 
        '( ("MBAAdd.h" include nil nil [967 986])
            ("llvm/ADT/Statistic.h" include nil nil [988 1019])
            ("llvm/IR/IRBuilder.h" include nil nil [1020 1050])
            ("llvm/Passes/PassBuilder.h" include nil nil [1051 1087])
            ("llvm/Passes/PassPlugin.h" include nil nil [1088 1123])
            ("llvm/Transforms/Utils/BasicBlockUtils.h" include nil nil [1124 1174])
            ("Ratio.h" include nil nil [1176 1194])
            ("random" include (:system-flag t) nil [1196 1213])
            ("llvm" using (:type ("llvm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1215 1236])
            ("DEBUG_TYPE" variable (:constant-flag t) nil [1246 1256])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SubstCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1278 1289]))                  
                :type "int")
                nil [1268 1327])
            ("MBARatio" variable
               (:typemodifiers ("static")
                :type ("cl::opt" type
                     (:template-specifier 
                        ( ("Ratio" type nil nil nil)
                          ("false" type nil nil nil)
                          ("llvm::cl::parser" type (:template-specifier 
                            ( ("Ratio" type nil nil nil))                            ) nil nil))                        
                      :type "class")
                      nil nil))
                nil [1356 1564])
            ("runOnBasicBlock" function
               (:parent "MBAAdd"
                :arguments 
                  ( ("BB" variable
                       (:reference 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1780 1795]))                  
                :type "bool")
                nil [1751 5294])
            ("run" function
               (:parent "MBAAdd"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("llvm::Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5326 5344])
                    ("" variable
                       (:reference 1
                        :type ("llvm::FunctionAnalysisManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5375 5407]))                  
                :type ("PreservedAnalyses" type (:type "class") nil nil))
                nil [5296 5604])
            ("runOnFunction" function
               (:parent "LegacyMBAAdd"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("llvm::Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5639 5657]))                  
                :type "bool")
                nil [5606 5772])
            ("getMBAAddPluginInfo" function (:type ("llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [5957 6484])
            ("llvmGetPassPluginInfo" function (:type ("LLVM_ATTRIBUTE_WEAK::llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [6497 6606])
            ("LegacyMBAAdd::ID" variable
               (:default-value "0"
                :type "char")
                nil [6794 6820])
            ("X" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6991 6996])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7049 7055]))                  
                :type ("RegisterPass" type
                     (:template-specifier 
                        ( ("LegacyMBAAdd" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [6822 7056]))          
      :file "MBAAdd.cpp"
      :pointmax 7057
      :fsize 7056
      :lastmodtime '(24391 25506 867808 453000)
      :unmatched-syntax '((string 6933 . 6941) (string 6870 . 6886) (string 1290 . 1325))
      :lexical-table 
        '(("DEBUG_TYPE" . ((string "\"mba-add\"" 1257 . 1266)))
          )
)
    (semanticdb-table "semanticdb-table-1559f7e1aace"
      :major-mode c++-mode
      :tags 
        '( ("InjectFuncCall.h" include nil nil [1267 1294])
            ("llvm/IR/IRBuilder.h" include nil nil [1296 1326])
            ("llvm/Passes/PassPlugin.h" include nil nil [1327 1362])
            ("llvm/Passes/PassBuilder.h" include nil nil [1363 1399])
            ("llvm" using (:type ("llvm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1401 1422])
            ("DEBUG_TYPE" variable (:constant-flag t) nil [1432 1442])
            ("runOnModule" function
               (:parent "InjectFuncCall"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1689 1699]))                  
                :type "bool")
                nil [1656 4287])
            ("run" function
               (:parent "InjectFuncCall"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("llvm::Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4327 4343])
                    ("" variable
                       (:reference 1
                        :type ("llvm::ModuleAnalysisManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4383 4413]))                  
                :type ("PreservedAnalyses" type (:type "class") nil nil))
                nil [4289 4557])
            ("runOnModule" function
               (:parent "LegacyInjectFuncCall"
                :arguments 
                  ( ("M" variable
                       (:reference 1
                        :type ("llvm::Module" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4598 4614]))                  
                :type "bool")
                nil [4559 4675])
            ("getInjectFuncCallPluginInfo" function (:type ("llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [4860 5419])
            ("llvmGetPassPluginInfo" function (:type ("LLVM_ATTRIBUTE_WEAK::llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [5432 5549])
            ("LegacyInjectFuncCall::ID" variable
               (:default-value "0"
                :type "char")
                nil [5737 5771])
            ("X" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5966 5972])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5989 5995]))                  
                :type ("RegisterPass" type
                     (:template-specifier 
                        ( ("LegacyInjectFuncCall" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [5828 5996]))          
      :file "InjectFuncCall.cpp"
      :pointmax 5997
      :fsize 5996
      :lastmodtime '(24391 25506 867808 453000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DEBUG_TYPE" . ((string "\"inject-func-call\"" 1443 . 1461)))
          )
)
    (semanticdb-table "semanticdb-table-1559f7e1aaee"
      :major-mode c++-mode
      :tags 
        '( ("DuplicateBB.h" include nil nil [4614 4638])
            ("llvm/ADT/Statistic.h" include nil nil [4640 4671])
            ("llvm/IR/IRBuilder.h" include nil nil [4672 4702])
            ("llvm/Passes/PassBuilder.h" include nil nil [4703 4739])
            ("llvm/Passes/PassPlugin.h" include nil nil [4740 4775])
            ("llvm/Transforms/Utils/BasicBlockUtils.h" include nil nil [4776 4826])
            ("llvm/Transforms/Utils/Cloning.h" include nil nil [4827 4869])
            ("random" include (:system-flag t) nil [4871 4888])
            ("DEBUG_TYPE" variable (:constant-flag t) nil [4898 4908])
            ("STATISTIC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DuplicateBBCountStats" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4935 4957]))                  
                :type "int")
                nil [4925 4988])
            ("llvm" using (:type ("llvm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [4990 5011])
            ("findBBsToDuplicate" function
               (:parent "DuplicateBB"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5267 5279])
                    ("RIVResult" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RIV::Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5280 5309]))                  
                :type ("DuplicateBB::BBToSingleRIVMap" type (:type "class") nil nil))
                nil [5205 7018])
            ("cloneBB" function
               (:parent "DuplicateBB"
                :arguments 
                  ( ("BB" variable
                       (:reference 1
                        :type ("BasicBlock" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7046 7061])
                    ("ContextValue" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7062 7082])
                    ("ReMapper" variable
                       (:reference 1
                        :type ("ValueToPhiMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7109 7133]))                  
                :type "void")
                nil [7020 10845])
            ("run" function
               (:parent "DuplicateBB"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("llvm::Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10882 10900])
                    ("FAM" variable
                       (:reference 1
                        :type ("llvm::FunctionAnalysisManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10936 10971]))                  
                :type ("PreservedAnalyses" type (:type "class") nil nil))
                nil [10847 11482])
            ("runOnFunction" function
               (:parent "LegacyDuplicateBB"
                :arguments 
                  ( ("F" variable
                       (:reference 1
                        :type ("llvm::Function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11522 11540]))                  
                :type "bool")
                nil [11484 12062])
            ("getDuplicateBBPluginInfo" function (:type ("llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [12249 12796])
            ("llvmGetPassPluginInfo" function (:type ("LLVM_ATTRIBUTE_WEAK::llvm::PassPluginLibraryInfo" type (:type "class") nil nil)) nil [12809 12923])
            ("getAnalysisUsage" function
               (:methodconst-flag t
                :parent "LegacyDuplicateBB"
                :arguments 
                  ( ("Info" variable
                       (:reference 1
                        :type ("AnalysisUsage" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13219 13239]))                  
                :type "void")
                nil [13178 13282])
            ("LegacyDuplicateBB::ID" variable
               (:default-value "0"
                :type "char")
                nil [13284 13315])
            ("X" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13526 13532])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13590 13596]))                  
                :type ("RegisterPass" type
                     (:template-specifier 
                        ( ("LegacyDuplicateBB" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [13316 13597]))          
      :file "DuplicateBB.cpp"
      :pointmax 13598
      :fsize 13597
      :lastmodtime '(24391 25506 867808 453000)
      :unmatched-syntax '((string 13442 . 13471) (string 13369 . 13390) (string 4958 . 4986))
      :lexical-table 
        '(("DEBUG_TYPE" . ((string "\"duplicate-bb\"" 4909 . 4923)))
          )
))
  :file "!home!khadinh!gits!llvm-tutor!lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
